org.apache.zeppelin.display.AngularObjectRegistry.remove : $r8 = r0.<org.apache.zeppelin.display.AngularObjectRegistry: java.util.Map registry>
org.apache.zeppelin.display.AngularObjectRegistry.remove : $r9 = interfaceinvoke r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1)
org.apache.zeppelin.display.AngularObjectRegistry.remove : exitmonitor r4
org.apache.zeppelin.display.AngularObjectRegistry.remove : $r10 = r0.<org.apache.zeppelin.display.AngularObjectRegistry: org.apache.zeppelin.display.AngularObjectRegistryListener listener>
org.apache.zeppelin.display.AngularObjectRegistry.remove : r5 = specialinvoke r0.<org.apache.zeppelin.display.AngularObjectRegistry: java.util.Map getRegistryForKey(java.lang.String,java.lang.String)>(r2, r3)
org.apache.zeppelin.dep.AbstractDependencyResolver.addRepo : $r8 = r0.<org.apache.zeppelin.dep.AbstractDependencyResolver: java.util.List repos>
org.apache.zeppelin.dep.AbstractDependencyResolver.addRepo : $r15 = r0.<org.apache.zeppelin.dep.AbstractDependencyResolver: java.util.List repos>
org.apache.zeppelin.dep.AbstractDependencyResolver.addRepo : virtualinvoke r6.<org.sonatype.aether.repository.RemoteRepository: org.sonatype.aether.repository.RemoteRepository setProxy(org.sonatype.aether.repository.Proxy)>(r4)
org.apache.zeppelin.dep.AbstractDependencyResolver.addRepo : exitmonitor r5
org.apache.zeppelin.dep.AbstractDependencyResolver.addRepo : $r11 = new org.sonatype.aether.repository.RepositoryPolicy
org.apache.zeppelin.dep.AbstractDependencyResolver.addRepo : $r10 = new org.sonatype.aether.repository.RemoteRepository
org.apache.zeppelin.dep.AbstractDependencyResolver.addRepo : virtualinvoke r6.<org.sonatype.aether.repository.RemoteRepository: org.sonatype.aether.repository.RemoteRepository setAuthentication(org.sonatype.aether.repository.Authentication)>(r3)
org.apache.zeppelin.dep.AbstractDependencyResolver.addRepo : virtualinvoke r0.<org.apache.zeppelin.dep.AbstractDependencyResolver: org.sonatype.aether.repository.RemoteRepository delRepo(java.lang.String)>(r1)
org.apache.zeppelin.display.AngularObjectRegistry.getRegistryForKey : $r8 = r0.<org.apache.zeppelin.display.AngularObjectRegistry: java.util.Map registry>
org.apache.zeppelin.display.AngularObjectRegistry.getRegistryForKey : $r7 = r0.<org.apache.zeppelin.display.AngularObjectRegistry: java.util.Map registry>
org.apache.zeppelin.display.AngularObjectRegistry.getRegistryForKey : $r11 = r0.<org.apache.zeppelin.display.AngularObjectRegistry: java.util.Map registry>
org.apache.zeppelin.display.AngularObjectRegistry.getRegistryForKey : r4 = specialinvoke r0.<org.apache.zeppelin.display.AngularObjectRegistry: java.lang.String getRegistryKey(java.lang.String,java.lang.String)>(r1, r2)
org.apache.zeppelin.display.AngularObjectRegistry.getRegistryForKey : $r6 = r0.<org.apache.zeppelin.display.AngularObjectRegistry: java.util.Map registry>
org.apache.zeppelin.dep.RepositorySystemFactory.newRepositorySystem : $r5 = newarray (org.sonatype.aether.connector.wagon.WagonProvider)[1]
org.apache.zeppelin.dep.RepositorySystemFactory.newRepositorySystem : $r0 = new org.apache.maven.repository.internal.DefaultServiceLocator
org.apache.zeppelin.dep.RepositorySystemFactory.newRepositorySystem : virtualinvoke r1.<org.apache.maven.repository.internal.DefaultServiceLocator: org.sonatype.aether.impl.internal.DefaultServiceLocator addService(java.lang.Class,java.lang.Class)>(class "org/sonatype/aether/spi/connector/RepositoryConnectorFactory", class "org/sonatype/aether/connector/file/FileRepositoryConnectorFactory")
org.apache.zeppelin.dep.RepositorySystemFactory.newRepositorySystem : $r7 = virtualinvoke r1.<org.apache.maven.repository.internal.DefaultServiceLocator: java.lang.Object getService(java.lang.Class)>(class "org/sonatype/aether/RepositorySystem")
org.apache.zeppelin.dep.RepositorySystemFactory.newRepositorySystem : virtualinvoke r1.<org.apache.maven.repository.internal.DefaultServiceLocator: org.sonatype.aether.impl.internal.DefaultServiceLocator addService(java.lang.Class,java.lang.Class)>(class "org/sonatype/aether/spi/connector/RepositoryConnectorFactory", class "org/sonatype/aether/connector/wagon/WagonRepositoryConnectorFactory")
org.apache.zeppelin.dep.Booter.newCentralRepository : $r1 = new org.sonatype.aether.repository.RemoteRepository
org.apache.zeppelin.dep.Booter.newCentralRepository : if r0 != null goto $r1 = new org.sonatype.aether.repository.RemoteRepository
org.apache.zeppelin.dep.Booter.newCentralRepository : r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("zeppelin.interpreter.dep.mvnRepo")
org.apache.zeppelin.dep.Booter.newCentralRepository : r0 = "http://repo1.maven.org/maven2/"
org.apache.zeppelin.dep.Booter.newCentralRepository : r0 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("ZEPPELIN_INTERPRETER_DEP_MVNREPO")
org.apache.zeppelin.dep.Booter.newCentralRepository : if r0 != null goto (branch)
org.apache.zeppelin.dep.AbstractDependencyResolver.delRepo : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.dep.AbstractDependencyResolver.delRepo : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.dep.AbstractDependencyResolver.delRepo : $r7 = r0.<org.apache.zeppelin.dep.AbstractDependencyResolver: java.util.List repos>
org.apache.zeppelin.dep.AbstractDependencyResolver.delRepo : return null
org.apache.zeppelin.dep.AbstractDependencyResolver.delRepo : exitmonitor r2
org.apache.zeppelin.dep.AbstractDependencyResolver.delRepo : $r6 = r0.<org.apache.zeppelin.dep.AbstractDependencyResolver: java.util.List repos>
org.apache.zeppelin.dep.AbstractDependencyResolver.delRepo : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()", "org.apache.zeppelin.dep.AbstractDependencyResolver.delRepo")]
org.apache.zeppelin.dep.AbstractDependencyResolver.delRepo : $r9 = virtualinvoke r4.<org.sonatype.aether.repository.RemoteRepository: java.lang.String getId()>()
org.apache.zeppelin.dep.Booter.newRepositorySystemSession : $r7 = interfaceinvoke r0.<org.sonatype.aether.RepositorySystem: org.sonatype.aether.repository.LocalRepositoryManager newLocalRepositoryManager(org.sonatype.aether.repository.LocalRepository)>(r3)
org.apache.zeppelin.dep.Booter.newRepositorySystemSession : return r2
org.apache.zeppelin.dep.Booter.newRepositorySystemSession : staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "localRepoPath should have a value")
org.apache.zeppelin.dep.Booter.newRepositorySystemSession : $r5 = new org.sonatype.aether.repository.LocalRepository
org.apache.zeppelin.dep.Booter.newRepositorySystemSession : $r4 = new org.apache.maven.repository.internal.MavenRepositorySystemSession
org.apache.zeppelin.display.AngularObjectRegistry.getRegistryKey : $r3 = new java.lang.StringBuilder
org.apache.zeppelin.display.AngularObjectRegistry.getRegistryKey : if r1 != null goto (branch)
org.apache.zeppelin.display.AngularObjectRegistry.getRegistryKey : if r2 != null goto $r3 = new java.lang.StringBuilder
org.apache.zeppelin.resource.LocalResourcePool.get : $r7 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.util.Map resources>
org.apache.zeppelin.resource.LocalResourcePool.get : $r4 = new org.apache.zeppelin.resource.ResourceId
org.apache.zeppelin.dep.Booter.resolveLocalRepoPath : r1 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("ZEPPELIN_HOME")
org.apache.zeppelin.dep.Booter.resolveLocalRepoPath : r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("zeppelin.home")
org.apache.zeppelin.dep.Booter.resolveLocalRepoPath : $r2 = newarray (java.lang.String)[0]
org.apache.zeppelin.dep.Booter.resolveLocalRepoPath : if r1 != null goto (branch)
org.apache.zeppelin.dep.Booter.resolveLocalRepoPath : r1 = ".."
org.apache.zeppelin.dep.Booter.resolveLocalRepoPath : if r1 != null goto $r2 = newarray (java.lang.String)[0]
org.apache.zeppelin.dep.Booter.newRepositorySystem : $r0 = staticinvoke <org.apache.zeppelin.dep.RepositorySystemFactory: org.sonatype.aether.RepositorySystem newRepositorySystem()>()
org.apache.zeppelin.dep.Booter.newLocalRepository : $r0 = new org.sonatype.aether.repository.RemoteRepository
org.apache.zeppelin.dep.Booter.newLocalRepository : $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home")
