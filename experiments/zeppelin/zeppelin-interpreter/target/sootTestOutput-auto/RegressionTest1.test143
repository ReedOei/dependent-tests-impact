org.apache.zeppelin.interpreter.remote.AppendOutputBuffer.getNoteId : $r1 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputBuffer: java.lang.String noteId>
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : r7 = virtualinvoke r6.<org.apache.zeppelin.interpreter.remote.AppendOutputBuffer: java.lang.String getNoteId()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r24 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r22 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputRunner: java.util.concurrent.BlockingQueue queue>
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10)
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : r8 = virtualinvoke r6.<org.apache.zeppelin.interpreter.remote.AppendOutputBuffer: java.lang.String getParagraphId()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : goto [?= $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()]
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $z2 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r9)
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $l9 = virtualinvoke r50.<java.lang.Long: long longValue()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r12 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputRunner: java.util.concurrent.BlockingQueue queue>
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : i0 = virtualinvoke r6.<org.apache.zeppelin.interpreter.remote.AppendOutputBuffer: int getIndex()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r55 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r54)
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r11 = new java.util.LinkedList
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r51 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r32 = virtualinvoke r6.<org.apache.zeppelin.interpreter.remote.AppendOutputBuffer: java.lang.String getData()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : r57 = virtualinvoke r54.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r43 = <org.apache.zeppelin.interpreter.remote.AppendOutputRunner: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r1 = new java.util.HashMap
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r58 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputRunner: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener listener>
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r49 = new java.lang.Long
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $l6 = virtualinvoke r35.<java.lang.Long: long longValue()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.AppendOutputBuffer.getIndex : $i0 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputBuffer: int index>
org.apache.zeppelin.interpreter.remote.AppendOutputBuffer.getData : $r1 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputBuffer: java.lang.String data>
org.apache.zeppelin.interpreter.remote.AppendOutputBuffer.getParagraphId : $r1 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputBuffer: java.lang.String paragraphId>
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.appendBuffer : $r5 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputRunner: java.util.concurrent.BlockingQueue queue>
