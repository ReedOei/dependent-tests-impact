org.apache.zeppelin.interpreter.InterpreterGroup.getId : $r5 = staticinvoke <org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String generateId()>()
org.apache.zeppelin.interpreter.InterpreterGroup.getId : $r4 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String id>
org.apache.zeppelin.interpreter.InterpreterGroup.getId : r2 = r0
org.apache.zeppelin.interpreter.InterpreterGroup.getId : $r6 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String id>
org.apache.zeppelin.interpreter.InterpreterGroup.getInterpreterHookRegistry : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.InterpreterHookRegistry hookRegistry>
org.apache.zeppelin.interpreter.InterpreterGroup.setInterpreterHookRegistry : r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.InterpreterHookRegistry hookRegistry> = r1
org.apache.zeppelin.interpreter.InterpreterGroup.close : if r4 != null goto $r7 = new org.apache.zeppelin.interpreter.InterpreterGroup$1
org.apache.zeppelin.interpreter.InterpreterGroup.close : specialinvoke r0.<org.apache.zeppelin.interpreter.InterpreterGroup: void close(java.util.Collection)>(r4)
org.apache.zeppelin.interpreter.InterpreterGroup.close : $r2 = <org.apache.zeppelin.interpreter.InterpreterGroup: org.slf4j.Logger LOGGER>
org.apache.zeppelin.interpreter.InterpreterGroup.close : specialinvoke r0.<org.apache.zeppelin.interpreter.InterpreterGroup: void close(java.util.Map,java.lang.String,java.lang.String,java.util.Collection)>(null, null, null, r1)
org.apache.zeppelin.interpreter.InterpreterGroup.close : $r11 = virtualinvoke r0.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption : $z2 = r0.<org.apache.zeppelin.interpreter.InterpreterOption: boolean setPermission>
org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption : return r2
org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption : $r7 = r0.<org.apache.zeppelin.interpreter.InterpreterOption: java.util.List users>
org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption : $z1 = r0.<org.apache.zeppelin.interpreter.InterpreterOption: boolean isExistingProcess>
org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption : $z0 = r0.<org.apache.zeppelin.interpreter.InterpreterOption: boolean remote>
org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption : $r5 = r0.<org.apache.zeppelin.interpreter.InterpreterOption: java.lang.String perUser>
org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption : $r3 = r0.<org.apache.zeppelin.interpreter.InterpreterOption: java.lang.String host>
org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption : $r1 = new org.apache.zeppelin.interpreter.InterpreterOption
org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption : $i0 = r0.<org.apache.zeppelin.interpreter.InterpreterOption: int port>
org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption : $r4 = r0.<org.apache.zeppelin.interpreter.InterpreterOption: java.lang.String perNote>
org.apache.zeppelin.interpreter.InterpreterGroup.getResourcePool : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.resource.ResourcePool resourcePool>
org.apache.zeppelin.interpreter.InterpreterGroup.generateId : $i1 = virtualinvoke $r4.<java.util.Random: int nextInt()>()
org.apache.zeppelin.interpreter.InterpreterGroup.generateId : $r0 = new java.lang.StringBuilder
