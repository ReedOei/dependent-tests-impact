org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.run : $r1 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.run : $i0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: int port>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.run : $i0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: int port> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.run : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.run : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.run : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Starting remote interpreter server on port {}", $r2)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.run : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Starting remote interpreter server on port {}", $r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.run : $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.thrift.server.TThreadPoolServer server>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.run : $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.thrift.server.TThreadPoolServer server> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.run : virtualinvoke $r3.<org.apache.thrift.server.TThreadPoolServer: void serve()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.run : virtualinvoke $r3.<org.apache.thrift.server.TThreadPoolServer: void serve()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.run : return
