org.apache.zeppelin.display.Input.getType : r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([^:()]*)\\s*([(][^()]*[)])?\\s*:(.*)") >>>>>>>> org.apache.zeppelin.display.Input.getType : $r4 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.display.Input.getType : $r4 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.display.Input.getType : r2 = virtualinvoke r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4)
org.apache.zeppelin.display.Input.getType : r2 = virtualinvoke r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4) >>>>>>>> org.apache.zeppelin.display.Input.getType : if r2 == null
org.apache.zeppelin.display.Input.getType : if r2 == null >>>>>>>> org.apache.zeppelin.display.Input.getType : $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>()
org.apache.zeppelin.display.Input.getType : if r2 == null >>>>>>>> org.apache.zeppelin.display.Input.getType : return null
org.apache.zeppelin.display.Input.getType : $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>() >>>>>>>> org.apache.zeppelin.display.Input.getType : if $z0 != 0
org.apache.zeppelin.display.Input.getType : if $z0 != 0 >>>>>>>> org.apache.zeppelin.display.Input.getType : return null
org.apache.zeppelin.display.Input.getType : if $z0 != 0 >>>>>>>> org.apache.zeppelin.display.Input.getType : r3 = newarray (java.lang.String)[3]
org.apache.zeppelin.display.Input.getType : r3 = newarray (java.lang.String)[3] >>>>>>>> org.apache.zeppelin.display.Input.getType : $r5 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.zeppelin.display.Input.getType : $r5 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.zeppelin.display.Input.getType : $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.display.Input.getType : $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.display.Input.getType : r3[0] = $r6
org.apache.zeppelin.display.Input.getType : r3[0] = $r6 >>>>>>>> org.apache.zeppelin.display.Input.getType : $r7 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.zeppelin.display.Input.getType : $r7 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2) >>>>>>>> org.apache.zeppelin.display.Input.getType : if $r7 == null
org.apache.zeppelin.display.Input.getType : if $r7 == null >>>>>>>> org.apache.zeppelin.display.Input.getType : $r8 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.zeppelin.display.Input.getType : if $r7 == null >>>>>>>> org.apache.zeppelin.display.Input.getType : $r11 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(3)
org.apache.zeppelin.display.Input.getType : $r11 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(3) >>>>>>>> org.apache.zeppelin.display.Input.getType : $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.display.Input.getType : $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.display.Input.getType : r3[2] = $r12
org.apache.zeppelin.display.Input.getType : r3[2] = $r12 >>>>>>>> org.apache.zeppelin.display.Input.getType : return r3
org.apache.zeppelin.display.Input.getType : $r8 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2) >>>>>>>> org.apache.zeppelin.display.Input.getType : $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.display.Input.getType : $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.display.Input.getType : $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[()]", "")
org.apache.zeppelin.display.Input.getType : $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[()]", "") >>>>>>>> org.apache.zeppelin.display.Input.getType : r3[1] = $r10
org.apache.zeppelin.display.Input.getType : r3[1] = $r10 >>>>>>>> org.apache.zeppelin.display.Input.getType : $r11 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(3)
