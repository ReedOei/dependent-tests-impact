org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r8 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("run application {}", r1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("run application {}", r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: java.util.Map runningApplications>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: java.util.Map runningApplications> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r2 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$RunningApplication) $r10
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r2 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$RunningApplication) $r10 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : if r2 != null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : if r2 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : if r2 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r13 = r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$RunningApplication: org.apache.zeppelin.helium.Application app>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r13 = r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$RunningApplication: org.apache.zeppelin.helium.Application app> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r3 = virtualinvoke $r13.<org.apache.zeppelin.helium.Application: org.apache.zeppelin.helium.ApplicationContext context()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r3 = virtualinvoke $r13.<org.apache.zeppelin.helium.Application: org.apache.zeppelin.helium.ApplicationContext context()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r14 = r3.<org.apache.zeppelin.helium.ApplicationContext: org.apache.zeppelin.interpreter.InterpreterOutput out>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r3 = virtualinvoke $r13.<org.apache.zeppelin.helium.Application: org.apache.zeppelin.helium.ApplicationContext context()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r40 = $r39 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r41 = new org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r41 = new org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r42 = virtualinvoke r40.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r42 = virtualinvoke r40.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : specialinvoke $r41.<org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult: void <init>(boolean,java.lang.String)>(0, $r42)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : specialinvoke $r41.<org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult: void <init>(boolean,java.lang.String)>(0, $r42) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : return $r41
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r14 = r3.<org.apache.zeppelin.helium.ApplicationContext: org.apache.zeppelin.interpreter.InterpreterOutput out> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r14.<org.apache.zeppelin.interpreter.InterpreterOutput: void clear()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r14 = r3.<org.apache.zeppelin.helium.ApplicationContext: org.apache.zeppelin.interpreter.InterpreterOutput out> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r14.<org.apache.zeppelin.interpreter.InterpreterOutput: void clear()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r15 = r3.<org.apache.zeppelin.helium.ApplicationContext: org.apache.zeppelin.interpreter.InterpreterOutput out>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r14.<org.apache.zeppelin.interpreter.InterpreterOutput: void clear()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r15 = r3.<org.apache.zeppelin.helium.ApplicationContext: org.apache.zeppelin.interpreter.InterpreterOutput out> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r16 = <org.apache.zeppelin.interpreter.InterpreterResult$Type: org.apache.zeppelin.interpreter.InterpreterResult$Type ANGULAR>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r15 = r3.<org.apache.zeppelin.helium.ApplicationContext: org.apache.zeppelin.interpreter.InterpreterOutput out> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r16 = <org.apache.zeppelin.interpreter.InterpreterResult$Type: org.apache.zeppelin.interpreter.InterpreterResult$Type ANGULAR> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r15.<org.apache.zeppelin.interpreter.InterpreterOutput: void setType(org.apache.zeppelin.interpreter.InterpreterResult$Type)>($r16)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r16 = <org.apache.zeppelin.interpreter.InterpreterResult$Type: org.apache.zeppelin.interpreter.InterpreterResult$Type ANGULAR> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r15.<org.apache.zeppelin.interpreter.InterpreterOutput: void setType(org.apache.zeppelin.interpreter.InterpreterResult$Type)>($r16) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r17 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.helium.ApplicationLoader appLoader>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r15.<org.apache.zeppelin.interpreter.InterpreterOutput: void setType(org.apache.zeppelin.interpreter.InterpreterResult$Type)>($r16) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r17 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.helium.ApplicationLoader appLoader> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r18 = r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$RunningApplication: org.apache.zeppelin.helium.HeliumPackage pkg>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r17 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.helium.ApplicationLoader appLoader> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r18 = r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$RunningApplication: org.apache.zeppelin.helium.HeliumPackage pkg> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r19 = virtualinvoke $r18.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String[][] getResources()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r18 = r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$RunningApplication: org.apache.zeppelin.helium.HeliumPackage pkg> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r19 = virtualinvoke $r18.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String[][] getResources()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r20 = virtualinvoke r3.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String getNoteId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r19 = virtualinvoke $r18.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String[][] getResources()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r20 = virtualinvoke r3.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String getNoteId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r21 = virtualinvoke r3.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String getParagraphId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r20 = virtualinvoke r3.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String getNoteId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r21 = virtualinvoke r3.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String getParagraphId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r4 = virtualinvoke $r17.<org.apache.zeppelin.helium.ApplicationLoader: org.apache.zeppelin.resource.ResourceSet findRequiredResourceSet(java.lang.String[][],java.lang.String,java.lang.String)>($r19, $r20, $r21)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r21 = virtualinvoke r3.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String getParagraphId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r4 = virtualinvoke $r17.<org.apache.zeppelin.helium.ApplicationLoader: org.apache.zeppelin.resource.ResourceSet findRequiredResourceSet(java.lang.String[][],java.lang.String,java.lang.String)>($r19, $r20, $r21) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r5 = virtualinvoke r4.<org.apache.zeppelin.resource.ResourceSet: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r4 = virtualinvoke $r17.<org.apache.zeppelin.helium.ApplicationLoader: org.apache.zeppelin.resource.ResourceSet findRequiredResourceSet(java.lang.String[][],java.lang.String,java.lang.String)>($r19, $r20, $r21) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r5 = virtualinvoke r4.<org.apache.zeppelin.resource.ResourceSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r5 = virtualinvoke r4.<org.apache.zeppelin.resource.ResourceSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : if $z0 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r22 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r29 = r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$RunningApplication: org.apache.zeppelin.helium.Application app>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r29 = r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$RunningApplication: org.apache.zeppelin.helium.Application app> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r29.<org.apache.zeppelin.helium.Application: void run(org.apache.zeppelin.resource.ResourceSet)>(r4)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r29 = r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$RunningApplication: org.apache.zeppelin.helium.Application app> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r29.<org.apache.zeppelin.helium.Application: void run(org.apache.zeppelin.resource.ResourceSet)>(r4) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r30 = r3.<org.apache.zeppelin.helium.ApplicationContext: org.apache.zeppelin.interpreter.InterpreterOutput out>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r29.<org.apache.zeppelin.helium.Application: void run(org.apache.zeppelin.resource.ResourceSet)>(r4) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r30 = r3.<org.apache.zeppelin.helium.ApplicationContext: org.apache.zeppelin.interpreter.InterpreterOutput out> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r30.<org.apache.zeppelin.interpreter.InterpreterOutput: void flush()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r30 = r3.<org.apache.zeppelin.helium.ApplicationContext: org.apache.zeppelin.interpreter.InterpreterOutput out> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r30.<org.apache.zeppelin.interpreter.InterpreterOutput: void flush()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r31 = r3.<org.apache.zeppelin.helium.ApplicationContext: org.apache.zeppelin.interpreter.InterpreterOutput out>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r30.<org.apache.zeppelin.interpreter.InterpreterOutput: void flush()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r31 = r3.<org.apache.zeppelin.helium.ApplicationContext: org.apache.zeppelin.interpreter.InterpreterOutput out> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r32 = virtualinvoke $r31.<org.apache.zeppelin.interpreter.InterpreterOutput: org.apache.zeppelin.interpreter.InterpreterResultMessageOutput getOutputAt(int)>(0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r31 = r3.<org.apache.zeppelin.helium.ApplicationContext: org.apache.zeppelin.interpreter.InterpreterOutput out> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r32 = virtualinvoke $r31.<org.apache.zeppelin.interpreter.InterpreterOutput: org.apache.zeppelin.interpreter.InterpreterResultMessageOutput getOutputAt(int)>(0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r33 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient eventClient>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r32 = virtualinvoke $r31.<org.apache.zeppelin.interpreter.InterpreterOutput: org.apache.zeppelin.interpreter.InterpreterResultMessageOutput getOutputAt(int)>(0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r33 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient eventClient> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r34 = virtualinvoke r3.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String getNoteId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r33 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient eventClient> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r34 = virtualinvoke r3.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String getNoteId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r35 = virtualinvoke r3.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String getParagraphId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r34 = virtualinvoke r3.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String getNoteId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r35 = virtualinvoke r3.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String getParagraphId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r36 = virtualinvoke r32.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: org.apache.zeppelin.interpreter.InterpreterResult$Type getType()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r35 = virtualinvoke r3.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String getParagraphId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r36 = virtualinvoke r32.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: org.apache.zeppelin.interpreter.InterpreterResult$Type getType()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r7 = new java.lang.String
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r36 = virtualinvoke r32.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: org.apache.zeppelin.interpreter.InterpreterResult$Type getType()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r7 = new java.lang.String >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r37 = virtualinvoke r32.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: byte[] toByteArray()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r7 = new java.lang.String >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r37 = virtualinvoke r32.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: byte[] toByteArray()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : specialinvoke $r7.<java.lang.String: void <init>(byte[])>($r37)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r37 = virtualinvoke r32.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: byte[] toByteArray()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : specialinvoke $r7.<java.lang.String: void <init>(byte[])>($r37) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r33.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: void onAppOutputUpdate(java.lang.String,java.lang.String,int,java.lang.String,org.apache.zeppelin.interpreter.InterpreterResult$Type,java.lang.String)>($r34, $r35, 0, r1, $r36, $r7)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : specialinvoke $r7.<java.lang.String: void <init>(byte[])>($r37) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r33.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: void onAppOutputUpdate(java.lang.String,java.lang.String,int,java.lang.String,org.apache.zeppelin.interpreter.InterpreterResult$Type,java.lang.String)>($r34, $r35, 0, r1, $r36, $r7) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r38 = new org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r33.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: void onAppOutputUpdate(java.lang.String,java.lang.String,int,java.lang.String,org.apache.zeppelin.interpreter.InterpreterResult$Type,java.lang.String)>($r34, $r35, 0, r1, $r36, $r7) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r38 = new org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : specialinvoke $r38.<org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult: void <init>(boolean,java.lang.String)>(1, "")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r38 = new org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : specialinvoke $r38.<org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult: void <init>(boolean,java.lang.String)>(1, "") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : return $r38
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : specialinvoke $r38.<org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult: void <init>(boolean,java.lang.String)>(1, "") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r22 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r6 = (org.apache.zeppelin.resource.Resource) $r22
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r22 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r6 = (org.apache.zeppelin.resource.Resource) $r22 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r23 = <java.lang.System: java.io.PrintStream err>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : r6 = (org.apache.zeppelin.resource.Resource) $r22 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r23 = <java.lang.System: java.io.PrintStream err> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r24 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r23 = <java.lang.System: java.io.PrintStream err> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r24 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r24 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r26 = virtualinvoke r6.<org.apache.zeppelin.resource.Resource: java.lang.Object get()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r26 = virtualinvoke r6.<org.apache.zeppelin.resource.Resource: java.lang.Object get()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r26 = virtualinvoke r6.<org.apache.zeppelin.resource.Resource: java.lang.Object get()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r28)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r28) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r28) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Application instance {} not exists", r1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Application instance {} not exists", r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r12 = new org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : $r12 = new org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : specialinvoke $r12.<org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult: void <init>(boolean,java.lang.String)>(0, "Application instance does not exists")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : specialinvoke $r12.<org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult: void <init>(boolean,java.lang.String)>(0, "Application instance does not exists") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.runApplication : return $r12
