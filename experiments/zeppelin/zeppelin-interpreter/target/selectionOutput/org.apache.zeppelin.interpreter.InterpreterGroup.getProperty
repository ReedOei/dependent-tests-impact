org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : $r1 = new java.util.Properties >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : specialinvoke $r1.<java.util.Properties: void <init>()>()
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : specialinvoke $r1.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : r2 = $r1
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : r2 = $r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : $r7 = virtualinvoke r0.<org.apache.zeppelin.interpreter.InterpreterGroup: java.util.Collection values()>()
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : $r7 = virtualinvoke r0.<org.apache.zeppelin.interpreter.InterpreterGroup: java.util.Collection values()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : if $z0 == 0
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : return r2
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : r4 = (java.util.List) $r8
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : r4 = (java.util.List) $r8 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : if $z1 == 0
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : goto [?= return r2]
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : goto [?= return r2] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : return r2
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : r6 = (org.apache.zeppelin.interpreter.Interpreter) $r9
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : r6 = (org.apache.zeppelin.interpreter.Interpreter) $r9 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : $r10 = virtualinvoke r6.<org.apache.zeppelin.interpreter.Interpreter: java.util.Properties getProperty()>()
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : $r10 = virtualinvoke r6.<org.apache.zeppelin.interpreter.Interpreter: java.util.Properties getProperty()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : virtualinvoke r2.<java.util.Properties: void putAll(java.util.Map)>($r10)
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : virtualinvoke r2.<java.util.Properties: void putAll(java.util.Map)>($r10) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getProperty : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
