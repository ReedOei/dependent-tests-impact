org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.util.concurrent.atomic.AtomicInteger referenceCount> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r1 = $r7
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r1 = $r7 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : entermonitor $r7
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : entermonitor $r7 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r8 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.util.concurrent.atomic.AtomicInteger referenceCount>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : entermonitor $r7 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r6 = $r20 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : exitmonitor r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r6 = $r20 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : exitmonitor r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : throw r6
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : exitmonitor r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r8 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.util.concurrent.atomic.AtomicInteger referenceCount> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : i0 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r8 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.util.concurrent.atomic.AtomicInteger referenceCount> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : i0 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if i0 != 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : i0 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if i0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r9 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if i0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : exitmonitor r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if i0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : exitmonitor r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : return i0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : exitmonitor r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r9 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>("shutdown interpreter process")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r9 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>("shutdown interpreter process") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>("shutdown interpreter process") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke $r10.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: void shutdown()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke $r10.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: void shutdown()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r2 = null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke $r10.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: void shutdown()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r2 = null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r2 = null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r11 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r2 = null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r15 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r2 = null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r2 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r2 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r11 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r2 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r15 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r2 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r2 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke r2.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: void shutdown()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke r2.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: void shutdown()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r11 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke r2.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: void shutdown()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r15 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke r2.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: void shutdown()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke r2.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: void shutdown()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if r2 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if r2 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseBrokenClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client)>(r2)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if r2 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.commons.pool2.impl.GenericObjectPool clientPool>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if r2 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.commons.pool2.impl.GenericObjectPool clientPool> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke $r16.<org.apache.commons.pool2.impl.GenericObjectPool: void clear()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.commons.pool2.impl.GenericObjectPool clientPool> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke $r16.<org.apache.commons.pool2.impl.GenericObjectPool: void clear()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r17 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.commons.pool2.impl.GenericObjectPool clientPool>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke $r16.<org.apache.commons.pool2.impl.GenericObjectPool: void clear()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r17 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.commons.pool2.impl.GenericObjectPool clientPool> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke $r17.<org.apache.commons.pool2.impl.GenericObjectPool: void close()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r17 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.commons.pool2.impl.GenericObjectPool clientPool> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke $r17.<org.apache.commons.pool2.impl.GenericObjectPool: void close()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke $r17.<org.apache.commons.pool2.impl.GenericObjectPool: void close()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $l3 = $l2 - l1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $l3 = $l2 - l1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $i4 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: int connectTimeout>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $l3 = $l2 - l1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $i4 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: int connectTimeout> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $l5 = (long) $i4
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $i4 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: int connectTimeout> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $l5 = (long) $i4 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $b6 = $l3 cmp $l5
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $l5 = (long) $i4 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $b6 = $l3 cmp $l5 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if $b6 >= 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $b6 = $l3 cmp $l5 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if $b6 >= 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $z0 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: boolean isRunning()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if $b6 >= 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : exitmonitor r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if $b6 >= 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $z0 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: boolean isRunning()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if $z0 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $z0 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: boolean isRunning()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : staticinvoke <java.lang.Thread: void sleep(long)>(500L)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : exitmonitor r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r18 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r5 = $r18 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r19 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r5 = $r18 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r19 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception in RemoteInterpreterProcess while synchronized dereference Thread.sleep", r5)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r19 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception in RemoteInterpreterProcess while synchronized dereference Thread.sleep", r5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : goto [?= $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception in RemoteInterpreterProcess while synchronized dereference Thread.sleep", r5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : goto [?= $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : goto [?= $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : staticinvoke <java.lang.Thread: void sleep(long)>(500L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r18 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : staticinvoke <java.lang.Thread: void sleep(long)>(500L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : staticinvoke <java.lang.Thread: void sleep(long)>(500L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : goto [?= $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : goto [?= $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : goto [?= $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseBrokenClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : goto [?= $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.commons.pool2.impl.GenericObjectPool clientPool>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseBrokenClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : goto [?= $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.commons.pool2.impl.GenericObjectPool clientPool>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.commons.pool2.impl.GenericObjectPool clientPool>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : goto [?= $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.commons.pool2.impl.GenericObjectPool clientPool>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r4 = $r15 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r4 = $r15 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r15 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r4 = $r15 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if r2 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if r2 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseBrokenClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client)>(r2)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if r2 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : throw r4
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if r2 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : throw r4 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseBrokenClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : throw r4
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseBrokenClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r3 = $r11 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r15 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r3 = $r11 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : r3 = $r11 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r12 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r12 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r15 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r12 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r12 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>("Exception in RemoteInterpreterProcess while synchronized dereference, can safely ignore exception while client.shutdown() may terminates remote process")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>("Exception in RemoteInterpreterProcess while synchronized dereference, can safely ignore exception while client.shutdown() may terminates remote process") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r15 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>("Exception in RemoteInterpreterProcess while synchronized dereference, can safely ignore exception while client.shutdown() may terminates remote process") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>("Exception in RemoteInterpreterProcess while synchronized dereference, can safely ignore exception while client.shutdown() may terminates remote process") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r13 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r13 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r15 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r13 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r13 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r14 = virtualinvoke r3.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r14 = virtualinvoke r3.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r15 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r14 = virtualinvoke r3.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r14 = virtualinvoke r3.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : interfaceinvoke $r13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r14, r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : interfaceinvoke $r13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r14, r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r15 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : interfaceinvoke $r13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r14, r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : interfaceinvoke $r13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r14, r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if r2 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if r2 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseBrokenClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client)>(r2)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if r2 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.commons.pool2.impl.GenericObjectPool clientPool>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : if r2 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseBrokenClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : goto [?= $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.commons.pool2.impl.GenericObjectPool clientPool>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseBrokenClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : goto [?= $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.commons.pool2.impl.GenericObjectPool clientPool>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.commons.pool2.impl.GenericObjectPool clientPool>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : goto [?= $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.commons.pool2.impl.GenericObjectPool clientPool>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.dereference : $r20 := @caughtexception
