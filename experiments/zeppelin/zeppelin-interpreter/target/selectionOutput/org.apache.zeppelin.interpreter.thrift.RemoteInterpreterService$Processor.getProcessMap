org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r1 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$createInterpreter >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r1.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$createInterpreter: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r1.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$createInterpreter: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("createInterpreter", $r1)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("createInterpreter", $r1) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r3 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$open
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r3 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$open >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r3.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$open: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r3.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$open: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("open", $r3)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("open", $r3) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r5 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$close
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r5 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$close >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r5.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$close: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r5.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$close: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("close", $r5)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("close", $r5) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r7 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$interpret
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r7 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$interpret >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r7.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$interpret: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r7.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$interpret: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("interpret", $r7)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("interpret", $r7) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r9 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$cancel
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r9 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$cancel >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r9.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$cancel: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r9.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$cancel: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cancel", $r9)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cancel", $r9) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r11 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getProgress
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r11 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getProgress >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r11.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getProgress: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r11.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getProgress: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getProgress", $r11)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getProgress", $r11) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r13 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getFormType
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r13 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getFormType >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r13.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getFormType: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r13.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getFormType: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getFormType", $r13)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getFormType", $r13) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r15 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$completion
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r15 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$completion >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r15.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$completion: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r15.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$completion: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("completion", $r15)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("completion", $r15) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r17 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$shutdown
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r17 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$shutdown >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r17.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$shutdown: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r17.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$shutdown: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("shutdown", $r17)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("shutdown", $r17) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r19 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getStatus
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r19 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getStatus >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r19.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getStatus: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r19.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getStatus: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getStatus", $r19)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getStatus", $r19) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r21 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getEvent
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r21 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getEvent >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r21.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getEvent: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r21.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getEvent: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getEvent", $r21)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getEvent", $r21) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r23 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourcePoolResponseGetAll
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r23 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourcePoolResponseGetAll >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r23.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourcePoolResponseGetAll: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r23.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourcePoolResponseGetAll: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("resourcePoolResponseGetAll", $r23)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("resourcePoolResponseGetAll", $r23) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r25 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceResponseGet
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r25 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceResponseGet >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r25.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceResponseGet: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r25.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceResponseGet: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("resourceResponseGet", $r25)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("resourceResponseGet", $r25) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r27 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceResponseInvokeMethod
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r27 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceResponseInvokeMethod >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r27.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceResponseInvokeMethod: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r27.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceResponseInvokeMethod: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("resourceResponseInvokeMethod", $r27)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("resourceResponseInvokeMethod", $r27) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r29 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourcePoolGetAll
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r29 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourcePoolGetAll >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r29.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourcePoolGetAll: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r29.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourcePoolGetAll: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("resourcePoolGetAll", $r29)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("resourcePoolGetAll", $r29) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r31 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceGet
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r31 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceGet >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r31.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceGet: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r31.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceGet: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("resourceGet", $r31)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("resourceGet", $r31) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r33 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceRemove
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r33 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceRemove >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r33.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceRemove: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r33.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceRemove: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("resourceRemove", $r33)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("resourceRemove", $r33) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r35 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceInvokeMethod
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r35 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceInvokeMethod >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r35.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceInvokeMethod: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r35.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceInvokeMethod: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("resourceInvokeMethod", $r35)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("resourceInvokeMethod", $r35) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r37 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularObjectUpdate
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r37 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularObjectUpdate >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r37.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularObjectUpdate: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r37.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularObjectUpdate: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("angularObjectUpdate", $r37)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("angularObjectUpdate", $r37) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r39 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularObjectAdd
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r39 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularObjectAdd >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r39.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularObjectAdd: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r39.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularObjectAdd: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("angularObjectAdd", $r39)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("angularObjectAdd", $r39) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r41 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularObjectRemove
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r41 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularObjectRemove >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r41.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularObjectRemove: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r41.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularObjectRemove: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("angularObjectRemove", $r41)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("angularObjectRemove", $r41) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r43 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularRegistryPush
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r43 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularRegistryPush >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r43.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularRegistryPush: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r43.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularRegistryPush: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("angularRegistryPush", $r43)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("angularRegistryPush", $r43) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r45 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$loadApplication
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r45 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$loadApplication >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r45.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$loadApplication: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r45.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$loadApplication: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("loadApplication", $r45)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("loadApplication", $r45) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r47 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$unloadApplication
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r47 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$unloadApplication >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r47.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$unloadApplication: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r47.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$unloadApplication: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("unloadApplication", $r47)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("unloadApplication", $r47) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r49 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$runApplication
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r49 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$runApplication >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r49.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$runApplication: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r49.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$runApplication: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("runApplication", $r49)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("runApplication", $r49) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r51 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$onReceivedZeppelinResource
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r51 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$onReceivedZeppelinResource >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r51.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$onReceivedZeppelinResource: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : specialinvoke $r51.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$onReceivedZeppelinResource: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("onReceivedZeppelinResource", $r51)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("onReceivedZeppelinResource", $r51) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : return r0
