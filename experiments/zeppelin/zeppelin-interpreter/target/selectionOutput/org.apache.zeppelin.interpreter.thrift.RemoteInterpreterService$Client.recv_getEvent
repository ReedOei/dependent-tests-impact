org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : $r1 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$getEvent_result >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : specialinvoke $r1.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$getEvent_result: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : specialinvoke $r1.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$getEvent_result: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : r2 = $r1
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : r2 = $r1 >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : virtualinvoke r0.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: void receiveBase(org.apache.thrift.TBase,java.lang.String)>(r2, "getEvent")
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : virtualinvoke r0.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: void receiveBase(org.apache.thrift.TBase,java.lang.String)>(r2, "getEvent") >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : $z0 = virtualinvoke r2.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$getEvent_result: boolean isSetSuccess()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : $z0 = virtualinvoke r2.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$getEvent_result: boolean isSetSuccess()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : if $z0 == 0
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : $r3 = r2.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$getEvent_result: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent success>
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : $r4 = new org.apache.thrift.TApplicationException
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : $r4 = new org.apache.thrift.TApplicationException >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : specialinvoke $r4.<org.apache.thrift.TApplicationException: void <init>(int,java.lang.String)>(5, "getEvent failed: unknown result")
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : specialinvoke $r4.<org.apache.thrift.TApplicationException: void <init>(int,java.lang.String)>(5, "getEvent failed: unknown result") >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : throw $r4
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : $r3 = r2.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$getEvent_result: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent success> >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_getEvent : return $r3
