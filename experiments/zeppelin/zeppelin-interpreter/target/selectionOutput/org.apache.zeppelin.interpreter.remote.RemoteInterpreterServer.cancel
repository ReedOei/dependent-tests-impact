org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : $r8 = virtualinvoke r3.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterContext: java.lang.String getParagraphId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : $r8 = virtualinvoke r3.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterContext: java.lang.String getParagraphId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("cancel {} {}", r2, $r8)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("cancel {} {}", r2, $r8) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : r4 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.Interpreter getInterpreter(java.lang.String,java.lang.String)>(r1, r2)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : r4 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.Interpreter getInterpreter(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : r5 = virtualinvoke r3.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterContext: java.lang.String getParagraphId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : r5 = virtualinvoke r3.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterContext: java.lang.String getParagraphId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : $r9 = virtualinvoke r4.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.scheduler.Scheduler getScheduler()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : $r9 = virtualinvoke r4.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.scheduler.Scheduler getScheduler()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : r6 = interfaceinvoke $r9.<org.apache.zeppelin.scheduler.Scheduler: org.apache.zeppelin.scheduler.Job removeFromWaitingQueue(java.lang.String)>(r5)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : r6 = interfaceinvoke $r9.<org.apache.zeppelin.scheduler.Scheduler: org.apache.zeppelin.scheduler.Job removeFromWaitingQueue(java.lang.String)>(r5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : if r6 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : if r6 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : $r10 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status ABORT>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : if r6 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : $r11 = specialinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterContext convert(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterContext,org.apache.zeppelin.interpreter.InterpreterOutput)>(r3, null)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : $r11 = specialinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterContext convert(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterContext,org.apache.zeppelin.interpreter.InterpreterOutput)>(r3, null) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : virtualinvoke r4.<org.apache.zeppelin.interpreter.Interpreter: void cancel(org.apache.zeppelin.interpreter.InterpreterContext)>($r11)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : virtualinvoke r4.<org.apache.zeppelin.interpreter.Interpreter: void cancel(org.apache.zeppelin.interpreter.InterpreterContext)>($r11) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : $r10 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status ABORT> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : virtualinvoke r6.<org.apache.zeppelin.scheduler.Job: void setStatus(org.apache.zeppelin.scheduler.Job$Status)>($r10)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : virtualinvoke r6.<org.apache.zeppelin.scheduler.Job: void setStatus(org.apache.zeppelin.scheduler.Job$Status)>($r10) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : goto [?= return]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : goto [?= return] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.cancel : return
