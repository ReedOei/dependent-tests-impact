org.apache.zeppelin.scheduler.RemoteSchedulerTest$2.jobAbort : $z0 = virtualinvoke r0.<org.apache.zeppelin.scheduler.RemoteSchedulerTest$2: boolean isRunning()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteSchedulerTest$2.jobAbort : if $z0 == 0
org.apache.zeppelin.scheduler.RemoteSchedulerTest$2.jobAbort : if $z0 == 0 >>>>>>>> org.apache.zeppelin.scheduler.RemoteSchedulerTest$2.jobAbort : $r1 = r0.<org.apache.zeppelin.scheduler.RemoteSchedulerTest$2: org.apache.zeppelin.interpreter.remote.RemoteInterpreter val$intpA>
org.apache.zeppelin.scheduler.RemoteSchedulerTest$2.jobAbort : if $z0 == 0 >>>>>>>> org.apache.zeppelin.scheduler.RemoteSchedulerTest$2.jobAbort : return 1
org.apache.zeppelin.scheduler.RemoteSchedulerTest$2.jobAbort : $r1 = r0.<org.apache.zeppelin.scheduler.RemoteSchedulerTest$2: org.apache.zeppelin.interpreter.remote.RemoteInterpreter val$intpA> >>>>>>>> org.apache.zeppelin.scheduler.RemoteSchedulerTest$2.jobAbort : $r2 = r0.<org.apache.zeppelin.scheduler.RemoteSchedulerTest$2: org.apache.zeppelin.interpreter.InterpreterContext context>
org.apache.zeppelin.scheduler.RemoteSchedulerTest$2.jobAbort : $r2 = r0.<org.apache.zeppelin.scheduler.RemoteSchedulerTest$2: org.apache.zeppelin.interpreter.InterpreterContext context> >>>>>>>> org.apache.zeppelin.scheduler.RemoteSchedulerTest$2.jobAbort : virtualinvoke $r1.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: void cancel(org.apache.zeppelin.interpreter.InterpreterContext)>($r2)
org.apache.zeppelin.scheduler.RemoteSchedulerTest$2.jobAbort : virtualinvoke $r1.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: void cancel(org.apache.zeppelin.interpreter.InterpreterContext)>($r2) >>>>>>>> org.apache.zeppelin.scheduler.RemoteSchedulerTest$2.jobAbort : return 1
