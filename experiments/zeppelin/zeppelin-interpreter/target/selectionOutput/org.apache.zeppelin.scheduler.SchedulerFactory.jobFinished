org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r3 = <org.apache.zeppelin.scheduler.SchedulerFactory: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r4 = new java.lang.StringBuilder
org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job ")
org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job ") >>>>>>>> org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r6 = virtualinvoke r2.<org.apache.zeppelin.scheduler.Job: java.lang.String getJobName()>()
org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r6 = virtualinvoke r2.<org.apache.zeppelin.scheduler.Job: java.lang.String getJobName()>() >>>>>>>> org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" finished by scheduler ")
org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" finished by scheduler ") >>>>>>>> org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r9 = interfaceinvoke r1.<org.apache.zeppelin.scheduler.Scheduler: java.lang.String getName()>()
org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r9 = interfaceinvoke r1.<org.apache.zeppelin.scheduler.Scheduler: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>($r11)
org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>($r11) >>>>>>>> org.apache.zeppelin.scheduler.SchedulerFactory.jobFinished : return
