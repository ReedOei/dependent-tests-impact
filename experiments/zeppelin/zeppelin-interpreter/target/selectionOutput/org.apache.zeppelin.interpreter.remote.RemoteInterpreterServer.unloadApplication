org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r4 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: java.util.Map runningApplications> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : r2 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$RunningApplication) $r5
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : r2 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$RunningApplication) $r5 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : if r2 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : if r2 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : if r2 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r13 = new org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : if r2 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r8 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : r3 = $r8 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r10 = virtualinvoke r3.<org.apache.zeppelin.helium.ApplicationException: java.lang.String getMessage()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r10 = virtualinvoke r3.<org.apache.zeppelin.helium.ApplicationException: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r10, r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r10, r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r11 = new org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r11 = new org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r12 = virtualinvoke r3.<org.apache.zeppelin.helium.ApplicationException: java.lang.String getMessage()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r12 = virtualinvoke r3.<org.apache.zeppelin.helium.ApplicationException: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : specialinvoke $r11.<org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult: void <init>(boolean,java.lang.String)>(0, $r12)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : specialinvoke $r11.<org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult: void <init>(boolean,java.lang.String)>(0, $r12) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : return $r11
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r13 = new org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : specialinvoke $r13.<org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult: void <init>(boolean,java.lang.String)>(1, "")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : specialinvoke $r13.<org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult: void <init>(boolean,java.lang.String)>(1, "") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : return $r13
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Unloading application {}", r1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r8 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Unloading application {}", r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r7 = r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$RunningApplication: org.apache.zeppelin.helium.Application app>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Unloading application {}", r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r8 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r7 = r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$RunningApplication: org.apache.zeppelin.helium.Application app> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : virtualinvoke $r7.<org.apache.zeppelin.helium.Application: void unload()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r7 = r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$RunningApplication: org.apache.zeppelin.helium.Application app> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r8 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : virtualinvoke $r7.<org.apache.zeppelin.helium.Application: void unload()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : goto [?= $r13 = new org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : virtualinvoke $r7.<org.apache.zeppelin.helium.Application: void unload()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r8 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : goto [?= $r13 = new org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.unloadApplication : $r13 = new org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult
