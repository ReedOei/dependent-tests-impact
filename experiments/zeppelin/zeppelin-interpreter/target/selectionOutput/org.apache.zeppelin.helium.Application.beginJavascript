org.apache.zeppelin.helium.Application.beginJavascript : $r1 = new java.lang.StringBuffer >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : specialinvoke $r1.<java.lang.StringBuffer: void <init>()>()
org.apache.zeppelin.helium.Application.beginJavascript : specialinvoke $r1.<java.lang.StringBuffer: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : r2 = $r1
org.apache.zeppelin.helium.Application.beginJavascript : r2 = $r1 >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r3 = new java.lang.StringBuilder
org.apache.zeppelin.helium.Application.beginJavascript : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.Application.beginJavascript : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n<script id=\"app_js_")
org.apache.zeppelin.helium.Application.beginJavascript : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n<script id=\"app_js_") >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $i0 = virtualinvoke r2.<java.lang.Object: int hashCode()>()
org.apache.zeppelin.helium.Application.beginJavascript : $i0 = virtualinvoke r2.<java.lang.Object: int hashCode()>() >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
org.apache.zeppelin.helium.Application.beginJavascript : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">\n")
org.apache.zeppelin.helium.Application.beginJavascript : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">\n") >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.Application.beginJavascript : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7)
org.apache.zeppelin.helium.Application.beginJavascript : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7) >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(function() {\n")
org.apache.zeppelin.helium.Application.beginJavascript : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(function() {\n") >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("let $z = {\n")
org.apache.zeppelin.helium.Application.beginJavascript : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("let $z = {\n") >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r11 = new java.lang.StringBuilder
org.apache.zeppelin.helium.Application.beginJavascript : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.Application.beginJavascript : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id : \"")
org.apache.zeppelin.helium.Application.beginJavascript : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id : \"") >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r13 = r0.<org.apache.zeppelin.helium.Application: org.apache.zeppelin.helium.ApplicationContext context>
org.apache.zeppelin.helium.Application.beginJavascript : $r13 = r0.<org.apache.zeppelin.helium.Application: org.apache.zeppelin.helium.ApplicationContext context> >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r14 = virtualinvoke $r13.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String getApplicationInstanceId()>()
org.apache.zeppelin.helium.Application.beginJavascript : $r14 = virtualinvoke $r13.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String getApplicationInstanceId()>() >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
org.apache.zeppelin.helium.Application.beginJavascript : $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\n")
org.apache.zeppelin.helium.Application.beginJavascript : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\n") >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.Application.beginJavascript : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17)
org.apache.zeppelin.helium.Application.beginJavascript : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17) >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r19 = new java.lang.StringBuilder
org.apache.zeppelin.helium.Application.beginJavascript : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.Application.beginJavascript : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scope : angular.element(\"#app_js_")
org.apache.zeppelin.helium.Application.beginJavascript : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scope : angular.element(\"#app_js_") >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $i1 = virtualinvoke r2.<java.lang.Object: int hashCode()>()
org.apache.zeppelin.helium.Application.beginJavascript : $i1 = virtualinvoke r2.<java.lang.Object: int hashCode()>() >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)
org.apache.zeppelin.helium.Application.beginJavascript : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\").scope()\n")
org.apache.zeppelin.helium.Application.beginJavascript : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\").scope()\n") >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.Application.beginJavascript : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23)
org.apache.zeppelin.helium.Application.beginJavascript : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23) >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("};\n")
org.apache.zeppelin.helium.Application.beginJavascript : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("};\n") >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("$z.result = ($z.scope._devmodeResult) ? $z.scope._devmodeResult : $z.scope.$parent.paragraph.result;\n")
org.apache.zeppelin.helium.Application.beginJavascript : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("$z.result = ($z.scope._devmodeResult) ? $z.scope._devmodeResult : $z.scope.$parent.paragraph.result;\n") >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r27 = r0.<org.apache.zeppelin.helium.Application: org.apache.zeppelin.helium.ApplicationContext context>
org.apache.zeppelin.helium.Application.beginJavascript : $r27 = r0.<org.apache.zeppelin.helium.Application: org.apache.zeppelin.helium.ApplicationContext context> >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r28 = $r27.<org.apache.zeppelin.helium.ApplicationContext: org.apache.zeppelin.interpreter.InterpreterOutput out>
org.apache.zeppelin.helium.Application.beginJavascript : $r28 = $r27.<org.apache.zeppelin.helium.ApplicationContext: org.apache.zeppelin.interpreter.InterpreterOutput out> >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : $r29 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.zeppelin.helium.Application.beginJavascript : $r29 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : virtualinvoke $r28.<org.apache.zeppelin.interpreter.InterpreterOutput: void write(java.lang.String)>($r29)
org.apache.zeppelin.helium.Application.beginJavascript : virtualinvoke $r28.<org.apache.zeppelin.interpreter.InterpreterOutput: void write(java.lang.String)>($r29) >>>>>>>> org.apache.zeppelin.helium.Application.beginJavascript : return
