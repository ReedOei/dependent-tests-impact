org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : if $r10 != null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : if $r10 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r11 = new org.apache.thrift.TException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : if $r10 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : r5 = $r16
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : r5 = $r16 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : entermonitor $r16
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : entermonitor $r16 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r17 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : entermonitor $r16 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : r9 = $r29 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : exitmonitor r5
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : r9 = $r29 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : exitmonitor r5 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : throw r9
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : exitmonitor r5 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r17 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r18 = virtualinvoke $r17.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r17 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r18 = virtualinvoke $r17.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : r6 = (java.util.List) $r18
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r18 = virtualinvoke $r17.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : r6 = (java.util.List) $r18 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : if r6 != null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : r6 = (java.util.List) $r18 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : if r6 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r19 = new org.apache.thrift.TException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : if r6 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : if r6 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : if $z0 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r26 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : exitmonitor r5
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : exitmonitor r5 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : goto [?= $r30 = new org.apache.thrift.TException]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : exitmonitor r5 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : goto [?= $r30 = new org.apache.thrift.TException] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r30 = new org.apache.thrift.TException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r30 = new org.apache.thrift.TException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r31 = new org.apache.zeppelin.interpreter.InterpreterException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r31 = new org.apache.zeppelin.interpreter.InterpreterException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r32 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r32 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interpreter instance ")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interpreter instance ") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r31.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.String)>($r36)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r31.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.String)>($r36) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r30.<org.apache.thrift.TException: void <init>(java.lang.Throwable)>($r31)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r30.<org.apache.thrift.TException: void <init>(java.lang.Throwable)>($r31) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : throw $r30
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r26 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : r8 = (org.apache.zeppelin.interpreter.Interpreter) $r26
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r26 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : r8 = (org.apache.zeppelin.interpreter.Interpreter) $r26 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r27 = virtualinvoke r8.<org.apache.zeppelin.interpreter.Interpreter: java.lang.String getClassName()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : r8 = (org.apache.zeppelin.interpreter.Interpreter) $r26 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r27 = virtualinvoke r8.<org.apache.zeppelin.interpreter.Interpreter: java.lang.String getClassName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $z1 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r2)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r27 = virtualinvoke r8.<org.apache.zeppelin.interpreter.Interpreter: java.lang.String getClassName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $z1 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : if $z1 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $z1 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : exitmonitor r5
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : exitmonitor r5 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : return r8
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : exitmonitor r5 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r19 = new org.apache.thrift.TException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r20 = new org.apache.zeppelin.interpreter.InterpreterException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r19 = new org.apache.thrift.TException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r20 = new org.apache.zeppelin.interpreter.InterpreterException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r21 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r20 = new org.apache.zeppelin.interpreter.InterpreterException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interpreter ")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interpreter ") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interpreter ") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not initialized")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not initialized") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not initialized") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r20.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.String)>($r25)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r20.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.String)>($r25) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r19.<org.apache.thrift.TException: void <init>(java.lang.Throwable)>($r20)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r20.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.String)>($r25) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r19.<org.apache.thrift.TException: void <init>(java.lang.Throwable)>($r20) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : throw $r19
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r19.<org.apache.thrift.TException: void <init>(java.lang.Throwable)>($r20) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : throw $r19 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r29 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r11 = new org.apache.thrift.TException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r3 = new org.apache.zeppelin.interpreter.InterpreterException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r3 = new org.apache.zeppelin.interpreter.InterpreterException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r4 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interpreter instance ")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interpreter instance ") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not created")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not created") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r3.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.String)>($r15)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r3.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.String)>($r15) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r11.<org.apache.thrift.TException: void <init>(java.lang.Throwable)>($r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : specialinvoke $r11.<org.apache.thrift.TException: void <init>(java.lang.Throwable)>($r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getInterpreter : throw $r11
