org.apache.zeppelin.helium.Application.println : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.Application.println : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.Application.println : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.Application.println : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.zeppelin.helium.Application.println : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.helium.Application.println : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
org.apache.zeppelin.helium.Application.println : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> org.apache.zeppelin.helium.Application.println : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.Application.println : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.Application.println : virtualinvoke r0.<org.apache.zeppelin.helium.Application: void print(java.lang.String)>($r5)
org.apache.zeppelin.helium.Application.println : virtualinvoke r0.<org.apache.zeppelin.helium.Application: void print(java.lang.String)>($r5) >>>>>>>> org.apache.zeppelin.helium.Application.println : return
