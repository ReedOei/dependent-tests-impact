org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_resourceResponseGet : $r1 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$resourceResponseGet_result >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_resourceResponseGet : specialinvoke $r1.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$resourceResponseGet_result: void <init>()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_resourceResponseGet : specialinvoke $r1.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$resourceResponseGet_result: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_resourceResponseGet : r2 = $r1
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_resourceResponseGet : r2 = $r1 >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_resourceResponseGet : virtualinvoke r0.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: void receiveBase(org.apache.thrift.TBase,java.lang.String)>(r2, "resourceResponseGet")
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_resourceResponseGet : virtualinvoke r0.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: void receiveBase(org.apache.thrift.TBase,java.lang.String)>(r2, "resourceResponseGet") >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_resourceResponseGet : return
