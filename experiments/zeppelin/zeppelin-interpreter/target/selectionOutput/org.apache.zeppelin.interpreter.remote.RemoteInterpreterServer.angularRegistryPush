org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : r10 = $r9 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("Exception in RemoteInterpreterServer while angularRegistryPush, nolock", r10)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("Exception in RemoteInterpreterServer while angularRegistryPush, nolock", r10) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r4 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$6
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r4 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r9 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : specialinvoke $r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$6: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer)>(r0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r9 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : specialinvoke $r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$6: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r5 = virtualinvoke $r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$6: java.lang.reflect.Type getType()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : specialinvoke $r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$6: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r9 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r5 = virtualinvoke $r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$6: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r6 = virtualinvoke $r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r1, $r5)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r5 = virtualinvoke $r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$6: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r9 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r6 = virtualinvoke $r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r1, $r5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : r3 = (java.util.Map) $r6
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r6 = virtualinvoke $r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r1, $r5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r9 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : r3 = (java.util.Map) $r6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : r3 = (java.util.Map) $r6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r9 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r8 = virtualinvoke $r7.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.display.AngularObjectRegistry getAngularObjectRegistry()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r9 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r8 = virtualinvoke $r7.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.display.AngularObjectRegistry getAngularObjectRegistry()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : virtualinvoke $r8.<org.apache.zeppelin.display.AngularObjectRegistry: void setRegistry(java.util.Map)>(r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r8 = virtualinvoke $r7.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.display.AngularObjectRegistry getAngularObjectRegistry()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r9 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : virtualinvoke $r8.<org.apache.zeppelin.display.AngularObjectRegistry: void setRegistry(java.util.Map)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : goto [?= return]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : virtualinvoke $r8.<org.apache.zeppelin.display.AngularObjectRegistry: void setRegistry(java.util.Map)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : $r9 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : goto [?= return] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.angularRegistryPush : return
