org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r2 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient eventClient> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : virtualinvoke $r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: void waitForEventQueueBecomesEmpty()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : virtualinvoke $r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: void waitForEventQueueBecomesEmpty()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : if $r3 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : if $r3 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r4 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : if $r3 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r5 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.thrift.server.TThreadPoolServer server>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r5 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.thrift.server.TThreadPoolServer server> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : virtualinvoke $r5.<org.apache.thrift.server.TThreadPoolServer: void stop()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : virtualinvoke $r5.<org.apache.thrift.server.TThreadPoolServer: void stop()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $l2 = $l1 - l0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $l2 = $l1 - l0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $b3 = $l2 cmp 2000L
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $b3 = $l2 cmp 2000L >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : if $b3 >= 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : if $b3 >= 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.thrift.server.TThreadPoolServer server>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : if $b3 >= 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.thrift.server.TThreadPoolServer server>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.thrift.server.TThreadPoolServer server> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $z1 = virtualinvoke $r9.<org.apache.thrift.server.TThreadPoolServer: boolean isServing()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $z1 = virtualinvoke $r9.<org.apache.thrift.server.TThreadPoolServer: boolean isServing()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : if $z1 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : staticinvoke <java.lang.System: void exit(int)>(0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : staticinvoke <java.lang.System: void exit(int)>(0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.thrift.server.TThreadPoolServer server> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $z0 = virtualinvoke $r6.<org.apache.thrift.server.TThreadPoolServer: boolean isServing()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $z0 = virtualinvoke $r6.<org.apache.thrift.server.TThreadPoolServer: boolean isServing()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : if $z0 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : staticinvoke <java.lang.Thread: void sleep(long)>(300L)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.thrift.server.TThreadPoolServer server>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r7 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : r1 = $r7 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r8 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r8 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("Exception in RemoteInterpreterServer while shutdown, Thread.sleep", r1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("Exception in RemoteInterpreterServer while shutdown, Thread.sleep", r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : goto [?= $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : goto [?= $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : staticinvoke <java.lang.Thread: void sleep(long)>(300L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : goto [?= $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : staticinvoke <java.lang.Thread: void sleep(long)>(300L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r7 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : goto [?= $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r4 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : virtualinvoke $r4.<org.apache.zeppelin.interpreter.InterpreterGroup: void close()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : virtualinvoke $r4.<org.apache.zeppelin.interpreter.InterpreterGroup: void close()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r5 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.thrift.server.TThreadPoolServer server>
