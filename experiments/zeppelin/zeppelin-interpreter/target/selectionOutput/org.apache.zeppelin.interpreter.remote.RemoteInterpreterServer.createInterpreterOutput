org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreterOutput : $r3 = new org.apache.zeppelin.interpreter.InterpreterOutput >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreterOutput : $r4 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$3
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreterOutput : $r4 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreterOutput : specialinvoke $r4.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$3: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer,java.lang.String,java.lang.String)>(r0, r1, r2)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreterOutput : specialinvoke $r4.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$3: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer,java.lang.String,java.lang.String)>(r0, r1, r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreterOutput : specialinvoke $r3.<org.apache.zeppelin.interpreter.InterpreterOutput: void <init>(org.apache.zeppelin.interpreter.InterpreterOutputListener)>($r4)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreterOutput : specialinvoke $r3.<org.apache.zeppelin.interpreter.InterpreterOutput: void <init>(org.apache.zeppelin.interpreter.InterpreterOutputListener)>($r4) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreterOutput : return $r3
