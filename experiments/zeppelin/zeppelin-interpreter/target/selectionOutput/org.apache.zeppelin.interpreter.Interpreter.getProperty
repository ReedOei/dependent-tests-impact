org.apache.zeppelin.interpreter.Interpreter.getProperty : $r2 = <org.apache.zeppelin.interpreter.Interpreter: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.Interpreter.getProperty : $r3 = virtualinvoke r0.<org.apache.zeppelin.interpreter.Interpreter: java.util.Properties getProperty()>()
org.apache.zeppelin.interpreter.Interpreter.getProperty : $r3 = virtualinvoke r0.<org.apache.zeppelin.interpreter.Interpreter: java.util.Properties getProperty()>() >>>>>>>> org.apache.zeppelin.interpreter.Interpreter.getProperty : $r4 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1)
org.apache.zeppelin.interpreter.Interpreter.getProperty : $r4 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.Interpreter.getProperty : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("key: {}, value: {}", r1, $r4)
org.apache.zeppelin.interpreter.Interpreter.getProperty : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("key: {}, value: {}", r1, $r4) >>>>>>>> org.apache.zeppelin.interpreter.Interpreter.getProperty : $r5 = virtualinvoke r0.<org.apache.zeppelin.interpreter.Interpreter: java.util.Properties getProperty()>()
org.apache.zeppelin.interpreter.Interpreter.getProperty : $r5 = virtualinvoke r0.<org.apache.zeppelin.interpreter.Interpreter: java.util.Properties getProperty()>() >>>>>>>> org.apache.zeppelin.interpreter.Interpreter.getProperty : $r6 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1)
org.apache.zeppelin.interpreter.Interpreter.getProperty : $r6 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.Interpreter.getProperty : return $r6
