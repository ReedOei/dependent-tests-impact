org.apache.zeppelin.completer.StringsCompleter.completeCollection : staticinvoke <jline.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2) >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : if r1 != null
org.apache.zeppelin.completer.StringsCompleter.completeCollection : if r1 != null >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : $r8 = r0.<org.apache.zeppelin.completer.StringsCompleter: java.util.SortedSet strings>
org.apache.zeppelin.completer.StringsCompleter.completeCollection : if r1 != null >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : r3 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.zeppelin.completer.StringsCompleter.completeCollection : r3 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : $r9 = r0.<org.apache.zeppelin.completer.StringsCompleter: java.util.SortedSet strings>
org.apache.zeppelin.completer.StringsCompleter.completeCollection : $r9 = r0.<org.apache.zeppelin.completer.StringsCompleter: java.util.SortedSet strings> >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : $r10 = interfaceinvoke $r9.<java.util.SortedSet: java.util.SortedSet tailSet(java.lang.Object)>(r1)
org.apache.zeppelin.completer.StringsCompleter.completeCollection : $r10 = interfaceinvoke $r9.<java.util.SortedSet: java.util.SortedSet tailSet(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : r4 = interfaceinvoke $r10.<java.util.SortedSet: java.util.Iterator iterator()>()
org.apache.zeppelin.completer.StringsCompleter.completeCollection : r4 = interfaceinvoke $r10.<java.util.SortedSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.completer.StringsCompleter.completeCollection : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : if $z1 == 0
org.apache.zeppelin.completer.StringsCompleter.completeCollection : if $z1 == 0 >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.completer.StringsCompleter.completeCollection : if $z1 == 0 >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : $z4 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>()
org.apache.zeppelin.completer.StringsCompleter.completeCollection : $z4 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : if $z4 == 0
org.apache.zeppelin.completer.StringsCompleter.completeCollection : if $z4 == 0 >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : $b1 = -1
org.apache.zeppelin.completer.StringsCompleter.completeCollection : if $z4 == 0 >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : $b1 = 0
org.apache.zeppelin.completer.StringsCompleter.completeCollection : $b1 = 0 >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : return $b1
org.apache.zeppelin.completer.StringsCompleter.completeCollection : $b1 = -1 >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : goto [?= return $b1]
org.apache.zeppelin.completer.StringsCompleter.completeCollection : goto [?= return $b1] >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : return $b1
org.apache.zeppelin.completer.StringsCompleter.completeCollection : $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : r5 = (java.lang.String) $r11
org.apache.zeppelin.completer.StringsCompleter.completeCollection : r5 = (java.lang.String) $r11 >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : r6 = virtualinvoke r5.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.zeppelin.completer.StringsCompleter.completeCollection : r6 = virtualinvoke r5.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : $z2 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>(r3)
org.apache.zeppelin.completer.StringsCompleter.completeCollection : $z2 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>(r3) >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : if $z2 != 0
org.apache.zeppelin.completer.StringsCompleter.completeCollection : if $z2 != 0 >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : goto [?= $z4 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>()]
org.apache.zeppelin.completer.StringsCompleter.completeCollection : if $z2 != 0 >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r5)
org.apache.zeppelin.completer.StringsCompleter.completeCollection : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.completer.StringsCompleter.completeCollection : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.completer.StringsCompleter.completeCollection : goto [?= $z4 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>()] >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : $z4 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>()
org.apache.zeppelin.completer.StringsCompleter.completeCollection : $r8 = r0.<org.apache.zeppelin.completer.StringsCompleter: java.util.SortedSet strings> >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : interfaceinvoke r2.<java.util.Collection: boolean addAll(java.util.Collection)>($r8)
org.apache.zeppelin.completer.StringsCompleter.completeCollection : interfaceinvoke r2.<java.util.Collection: boolean addAll(java.util.Collection)>($r8) >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : goto [?= $z4 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>()]
org.apache.zeppelin.completer.StringsCompleter.completeCollection : goto [?= $z4 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>()] >>>>>>>> org.apache.zeppelin.completer.StringsCompleter.completeCollection : $z4 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>()
