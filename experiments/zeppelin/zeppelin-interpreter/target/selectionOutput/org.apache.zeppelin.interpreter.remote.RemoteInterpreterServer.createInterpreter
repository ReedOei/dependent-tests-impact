org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r14 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : if $r14 != null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : if $r14 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r6 = new org.apache.zeppelin.interpreter.InterpreterGroup
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : if $r14 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r39 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : if $r14 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r56 = $r55 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r57 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r57 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r58 = virtualinvoke r56.<java.lang.Exception: java.lang.String toString()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r58 = virtualinvoke r56.<java.lang.Exception: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : interfaceinvoke $r57.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r58, r56)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : interfaceinvoke $r57.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r58, r56) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r59 = new org.apache.thrift.TException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r59 = new org.apache.thrift.TException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r59.<org.apache.thrift.TException: void <init>(java.lang.Throwable)>(r56)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r59.<org.apache.thrift.TException: void <init>(java.lang.Throwable)>(r56) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : throw $r59
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r39 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r40 = new java.util.Properties
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r39 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r40 = new java.util.Properties >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r40.<java.util.Properties: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r40 = new java.util.Properties >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r40.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r8 = $r40
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r40.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r8 = $r40 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke r8.<java.util.Properties: void putAll(java.util.Map)>(r4)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r8 = $r40 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke r8.<java.util.Properties: void putAll(java.util.Map)>(r4) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: void setSystemProperty(java.util.Properties)>(r8)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke r8.<java.util.Properties: void putAll(java.util.Map)>(r4) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: void setSystemProperty(java.util.Properties)>(r8) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r41 = newarray (java.lang.Class)[1]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: void setSystemProperty(java.util.Properties)>(r8) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r41 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r41[0] = class "java/util/Properties"
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r41 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r41[0] = class "java/util/Properties" >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r9 = virtualinvoke r39.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r41)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r41[0] = class "java/util/Properties" >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r9 = virtualinvoke r39.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r41) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r42 = newarray (java.lang.Object)[1]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r9 = virtualinvoke r39.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r41) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r42 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r42[0] = r8
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r42 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r42[0] = r8 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r43 = virtualinvoke r9.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r42)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r42[0] = r8 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r43 = virtualinvoke r9.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r42) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r10 = (org.apache.zeppelin.interpreter.Interpreter) $r43
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r43 = virtualinvoke r9.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r42) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r10 = (org.apache.zeppelin.interpreter.Interpreter) $r43 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r44 = newarray (java.net.URL)[0]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r10 = (org.apache.zeppelin.interpreter.Interpreter) $r43 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r44 = newarray (java.net.URL)[0] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke r10.<org.apache.zeppelin.interpreter.Interpreter: void setClassloaderUrls(java.net.URL[])>($r44)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r44 = newarray (java.net.URL)[0] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke r10.<org.apache.zeppelin.interpreter.Interpreter: void setClassloaderUrls(java.net.URL[])>($r44) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r45 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke r10.<org.apache.zeppelin.interpreter.Interpreter: void setClassloaderUrls(java.net.URL[])>($r44) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r45 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r11 = $r45
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r45 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r11 = $r45 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : entermonitor $r45
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r11 = $r45 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : entermonitor $r45 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : entermonitor $r45 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : entermonitor $r45 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r46 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r46 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r46 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r46 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r47 = virtualinvoke $r46.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>(r2)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r47 = virtualinvoke $r46.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r47 = virtualinvoke $r46.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r47 = virtualinvoke $r46.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r12 = (java.util.List) $r47
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r12 = (java.util.List) $r47 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r12 = (java.util.List) $r47 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r12 = (java.util.List) $r47 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : if r12 != null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : if r12 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r48 = new java.util.LinkedList
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : if r12 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r51 = new org.apache.zeppelin.interpreter.LazyOpenInterpreter
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : if r12 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : if r12 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r13 = $r52 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r13 = $r52 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r13 = $r52 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : exitmonitor r11
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : exitmonitor r11 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : exitmonitor r11 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : exitmonitor r11 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : throw r13
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : throw r13 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r51 = new org.apache.zeppelin.interpreter.LazyOpenInterpreter >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r51 = new org.apache.zeppelin.interpreter.LazyOpenInterpreter >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r51 = new org.apache.zeppelin.interpreter.LazyOpenInterpreter >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r51.<org.apache.zeppelin.interpreter.LazyOpenInterpreter: void <init>(org.apache.zeppelin.interpreter.Interpreter)>(r10)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r51.<org.apache.zeppelin.interpreter.LazyOpenInterpreter: void <init>(org.apache.zeppelin.interpreter.Interpreter)>(r10) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r51.<org.apache.zeppelin.interpreter.LazyOpenInterpreter: void <init>(org.apache.zeppelin.interpreter.Interpreter)>(r10) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r51.<org.apache.zeppelin.interpreter.LazyOpenInterpreter: void <init>(org.apache.zeppelin.interpreter.Interpreter)>(r10) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>($r51)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>($r51) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>($r51) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>($r51) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : exitmonitor r11
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : exitmonitor r11 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : exitmonitor r11 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : exitmonitor r11 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : goto [?= $r53 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : goto [?= $r53 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r53 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : goto [?= $r53 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r53 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : interfaceinvoke $r53.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Instantiate interpreter {}", r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r53 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : interfaceinvoke $r53.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Instantiate interpreter {}", r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r54 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : interfaceinvoke $r53.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Instantiate interpreter {}", r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r54 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke r10.<org.apache.zeppelin.interpreter.Interpreter: void setInterpreterGroup(org.apache.zeppelin.interpreter.InterpreterGroup)>($r54)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r54 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke r10.<org.apache.zeppelin.interpreter.Interpreter: void setInterpreterGroup(org.apache.zeppelin.interpreter.InterpreterGroup)>($r54) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke r10.<org.apache.zeppelin.interpreter.Interpreter: void setUserName(java.lang.String)>(r5)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke r10.<org.apache.zeppelin.interpreter.Interpreter: void setInterpreterGroup(org.apache.zeppelin.interpreter.InterpreterGroup)>($r54) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke r10.<org.apache.zeppelin.interpreter.Interpreter: void setUserName(java.lang.String)>(r5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : goto [?= return]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke r10.<org.apache.zeppelin.interpreter.Interpreter: void setUserName(java.lang.String)>(r5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : goto [?= return] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r48 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r48 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r48 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r48.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r48.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r48.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r48.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r12 = $r48
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r12 = $r48 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r12 = $r48 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r12 = $r48 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r49 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r49 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r49 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r49 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke $r49.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r12)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke $r49.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r12) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke $r49.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r12) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke $r49.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r12) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r51 = new org.apache.zeppelin.interpreter.LazyOpenInterpreter
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r6 = new org.apache.zeppelin.interpreter.InterpreterGroup >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r6.<org.apache.zeppelin.interpreter.InterpreterGroup: void <init>(java.lang.String)>(r1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r6.<org.apache.zeppelin.interpreter.InterpreterGroup: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> = $r6
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> = $r6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r15 = new org.apache.zeppelin.display.AngularObjectRegistry
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r15 = new org.apache.zeppelin.display.AngularObjectRegistry >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r17 = virtualinvoke $r16.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String getId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r17 = virtualinvoke $r16.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r15.<org.apache.zeppelin.display.AngularObjectRegistry: void <init>(java.lang.String,org.apache.zeppelin.display.AngularObjectRegistryListener)>($r17, r0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r15.<org.apache.zeppelin.display.AngularObjectRegistry: void <init>(java.lang.String,org.apache.zeppelin.display.AngularObjectRegistryListener)>($r17, r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry> = $r15
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry> = $r15 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r18 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r18 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r19 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r19 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r20 = virtualinvoke $r19.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String getId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r20 = virtualinvoke $r19.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r18.<org.apache.zeppelin.interpreter.InterpreterHookRegistry: void <init>(java.lang.String)>($r20)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r18.<org.apache.zeppelin.interpreter.InterpreterHookRegistry: void <init>(java.lang.String)>($r20) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterHookRegistry hookRegistry> = $r18
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterHookRegistry hookRegistry> = $r18 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r21 = new org.apache.zeppelin.resource.DistributedResourcePool
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r21 = new org.apache.zeppelin.resource.DistributedResourcePool >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r22 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r22 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r23 = virtualinvoke $r22.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String getId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r23 = virtualinvoke $r22.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r24 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient eventClient>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r24 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient eventClient> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r21.<org.apache.zeppelin.resource.DistributedResourcePool: void <init>(java.lang.String,org.apache.zeppelin.resource.ResourcePoolConnector)>($r23, $r24)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r21.<org.apache.zeppelin.resource.DistributedResourcePool: void <init>(java.lang.String,org.apache.zeppelin.resource.ResourcePoolConnector)>($r23, $r24) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.resource.DistributedResourcePool resourcePool> = $r21
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.resource.DistributedResourcePool resourcePool> = $r21 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r25 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r25 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r26 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterHookRegistry hookRegistry>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r26 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterHookRegistry hookRegistry> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke $r25.<org.apache.zeppelin.interpreter.InterpreterGroup: void setInterpreterHookRegistry(org.apache.zeppelin.interpreter.InterpreterHookRegistry)>($r26)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke $r25.<org.apache.zeppelin.interpreter.InterpreterGroup: void setInterpreterHookRegistry(org.apache.zeppelin.interpreter.InterpreterHookRegistry)>($r26) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r27 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r27 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r28 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r28 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke $r27.<org.apache.zeppelin.interpreter.InterpreterGroup: void setAngularObjectRegistry(org.apache.zeppelin.display.AngularObjectRegistry)>($r28)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke $r27.<org.apache.zeppelin.interpreter.InterpreterGroup: void setAngularObjectRegistry(org.apache.zeppelin.display.AngularObjectRegistry)>($r28) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r29 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r29 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r30 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.resource.DistributedResourcePool resourcePool>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r30 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.resource.DistributedResourcePool resourcePool> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke $r29.<org.apache.zeppelin.interpreter.InterpreterGroup: void setResourcePool(org.apache.zeppelin.resource.ResourcePool)>($r30)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : virtualinvoke $r29.<org.apache.zeppelin.interpreter.InterpreterGroup: void setResourcePool(org.apache.zeppelin.resource.ResourcePool)>($r30) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r31 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("zeppelin.interpreter.localRepo")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r31 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("zeppelin.interpreter.localRepo") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r7 = (java.lang.String) $r31
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r7 = (java.lang.String) $r31 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $z0 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("zeppelin.interpreter.output.limit")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $z0 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("zeppelin.interpreter.output.limit") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : if $z0 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r32 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("zeppelin.interpreter.output.limit")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r34 = new org.apache.zeppelin.dep.DependencyResolver
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r34 = new org.apache.zeppelin.dep.DependencyResolver >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r34.<org.apache.zeppelin.dep.DependencyResolver: void <init>(java.lang.String)>(r7)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r34.<org.apache.zeppelin.dep.DependencyResolver: void <init>(java.lang.String)>(r7) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.dep.DependencyResolver depLoader> = $r34
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.dep.DependencyResolver depLoader> = $r34 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r35 = new org.apache.zeppelin.helium.ApplicationLoader
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r35 = new org.apache.zeppelin.helium.ApplicationLoader >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r36 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.resource.DistributedResourcePool resourcePool>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r36 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.resource.DistributedResourcePool resourcePool> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r37 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.dep.DependencyResolver depLoader>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r37 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.dep.DependencyResolver depLoader> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r35.<org.apache.zeppelin.helium.ApplicationLoader: void <init>(org.apache.zeppelin.resource.ResourcePool,org.apache.zeppelin.dep.DependencyResolver)>($r36, $r37)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : specialinvoke $r35.<org.apache.zeppelin.helium.ApplicationLoader: void <init>(org.apache.zeppelin.resource.ResourcePool,org.apache.zeppelin.dep.DependencyResolver)>($r36, $r37) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.helium.ApplicationLoader appLoader> = $r35
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.helium.ApplicationLoader appLoader> = $r35 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r39 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.helium.ApplicationLoader appLoader> = $r35 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r55 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r32 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("zeppelin.interpreter.output.limit") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r33 = (java.lang.String) $r32
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r33 = (java.lang.String) $r32 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r33)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r33) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : <org.apache.zeppelin.interpreter.InterpreterOutput: int limit> = $i0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : <org.apache.zeppelin.interpreter.InterpreterOutput: int limit> = $i0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.createInterpreter : $r34 = new org.apache.zeppelin.dep.DependencyResolver
