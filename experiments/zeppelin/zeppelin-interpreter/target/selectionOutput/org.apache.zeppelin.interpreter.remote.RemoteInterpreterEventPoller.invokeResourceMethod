org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r2 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: org.apache.zeppelin.resource.ResourceId resourceId> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r11 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getResourcePoolId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r11 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getResourcePoolId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r3 = staticinvoke <org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.InterpreterGroup getByInterpreterGroupId(java.lang.String)>($r11)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r3 = staticinvoke <org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.InterpreterGroup getByInterpreterGroupId(java.lang.String)>($r11) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r3 != null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r3 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r3 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r4 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r4 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r4 != null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r4 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r5 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.resource.ResourcePool getResourcePool()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r4 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r24 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess interpreterProcess>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r24 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess interpreterProcess> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $z0 = virtualinvoke $r24.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: boolean isRunning()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $z0 = virtualinvoke $r24.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: boolean isRunning()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if $z0 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r25 = null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r25 = null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : z1 = 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : z1 = 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r33 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : z1 = 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : z1 = 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r25 = virtualinvoke r4.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r25 = virtualinvoke r4.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r33 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r25 = virtualinvoke r4.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r25 = virtualinvoke r4.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r26 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getNoteId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r26 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getNoteId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r33 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r26 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getNoteId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r26 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getNoteId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r27 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getParagraphId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r27 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getParagraphId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r33 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r27 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getParagraphId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r27 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getParagraphId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r28 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r28 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r33 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r28 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r28 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r29 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: com.google.gson.Gson gson>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r29 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r33 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r29 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r29 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r30 = virtualinvoke $r29.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r30 = virtualinvoke $r29.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r33 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r30 = virtualinvoke $r29.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r30 = virtualinvoke $r29.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r31 = virtualinvoke r25.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: java.nio.ByteBuffer resourceInvokeMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r26, $r27, $r28, $r30)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r31 = virtualinvoke r25.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: java.nio.ByteBuffer resourceInvokeMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r26, $r27, $r28, $r30) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r33 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r31 = virtualinvoke r25.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: java.nio.ByteBuffer resourceInvokeMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r26, $r27, $r28, $r30) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r31 = virtualinvoke r25.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: java.nio.ByteBuffer resourceInvokeMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r26, $r27, $r28, $r30) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r8 = staticinvoke <org.apache.zeppelin.resource.Resource: java.lang.Object deserializeObject(java.nio.ByteBuffer)>(r31)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r8 = staticinvoke <org.apache.zeppelin.resource.Resource: java.lang.Object deserializeObject(java.nio.ByteBuffer)>(r31) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r33 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r8 = staticinvoke <org.apache.zeppelin.resource.Resource: java.lang.Object deserializeObject(java.nio.ByteBuffer)>(r31) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r8 = staticinvoke <org.apache.zeppelin.resource.Resource: java.lang.Object deserializeObject(java.nio.ByteBuffer)>(r31) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r9 = r8
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r9 = r8 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r33 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r9 = r8 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r9 = r8 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r25 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r25 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r32 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r25 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return r9
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r32 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : virtualinvoke $r32.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r25, z1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : virtualinvoke $r32.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r25, z1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return r9
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r10 = $r38 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r25 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r10 = $r38 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r25 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r39 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r25 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : throw r10
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r39 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : virtualinvoke $r39.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r25, z1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : virtualinvoke $r39.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r25, z1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : throw r10
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r34 = $r33 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r35 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r34 = $r33 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r35 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r36 = virtualinvoke r34.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r35 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r36 = virtualinvoke r34.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r35.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r36, r34)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r36 = virtualinvoke r34.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r35.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r36, r34) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : z1 = 1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r35.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r36, r34) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : z1 = 1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r25 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : z1 = 1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r25 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r37 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r25 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r37 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : virtualinvoke $r37.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r25, z1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : virtualinvoke $r37.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r25, z1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : goto [?= return null]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : goto [?= return null] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r5 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.resource.ResourcePool getResourcePool()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r5 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r5 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r12 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r5 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r23 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r23 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r23.<org.slf4j.Logger: void error(java.lang.String)>("no resource pool")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r23.<org.slf4j.Logger: void error(java.lang.String)>("no resource pool") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r12 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r6 = interfaceinvoke r5.<org.apache.zeppelin.resource.ResourcePool: org.apache.zeppelin.resource.Resource get(java.lang.String)>($r12)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r6 = interfaceinvoke r5.<org.apache.zeppelin.resource.ResourcePool: org.apache.zeppelin.resource.Resource get(java.lang.String)>($r12) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r6 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r6 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r13 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.String methodName>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r6 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r21 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r6 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r18 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r7 = $r18 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r19 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r19 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r20 = virtualinvoke r7.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r20 = virtualinvoke r7.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r20, r7)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r20, r7) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r21 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r22 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.String methodName>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r22 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.String methodName> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r21.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Can\'t invoke method {} on null object", $r22)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r21.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Can\'t invoke method {} on null object", $r22) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r13 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.String methodName> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r14 = virtualinvoke r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.Class[] getParamTypes()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r13 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.String methodName> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r18 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r14 = virtualinvoke r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.Class[] getParamTypes()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r15 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.Object[] params>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r14 = virtualinvoke r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.Class[] getParamTypes()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r18 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r15 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.Object[] params> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r16 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.String returnResourceName>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r15 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.Object[] params> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r18 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r16 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.String returnResourceName> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r17 = virtualinvoke r6.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.Resource invokeMethod(java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.String)>($r13, $r14, $r15, $r16)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r16 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.String returnResourceName> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r18 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r17 = virtualinvoke r6.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.Resource invokeMethod(java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.String)>($r13, $r14, $r15, $r16) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return $r17
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r17 = virtualinvoke r6.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.Resource invokeMethod(java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.String)>($r13, $r14, $r15, $r16) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r18 := @caughtexception
