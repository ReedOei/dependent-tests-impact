org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : $r7 = r0.<org.apache.zeppelin.interpreter.InterpreterPropertyBuilder: java.util.Map properties> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : $r6 = new org.apache.zeppelin.interpreter.InterpreterProperty
org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : $r6 = new org.apache.zeppelin.interpreter.InterpreterProperty >>>>>>>> org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : specialinvoke $r6.<org.apache.zeppelin.interpreter.InterpreterProperty: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4, r5)
org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : specialinvoke $r6.<org.apache.zeppelin.interpreter.InterpreterProperty: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4, r5) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6)
org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : return r0
