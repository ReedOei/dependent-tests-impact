
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

  public static boolean debug = false;

  @Test
  public void test001() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test001"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup9 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool10 = interpreterGroup9.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry12 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup9.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.shutdown();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type16 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener17 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput18 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type16, interpreterResultMessageOutputListener17);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage19 = interpreterResultMessageOutput18.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage20 = interpreterResultMessageOutput18.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener21 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput22 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener21);
    interpreterOutput22.addResourceSearchPath("isolated");
    byte[] byte_array25 = interpreterOutput22.toByteArray();
    interpreterResultMessageOutput18.write(byte_array25);
    boolean b27 = interpreterGroup0.contains((java.lang.Object)interpreterResultMessageOutput18);
    org.slf4j.Logger logger28 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream29 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger28);
    byte[] byte_array33 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream29.write(byte_array33, (int)'a', 3);
    interpreterResultMessageOutput18.write(byte_array33, (int)(short)100, 100);
    interpreterResultMessageOutput18.close();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array33);

  }

  @Test
  public void test002() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test002"); }

    org.apache.zeppelin.resource.Resource[] resource_array1 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource2 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b3 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource2, resource_array1);
    org.apache.zeppelin.resource.Resource[] resource_array4 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource5 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource5, resource_array4);
    boolean b7 = arraylist_resource5.isEmpty();
    boolean b8 = linkedlist_resource2.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource5);
    org.apache.zeppelin.display.ui.OptionInput.ParamOption paramOption9 = null;
    org.apache.zeppelin.display.ui.OptionInput.ParamOption[] paramOption_array10 = new org.apache.zeppelin.display.ui.OptionInput.ParamOption[] { paramOption9 };
    org.apache.zeppelin.display.ui.Select select11 = org.apache.zeppelin.display.Input.select("post_exec_dev", (java.lang.Object)linkedlist_resource2, paramOption_array10);
    select11.setDisplayName("[null]");
    java.lang.String str14 = select11.getArgument();
    select11.setArgument("InterpreterGroup_1497134350790_986318210");
    select11.setArgument("InterpreterGroup_1497134367518_-1467696533");
    java.lang.String str19 = select11.getDisplayName();
    java.lang.String str20 = select11.getName();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(paramOption_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(select11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[null]"+ "'", str19.equals("[null]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "post_exec_dev"+ "'", str20.equals("post_exec_dev"));

  }

  @Test
  public void test003() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test003"); }

    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener0 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput1 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener0);
    interpreterOutput1.flush();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code3 = org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry5 = interpreterGroup4.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array6 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource7 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource7, resource_array6);
    org.apache.zeppelin.resource.Resource[] resource_array9 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource10 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b11 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource10, resource_array9);
    boolean b12 = arraylist_resource10.isEmpty();
    boolean b13 = linkedlist_resource7.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource10);
    linkedlist_resource7.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter15 = interpreterGroup4.get((java.lang.Object)linkedlist_resource7);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type16 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter17 = interpreterGroup4.get((java.lang.Object)type16);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult19 = new org.apache.zeppelin.interpreter.InterpreterResult(code3, type16, "shared");
    org.apache.zeppelin.interpreter.InterpreterResult.Code code20 = org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup21 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry22 = interpreterGroup21.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array23 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource24 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource24, resource_array23);
    org.apache.zeppelin.resource.Resource[] resource_array26 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource27 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b28 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource27, resource_array26);
    boolean b29 = arraylist_resource27.isEmpty();
    boolean b30 = linkedlist_resource24.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource27);
    linkedlist_resource24.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter32 = interpreterGroup21.get((java.lang.Object)linkedlist_resource24);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type33 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter34 = interpreterGroup21.get((java.lang.Object)type33);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult36 = new org.apache.zeppelin.interpreter.InterpreterResult(code20, type33, "shared");
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult38 = new org.apache.zeppelin.interpreter.InterpreterResult(code3, type33, "InterpreterGroup_1497134367518_-1467696533");
    interpreterOutput1.setType(type33);
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput40 = interpreterOutput1.getCurrentOutput();
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput42 = interpreterOutput1.getOutputAt((int)'a');
      org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException");
    } catch (java.lang.IndexOutOfBoundsException e) {
      // Expected exception.
    }
    
    org.junit.Assert.assertTrue("'" + code3 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE + "'", code3.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter15);
    org.junit.Assert.assertTrue("'" + type16 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type16.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter17);
    org.junit.Assert.assertTrue("'" + code20 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE + "'", code20.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter32);
    org.junit.Assert.assertTrue("'" + type33 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type33.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutput40);

  }

  @Test
  public void test004() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test004"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.interpreter.InterpreterContext.set(interpreterContext35);
    org.apache.zeppelin.interpreter.InterpreterContext.set(interpreterContext35);
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo38 = interpreterContext35.getAuthenticationInfo();
    java.lang.String str39 = interpreterContext35.getParagraphTitle();
    java.lang.String str40 = interpreterContext35.getReplName();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "pre_exec_dev"+ "'", str39.equals("pre_exec_dev"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str40.equals("org.apache.zeppelin.interpreter.InterpreterException: "));

  }

  @Test
  public void test005() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test005"); }

    org.apache.zeppelin.scheduler.Job job0 = null;
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.scheduler.JobProgressPoller jobProgressPoller2 = new org.apache.zeppelin.scheduler.JobProgressPoller(job0, (long)0);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test006() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test006"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = interpreterGroup2.getInterpreterHookRegistry();
    java.lang.String str4 = interpreterGroup2.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener1, interpreterGroup2);
    org.apache.zeppelin.display.AngularObject angularObject10 = remoteAngularObjectRegistry5.remove("org.apache.zeppelin.interpreter.InterpreterException: ", "", "post_exec_dev", true);
    org.apache.zeppelin.display.AngularObject angularObject14 = remoteAngularObjectRegistry5.get("InterpreterGroup_1497134371990_1999798592", "InterpreterGroup_1497134374771_373499119", "[null]");
    org.apache.zeppelin.display.AngularObject angularObject18 = remoteAngularObjectRegistry5.remove("scoped", "InterpreterGroup_1497134386032_1263213569", "AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}");
    org.apache.zeppelin.display.AngularObject angularObject22 = remoteAngularObjectRegistry5.get("InterpreterGroup_1497134405176_-1094264094", "InterpreterGroup_1497134378013_-178412288", "InterpreterGroup_1497134361189_-653890590");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}"+ "'", str4.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject22);

  }

  @Test
  public void test007() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test007"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener7 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry8 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener7);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry11 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry8, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject13 = heliumAppAngularObjectRegistry11.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput14 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext15 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry11, interpreterOutput14);
    org.apache.zeppelin.display.AngularObject angularObject17 = heliumAppAngularObjectRegistry11.remove("InterpreterGroup_1497134353138_86992792");
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener25 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry26 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener25);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry29 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry26, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject31 = heliumAppAngularObjectRegistry29.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput32 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext33 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry29, interpreterOutput32);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener34 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener35 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput36 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener34, interpreterOutputChangeListener35);
    org.apache.zeppelin.helium.ApplicationContext applicationContext37 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry29, interpreterOutput36);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput38 = applicationContext37.out;
    org.apache.zeppelin.helium.ApplicationContext applicationContext39 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134374771_373499119", "InterpreterGroup_1497134367518_-1467696533", "isolated", heliumAppAngularObjectRegistry11, interpreterOutput38);
    java.lang.String str40 = applicationContext39.getNoteId();
    java.lang.String str41 = applicationContext39.getParagraphId();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOutput38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "InterpreterGroup_1497134374771_373499119"+ "'", str40.equals("InterpreterGroup_1497134374771_373499119"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "InterpreterGroup_1497134367518_-1467696533"+ "'", str41.equals("InterpreterGroup_1497134367518_-1467696533"));

  }

  @Test
  public void test008() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test008"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory1 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService4 = executorFactory1.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory5 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.Scheduler scheduler7 = schedulerFactory5.createOrGetFIFOScheduler("InterpreterGroup_1497134361189_-653890590");
    org.apache.zeppelin.scheduler.FIFOScheduler fIFOScheduler8 = new org.apache.zeppelin.scheduler.FIFOScheduler("hi!", executorService4, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory5);
    schedulerFactory5.destroy();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler7);

  }

  @Test
  public void test009() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test009"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource10 = linkedlist_resource1.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo11 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i12 = linkedlist_resource1.indexOf((java.lang.Object)authenticationInfo11);
    java.lang.String str13 = authenticationInfo11.getTicket();
    authenticationInfo11.setTicket("InterpreterGroup_1497134361094_1261121192");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[]"+ "'", str13.equals("[]"));

  }

  @Test
  public void test010() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test010"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.resource.ResourcePool resourcePool2 = interpreterGroup0.getResourcePool();
    java.util.Set<java.lang.String> set_str3 = interpreterGroup0.keySet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_str3);

  }

  @Test
  public void test011() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test011"); }

    org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool interpreterContextRunnerPool0 = new org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool();
    org.apache.zeppelin.resource.Resource[] resource_array7 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource8 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource8, resource_array7);
    org.apache.zeppelin.resource.Resource[] resource_array10 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource11 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource11, resource_array10);
    boolean b13 = arraylist_resource11.isEmpty();
    boolean b14 = linkedlist_resource8.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource11);
    org.apache.zeppelin.resource.Resource resource15 = null;
    boolean b16 = linkedlist_resource8.add(resource15);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource17 = linkedlist_resource8.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo18 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i19 = linkedlist_resource8.indexOf((java.lang.Object)authenticationInfo18);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj20 = null;
    org.apache.zeppelin.display.GUI gUI21 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener23 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry24 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener23);
    org.apache.zeppelin.display.AngularObject angularObject29 = angularObjectRegistry24.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool31 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array32 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner33 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b34 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner33, interpreterContextRunner_array32);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput35 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController36 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext37 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo18, map_str_obj20, gUI21, angularObjectRegistry24, (org.apache.zeppelin.resource.ResourcePool)localResourcePool31, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner33, interpreterOutput35, remoteWorksController36);
    interpreterContextRunnerPool0.addAll("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner33);
    interpreterContextRunnerPool0.clear("InterpreterGroup_1497134361189_-653890590");
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterContextRunner remoteInterpreterContextRunner44 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterContextRunner("InterpreterGroup_1497134353138_86992792", "zeppelin.interpreter.host");
    java.lang.String str45 = remoteInterpreterContextRunner44.getParagraphId();
    interpreterContextRunnerPool0.add("InterpreterGroup_1497134373781_-855626841", (org.apache.zeppelin.interpreter.InterpreterContextRunner)remoteInterpreterContextRunner44);
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener48 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry49 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener48);
    org.apache.zeppelin.resource.Resource[] resource_array51 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource52 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b53 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource52, resource_array51);
    org.apache.zeppelin.resource.Resource[] resource_array54 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource55 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b56 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource55, resource_array54);
    boolean b57 = arraylist_resource55.isEmpty();
    boolean b58 = linkedlist_resource52.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource55);
    linkedlist_resource52.clear();
    org.apache.zeppelin.display.AngularObject angularObject63 = angularObjectRegistry49.add("_GLOBAL_", (java.lang.Object)linkedlist_resource52, "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "pre_exec", false);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup64 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry65 = interpreterGroup64.getInterpreterHookRegistry();
    java.lang.String str66 = interpreterGroup64.toString();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup68 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str69 = interpreterGroup68.getId();
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array71 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter72 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b73 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter72, interpreter_array71);
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter74 = interpreterGroup68.putIfAbsent("pre_exec_dev", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter72);
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array75 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter76 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b77 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter76, interpreter_array75);
    boolean b78 = interpreterGroup64.replace("InterpreterGroup_1497134350790_986318210", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter72, (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter76);
    boolean b79 = linkedlist_resource52.containsAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter72);
    boolean b80 = remoteInterpreterContextRunner44.equals((java.lang.Object)linkedlist_resource52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "zeppelin.interpreter.host"+ "'", str45.equals("zeppelin.interpreter.host"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str66 + "' != '" + "{}"+ "'", str66.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "InterpreterGroup_1497134412057_-886896671"+ "'", str69.equals("InterpreterGroup_1497134412057_-886896671"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == false);

  }

  @Test
  public void test012() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test012"); }

    org.apache.zeppelin.interpreter.InterpreterProperty interpreterProperty4 = new org.apache.zeppelin.interpreter.InterpreterProperty("zeppelin.interpreter.port", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "{}", "anonymous");
    org.apache.zeppelin.display.GUI gUI5 = new org.apache.zeppelin.display.GUI();
    java.util.LinkedHashMap<java.lang.String,org.apache.zeppelin.display.Input> linkedhashmap_str_input6 = gUI5.getForms();
    java.lang.Object obj9 = gUI5.input("InterpreterGroup_1497134350790_986318210", (java.lang.Object)(byte)1);
    boolean b10 = interpreterProperty4.equals(obj9);
    java.lang.String str11 = interpreterProperty4.getDefaultValue();
    java.lang.String str12 = interpreterProperty4.getDescription();
    interpreterProperty4.setPropertyName("<div class=\"result-alert alert-warning\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>%s</div>");
    java.lang.String str15 = interpreterProperty4.getDescription();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(linkedhashmap_str_input6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + "1"+ "'", obj9.equals("1"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "{}"+ "'", str11.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "anonymous"+ "'", str12.equals("anonymous"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "anonymous"+ "'", str15.equals("anonymous"));

  }

  @Test
  public void test013() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test013"); }

    java.nio.ByteBuffer byteBuffer0 = null;
    org.apache.zeppelin.resource.ByteBufferInputStream byteBufferInputStream1 = new org.apache.zeppelin.resource.ByteBufferInputStream(byteBuffer0);
    boolean b2 = byteBufferInputStream1.markSupported();
    byteBufferInputStream1.close();
    int i4 = byteBufferInputStream1.available();
    int i5 = byteBufferInputStream1.available();
    byteBufferInputStream1.mark(29914);
    // The following exception was thrown during execution in test generation
    try {
    long long9 = byteBufferInputStream1.skip((long)'a');
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);

  }

  @Test
  public void test014() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test014"); }

    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption1 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption2 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption1);
    interpreterOption2.setHost("[null]");
    interpreterOption2.setPerNote("InterpreterGroup_1497134350938_711831855");
    boolean b7 = interpreterOption2.perNoteIsolated();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test015() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test015"); }

    org.apache.zeppelin.helium.HeliumType heliumType0 = null;
    java.lang.String[][] str_array_array5 = new java.lang.String[][] {  };
    org.apache.zeppelin.helium.HeliumPackage heliumPackage8 = new org.apache.zeppelin.helium.HeliumPackage(heliumType0, "", "", "hi!", "hi!", str_array_array5, "post_exec_dev", "post_exec_dev");
    java.lang.String str9 = heliumPackage8.getArtifactId();
    java.lang.String str10 = heliumPackage8.getClassName();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!"+ "'", str10.equals("hi!"));

  }

  @Test
  public void test016() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test016"); }

    org.apache.zeppelin.dep.DependencyResolver dependencyResolver1 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134376971_-1963975868");
    dependencyResolver1.addRepo("1", "1", false);
    java.util.List<java.io.File> list_file7 = dependencyResolver1.load("InterpreterGroup_1497134350938_711831855");
    org.sonatype.aether.repository.Authentication authentication11 = null;
    org.sonatype.aether.repository.Proxy proxy12 = null;
    dependencyResolver1.addRepo("InterpreterGroup_1497134376971_-1963975868", "InterpreterGroup_1497134411090_182457301", true, authentication11, proxy12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file7);

  }

  @Test
  public void test017() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test017"); }

    java.nio.ByteBuffer byteBuffer0 = null;
    org.apache.zeppelin.resource.ByteBufferInputStream byteBufferInputStream1 = new org.apache.zeppelin.resource.ByteBufferInputStream(byteBuffer0);
    int i2 = byteBufferInputStream1.available();
    boolean b3 = byteBufferInputStream1.markSupported();
    int i4 = byteBufferInputStream1.available();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);

  }

  @Test
  public void test018() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test018"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup1 = new org.apache.zeppelin.interpreter.InterpreterGroup("AngularObject{noteId='<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>', paragraphId='pre_exec', object=[], name='_GLOBAL_'}");

  }

  @Test
  public void test019() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test019"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener1);
    org.apache.zeppelin.resource.Resource[] resource_array4 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource5 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource5, resource_array4);
    org.apache.zeppelin.resource.Resource[] resource_array7 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource8 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8, resource_array7);
    boolean b10 = arraylist_resource8.isEmpty();
    boolean b11 = linkedlist_resource5.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8);
    linkedlist_resource5.clear();
    org.apache.zeppelin.display.AngularObject angularObject16 = angularObjectRegistry2.add("_GLOBAL_", (java.lang.Object)linkedlist_resource5, "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "pre_exec", false);
    java.util.List<org.apache.zeppelin.display.AngularObject> list_angularObject19 = angularObjectRegistry2.getAll("pre_exec", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.Resource[] resource_array26 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource27 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b28 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource27, resource_array26);
    org.apache.zeppelin.resource.Resource[] resource_array29 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource30 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource30, resource_array29);
    boolean b32 = arraylist_resource30.isEmpty();
    boolean b33 = linkedlist_resource27.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource30);
    org.apache.zeppelin.resource.Resource resource34 = null;
    boolean b35 = linkedlist_resource27.add(resource34);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource36 = linkedlist_resource27.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo37 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i38 = linkedlist_resource27.indexOf((java.lang.Object)authenticationInfo37);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj39 = null;
    org.apache.zeppelin.display.GUI gUI40 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener42 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry43 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener42);
    org.apache.zeppelin.display.AngularObject angularObject48 = angularObjectRegistry43.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool50 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array51 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner52 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b53 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner52, interpreterContextRunner_array51);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput54 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController55 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext56 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo37, map_str_obj39, gUI40, angularObjectRegistry43, (org.apache.zeppelin.resource.ResourcePool)localResourcePool50, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner52, interpreterOutput54, remoteWorksController55);
    org.apache.zeppelin.interpreter.InterpreterContext.set(interpreterContext56);
    java.lang.String str58 = interpreterContext56.getReplName();
    java.lang.String str59 = interpreterContext56.getReplName();
    java.lang.String str60 = interpreterContext56.getParagraphId();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner> list_interpreterContextRunner61 = interpreterContext56.getRunners();
    org.apache.zeppelin.display.AngularObject angularObject64 = angularObjectRegistry2.add("InterpreterGroup_1497134384596_204399223", (java.lang.Object)interpreterContext56, "InterpreterGroup_1497134376922_-128746751", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}");
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry65 = interpreterContext56.getAngularObjectRegistry();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_angularObject19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str58.equals("org.apache.zeppelin.interpreter.InterpreterException: "));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str59.equals("org.apache.zeppelin.interpreter.InterpreterException: "));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "InterpreterGroup_1497134353138_86992792"+ "'", str60.equals("InterpreterGroup_1497134353138_86992792"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterContextRunner61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObjectRegistry65);

  }

  @Test
  public void test020() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test020"); }

    org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool interpreterContextRunnerPool0 = new org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool();
    org.apache.zeppelin.resource.Resource[] resource_array7 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource8 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource8, resource_array7);
    org.apache.zeppelin.resource.Resource[] resource_array10 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource11 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource11, resource_array10);
    boolean b13 = arraylist_resource11.isEmpty();
    boolean b14 = linkedlist_resource8.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource11);
    org.apache.zeppelin.resource.Resource resource15 = null;
    boolean b16 = linkedlist_resource8.add(resource15);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource17 = linkedlist_resource8.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo18 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i19 = linkedlist_resource8.indexOf((java.lang.Object)authenticationInfo18);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj20 = null;
    org.apache.zeppelin.display.GUI gUI21 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener23 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry24 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener23);
    org.apache.zeppelin.display.AngularObject angularObject29 = angularObjectRegistry24.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool31 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array32 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner33 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b34 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner33, interpreterContextRunner_array32);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput35 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController36 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext37 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo18, map_str_obj20, gUI21, angularObjectRegistry24, (org.apache.zeppelin.resource.ResourcePool)localResourcePool31, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner33, interpreterOutput35, remoteWorksController36);
    interpreterContextRunnerPool0.addAll("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner33);
    interpreterContextRunnerPool0.clear("InterpreterGroup_1497134361189_-653890590");
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterContextRunner remoteInterpreterContextRunner44 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterContextRunner("InterpreterGroup_1497134353138_86992792", "zeppelin.interpreter.host");
    java.lang.String str45 = remoteInterpreterContextRunner44.getParagraphId();
    interpreterContextRunnerPool0.add("InterpreterGroup_1497134373781_-855626841", (org.apache.zeppelin.interpreter.InterpreterContextRunner)remoteInterpreterContextRunner44);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterContextRunner remoteInterpreterContextRunner50 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterContextRunner("InterpreterGroup_1497134353138_86992792", "zeppelin.interpreter.host");
    java.lang.String str51 = remoteInterpreterContextRunner50.getParagraphId();
    interpreterContextRunnerPool0.add("InterpreterGroup_1497134379014_-1019571993", (org.apache.zeppelin.interpreter.InterpreterContextRunner)remoteInterpreterContextRunner50);
    java.lang.String str53 = remoteInterpreterContextRunner50.getParagraphId();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "zeppelin.interpreter.host"+ "'", str45.equals("zeppelin.interpreter.host"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "zeppelin.interpreter.host"+ "'", str51.equals("zeppelin.interpreter.host"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "zeppelin.interpreter.host"+ "'", str53.equals("zeppelin.interpreter.host"));

  }

  @Test
  public void test021() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test021"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code10 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array11 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage12 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage12, interpreterResultMessage_array11);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult14 = new org.apache.zeppelin.interpreter.InterpreterResult(code10, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage12);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code15 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array16 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage17 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage17, interpreterResultMessage_array16);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult19 = new org.apache.zeppelin.interpreter.InterpreterResult(code15, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage17);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code20 = interpreterResult19.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage21 = interpreterResult19.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code22 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array23 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage24 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage24, interpreterResultMessage_array23);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult26 = new org.apache.zeppelin.interpreter.InterpreterResult(code22, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage24);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code27 = interpreterResult26.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage28 = interpreterResult26.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code29 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array30 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage31, interpreterResultMessage_array30);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult33 = new org.apache.zeppelin.interpreter.InterpreterResult(code29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage31);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code34 = interpreterResult33.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage35 = interpreterResult33.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code36 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array37 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage38 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b39 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage38, interpreterResultMessage_array37);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult40 = new org.apache.zeppelin.interpreter.InterpreterResult(code36, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage38);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code41 = interpreterResult40.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage42 = interpreterResult40.message();
    java.util.List[] list_array44 = new java.util.List[ 5 ];
    @SuppressWarnings("unchecked")
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[] list_interpreterResultMessage_array45 = (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[])list_array44;
    list_interpreterResultMessage_array45[0] = arraylist_interpreterResultMessage12;
    list_interpreterResultMessage_array45[1] = list_interpreterResultMessage21;
    list_interpreterResultMessage_array45[2] = list_interpreterResultMessage28;
    list_interpreterResultMessage_array45[3] = list_interpreterResultMessage35;
    list_interpreterResultMessage_array45[4] = list_interpreterResultMessage42;
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[] list_interpreterResultMessage_array56 = linkedlist_resource1.toArray(list_interpreterResultMessage_array45);
    org.apache.zeppelin.resource.Resource resource57 = null;
    boolean b58 = linkedlist_resource1.offerFirst(resource57);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource59 = linkedlist_resource1.iterator();
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource60 = linkedlist_resource1.descendingIterator();
    int i61 = linkedlist_resource1.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i61 == 2);

  }

  @Test
  public void test022() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test022"); }

    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption1 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption2 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption1);
    interpreterOption1.setPort(10);
    interpreterOption1.setPerUser("InterpreterGroup_1497134384934_2010942845");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption2);

  }

  @Test
  public void test023() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test023"); }

    org.apache.zeppelin.dep.DependencyResolver dependencyResolver1 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134376971_-1963975868");
    dependencyResolver1.addRepo("1", "1", false);
    java.util.List<java.io.File> list_file7 = dependencyResolver1.load("");
    org.sonatype.aether.repository.RemoteRepository remoteRepository9 = dependencyResolver1.delRepo("InterpreterGroup_1497134350790_986318210");
    java.net.URL uRL10 = null;
    // The following exception was thrown during execution in test generation
    try {
    dependencyResolver1.setProxy(uRL10, "InterpreterGroup_1497134393739_-53647588", "InterpreterGroup_1497134408379_1574252163");
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(remoteRepository9);

  }

  @Test
  public void test024() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test024"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    boolean b11 = linkedlist_resource1.contains((java.lang.Object)(-1));
    org.apache.zeppelin.resource.Resource resource12 = null;
    boolean b13 = linkedlist_resource1.offerLast(resource12);
    org.apache.zeppelin.resource.Resource[] resource_array15 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource16 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource16, resource_array15);
    org.apache.zeppelin.resource.Resource[] resource_array18 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource19 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource19, resource_array18);
    boolean b21 = arraylist_resource19.isEmpty();
    boolean b22 = linkedlist_resource16.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource19);
    org.apache.zeppelin.resource.Resource resource23 = null;
    boolean b24 = linkedlist_resource16.add(resource23);
    boolean b26 = linkedlist_resource16.contains((java.lang.Object)(-1));
    boolean b27 = linkedlist_resource1.addAll(1, (java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource16);
    org.apache.zeppelin.resource.ResourceSet resourceSet28 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet30 = resourceSet28.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet32 = resourceSet28.filterByNoteId("_GLOBAL_");
    org.apache.zeppelin.resource.Resource resource33 = null;
    boolean b34 = resourceSet32.offerLast(resource33);
    int i35 = linkedlist_resource1.lastIndexOf((java.lang.Object)b34);
    org.apache.zeppelin.resource.Resource resource37 = null;
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.resource.Resource resource38 = linkedlist_resource1.set((int)(byte)-1, resource37);
      org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException");
    } catch (java.lang.IndexOutOfBoundsException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == (-1));

  }

  @Test
  public void test025() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test025"); }

    org.apache.zeppelin.tabledata.ColumnDef.TYPE tYPE1 = org.apache.zeppelin.tabledata.ColumnDef.TYPE.INT;
    org.apache.zeppelin.tabledata.ColumnDef columnDef2 = new org.apache.zeppelin.tabledata.ColumnDef("InterpreterGroup_1497134353138_86992792", tYPE1);
    org.apache.zeppelin.tabledata.ColumnDef.TYPE tYPE3 = columnDef2.type();
    org.apache.zeppelin.tabledata.ColumnDef.TYPE tYPE4 = columnDef2.type();
    org.junit.Assert.assertTrue("'" + tYPE1 + "' != '" + org.apache.zeppelin.tabledata.ColumnDef.TYPE.INT + "'", tYPE1.equals(org.apache.zeppelin.tabledata.ColumnDef.TYPE.INT));
    org.junit.Assert.assertTrue("'" + tYPE3 + "' != '" + org.apache.zeppelin.tabledata.ColumnDef.TYPE.INT + "'", tYPE3.equals(org.apache.zeppelin.tabledata.ColumnDef.TYPE.INT));
    org.junit.Assert.assertTrue("'" + tYPE4 + "' != '" + org.apache.zeppelin.tabledata.ColumnDef.TYPE.INT + "'", tYPE4.equals(org.apache.zeppelin.tabledata.ColumnDef.TYPE.INT));

  }

  @Test
  public void test026() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test026"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener1);
    org.apache.zeppelin.resource.Resource[] resource_array4 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource5 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource5, resource_array4);
    org.apache.zeppelin.resource.Resource[] resource_array7 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource8 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8, resource_array7);
    boolean b10 = arraylist_resource8.isEmpty();
    boolean b11 = linkedlist_resource5.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8);
    linkedlist_resource5.clear();
    org.apache.zeppelin.display.AngularObject angularObject16 = angularObjectRegistry2.add("_GLOBAL_", (java.lang.Object)linkedlist_resource5, "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "pre_exec", false);
    java.lang.String str17 = angularObject16.toString();
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener18 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput19 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener18);
    interpreterOutput19.addResourceSearchPath("isolated");
    byte[] byte_array22 = interpreterOutput19.toByteArray();
    interpreterOutput19.write((int)(byte)1);
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput25 = interpreterOutput19.getCurrentOutput();
    angularObject16.set((java.io.OutputStream)interpreterResultMessageOutput25, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "AngularObject{noteId='<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>', paragraphId='pre_exec', object=[], name='_GLOBAL_'}"+ "'", str17.equals("AngularObject{noteId='<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>', paragraphId='pre_exec', object=[], name='_GLOBAL_'}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutput25);

  }

  @Test
  public void test027() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test027"); }

    org.apache.zeppelin.helium.HeliumType heliumType0 = org.apache.zeppelin.helium.HeliumType.INTERPRETER;
    java.lang.String[][] str_array_array5 = null;
    org.apache.zeppelin.helium.HeliumPackage heliumPackage8 = new org.apache.zeppelin.helium.HeliumPackage(heliumType0, "org.apache.zeppelin.tabledata.TableDataException: <strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "InterpreterGroup_1497134410138_-585552671", "InterpreterGroup_1497134385808_1965526612", "InterpreterGroup_1497134384931_-1968252549", str_array_array5, "InterpreterGroup_1497134384931_-1968252549", "<div class=\"result-alert alert-warning\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>%s</div>");
    org.junit.Assert.assertTrue("'" + heliumType0 + "' != '" + org.apache.zeppelin.helium.HeliumType.INTERPRETER + "'", heliumType0.equals(org.apache.zeppelin.helium.HeliumType.INTERPRETER));

  }

  @Test
  public void test028() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test028"); }

    org.apache.zeppelin.interpreter.InterpreterProperty interpreterProperty4 = new org.apache.zeppelin.interpreter.InterpreterProperty("InterpreterGroup_1497134367518_-1467696533", "AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}", "pre_exec", "InterpreterGroup_1497134393145_-2056563636");
    java.lang.String str5 = interpreterProperty4.toString();
    java.lang.String str6 = interpreterProperty4.getDescription();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "{envName=InterpreterGroup_1497134367518_-1467696533, propertyName=AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}, defaultValue=pre_exec, description=InterpreterGroup_1497134393145_-2056563636}"+ "'", str5.equals("{envName=InterpreterGroup_1497134367518_-1467696533, propertyName=AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}, defaultValue=pre_exec, description=InterpreterGroup_1497134393145_-2056563636}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "InterpreterGroup_1497134393145_-2056563636"+ "'", str6.equals("InterpreterGroup_1497134393145_-2056563636"));

  }

  @Test
  public void test029() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test029"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener0 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener1 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener0, applicationEventListener1);
    remoteInterpreterEventPoller2.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    boolean b8 = interpreterGroup4.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str9 = interpreterGroup4.getId();
    remoteInterpreterEventPoller2.setInterpreterGroup(interpreterGroup4);
    remoteInterpreterEventPoller2.run();
    java.util.Map<java.lang.String,java.lang.String> map_str_str15 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener17 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener18 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess20 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str15, 59683, remoteInterpreterProcessListener17, applicationEventListener18, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterEventPoller2.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess20);
    int i22 = remoteInterpreterManagedProcess20.getConnectTimeout();
    remoteInterpreterManagedProcess20.setMaxPoolSize(1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "InterpreterGroup_1497134413115_2139466129"+ "'", str9.equals("InterpreterGroup_1497134413115_2139466129"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 59683);

  }

  @Test
  public void test030() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test030"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = interpreterGroup2.getInterpreterHookRegistry();
    java.lang.String str4 = interpreterGroup2.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener1, interpreterGroup2);
    org.apache.zeppelin.display.AngularObject angularObject10 = remoteAngularObjectRegistry5.remove("_GLOBAL_", "post_exec_dev", "_GLOBAL_", false);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry13 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry((org.apache.zeppelin.display.AngularObjectRegistry)remoteAngularObjectRegistry5, "InterpreterGroup_1497134350790_986318210", "InterpreterGroup_1497134367518_-1467696533");
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption16 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption17 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption16);
    interpreterOption17.setHost("[null]");
    interpreterOption17.setExistingProcess(false);
    org.apache.zeppelin.display.AngularObject angularObject22 = heliumAppAngularObjectRegistry13.add("pre_exec_dev", (java.lang.Object)interpreterOption17);
    java.util.List<org.apache.zeppelin.display.AngularObject> list_angularObject23 = heliumAppAngularObjectRegistry13.getAll();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}"+ "'", str4.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_angularObject23);

  }

  @Test
  public void test031() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test031"); }

    org.apache.zeppelin.interpreter.remote.ClientFactory clientFactory2 = new org.apache.zeppelin.interpreter.remote.ClientFactory("post_exec_dev", (int)(short)1);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client3 = null;
    clientFactory2.passivateObject(pooledobject_client3);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client5 = null;
    clientFactory2.passivateObject(pooledobject_client5);
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client7 = null;
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client8 = clientFactory2.wrap(client7);
    org.apache.zeppelin.interpreter.remote.ClientFactory clientFactory11 = new org.apache.zeppelin.interpreter.remote.ClientFactory("post_exec_dev", (int)(short)1);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client12 = null;
    clientFactory11.passivateObject(pooledobject_client12);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client14 = null;
    clientFactory11.passivateObject(pooledobject_client14);
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client16 = null;
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client17 = clientFactory11.wrap(client16);
    // The following exception was thrown during execution in test generation
    try {
    boolean b18 = clientFactory2.validateObject(pooledobject_client17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(pooledobject_client8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(pooledobject_client17);

  }

  @Test
  public void test032() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test032"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener1);
    angularObjectRegistry2.removeAll("zeppelin.interpreter.port", "InterpreterGroup_1497134377636_1315933403");

  }

  @Test
  public void test033() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test033"); }

    org.apache.zeppelin.dep.TransferListener transferListener0 = new org.apache.zeppelin.dep.TransferListener();
    org.sonatype.aether.transfer.TransferEvent transferEvent1 = null;
    transferListener0.transferStarted(transferEvent1);
    org.sonatype.aether.transfer.TransferEvent transferEvent3 = null;
    transferListener0.transferStarted(transferEvent3);
    org.sonatype.aether.transfer.TransferEvent transferEvent5 = null;
    // The following exception was thrown during execution in test generation
    try {
    transferListener0.transferSucceeded(transferEvent5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test034() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test034"); }

    org.slf4j.Logger logger0 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream1 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger0);
    byte[] byte_array5 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream1.write(byte_array5, (int)'a', 3);
    int i9 = interpreterOutputStream1.getMessageLevel();
    interpreterOutputStream1.write((int)(byte)100);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 999);

  }

  @Test
  public void test035() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test035"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("InterpreterGroup_1497134374528_1509866041", angularObjectRegistryListener1);

  }

  @Test
  public void test036() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test036"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory0 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService2 = executorFactory0.createOrGet("hi!");
    java.util.concurrent.ExecutorService executorService5 = executorFactory0.createOrGet("InterpreterGroup_1497134350790_986318210", (int)'#');
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService5);

  }

  @Test
  public void test037() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test037"); }

    boolean b2 = org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils.checkIfRemoteEndpointAccessible("InterpreterGroup_1497134404697_-764373822", 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);

  }

  @Test
  public void test038() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test038"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code10 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array11 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage12 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage12, interpreterResultMessage_array11);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult14 = new org.apache.zeppelin.interpreter.InterpreterResult(code10, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage12);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code15 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array16 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage17 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage17, interpreterResultMessage_array16);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult19 = new org.apache.zeppelin.interpreter.InterpreterResult(code15, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage17);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code20 = interpreterResult19.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage21 = interpreterResult19.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code22 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array23 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage24 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage24, interpreterResultMessage_array23);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult26 = new org.apache.zeppelin.interpreter.InterpreterResult(code22, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage24);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code27 = interpreterResult26.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage28 = interpreterResult26.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code29 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array30 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage31, interpreterResultMessage_array30);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult33 = new org.apache.zeppelin.interpreter.InterpreterResult(code29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage31);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code34 = interpreterResult33.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage35 = interpreterResult33.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code36 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array37 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage38 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b39 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage38, interpreterResultMessage_array37);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult40 = new org.apache.zeppelin.interpreter.InterpreterResult(code36, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage38);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code41 = interpreterResult40.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage42 = interpreterResult40.message();
    java.util.List[] list_array44 = new java.util.List[ 5 ];
    @SuppressWarnings("unchecked")
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[] list_interpreterResultMessage_array45 = (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[])list_array44;
    list_interpreterResultMessage_array45[0] = arraylist_interpreterResultMessage12;
    list_interpreterResultMessage_array45[1] = list_interpreterResultMessage21;
    list_interpreterResultMessage_array45[2] = list_interpreterResultMessage28;
    list_interpreterResultMessage_array45[3] = list_interpreterResultMessage35;
    list_interpreterResultMessage_array45[4] = list_interpreterResultMessage42;
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[] list_interpreterResultMessage_array56 = linkedlist_resource1.toArray(list_interpreterResultMessage_array45);
    org.apache.zeppelin.resource.Resource resource57 = null;
    boolean b58 = linkedlist_resource1.offerFirst(resource57);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource59 = linkedlist_resource1.iterator();
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource60 = linkedlist_resource1.descendingIterator();
    org.apache.zeppelin.resource.Resource resource61 = linkedlist_resource1.remove();
    int i62 = linkedlist_resource1.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i62 == 1);

  }

  @Test
  public void test039() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test039"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet1 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResourcesExcept("_GLOBAL_");
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener3 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry5 = interpreterGroup4.getInterpreterHookRegistry();
    java.lang.String str6 = interpreterGroup4.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry7 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener3, interpreterGroup4);
    org.apache.zeppelin.display.AngularObject angularObject12 = remoteAngularObjectRegistry7.remove("org.apache.zeppelin.interpreter.InterpreterException: ", "", "post_exec_dev", true);
    org.apache.zeppelin.display.AngularObject angularObject17 = remoteAngularObjectRegistry7.remove("[null]", "shared", "post_exec_dev", true);
    int i18 = resourceSet1.lastIndexOf((java.lang.Object)"[null]");
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory20 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService23 = executorFactory20.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess25 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory26 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler28 = new org.apache.zeppelin.scheduler.RemoteScheduler("zeppelin.interpreter.host", executorService23, "pre_exec_dev", remoteInterpreterProcess25, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory26, (int)(short)1);
    remoteScheduler28.stop();
    java.util.Collection<org.apache.zeppelin.scheduler.Job> collection_job30 = remoteScheduler28.getJobsRunning();
    boolean b31 = resourceSet1.containsAll(collection_job30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}"+ "'", str6.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_job30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);

  }

  @Test
  public void test040() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test040"); }

    org.apache.zeppelin.interpreter.remote.AppendOutputBuffer appendOutputBuffer4 = new org.apache.zeppelin.interpreter.remote.AppendOutputBuffer("InterpreterGroup_1497134361094_1261121192", "anonymous", (int)(short)100, "InterpreterGroup_1497134350938_711831855");
    java.lang.String str5 = appendOutputBuffer4.getParagraphId();
    java.lang.String str6 = appendOutputBuffer4.getData();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "anonymous"+ "'", str5.equals("anonymous"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "InterpreterGroup_1497134350938_711831855"+ "'", str6.equals("InterpreterGroup_1497134350938_711831855"));

  }

  @Test
  public void test041() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test041"); }

    org.apache.zeppelin.display.AngularObject<java.io.OutputStream> angularobject_outputStream0 = new org.apache.zeppelin.display.AngularObject<java.io.OutputStream>();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener2 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput3 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type1, interpreterResultMessageOutputListener2);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type4 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput3.setType(type4);
    angularobject_outputStream0.set((java.io.OutputStream)interpreterResultMessageOutput3);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type7 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener8 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput9 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type7, interpreterResultMessageOutputListener8);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage10 = interpreterResultMessageOutput9.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage11 = interpreterResultMessageOutput9.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup12 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry13 = interpreterGroup12.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array14 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource15 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource15, resource_array14);
    org.apache.zeppelin.resource.Resource[] resource_array17 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource18 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource18, resource_array17);
    boolean b20 = arraylist_resource18.isEmpty();
    boolean b21 = linkedlist_resource15.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource18);
    linkedlist_resource15.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter23 = interpreterGroup12.get((java.lang.Object)linkedlist_resource15);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type24 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter25 = interpreterGroup12.get((java.lang.Object)type24);
    interpreterResultMessageOutput9.setType(type24);
    interpreterResultMessageOutput3.setType(type24);
    org.slf4j.Logger logger28 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream29 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger28);
    byte[] byte_array33 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream29.write(byte_array33, (int)'a', 3);
    interpreterResultMessageOutput3.write(byte_array33, (int)'#', 2);
    boolean b40 = interpreterResultMessageOutput3.isAppendSupported();
    // The following exception was thrown during execution in test generation
    try {
    interpreterResultMessageOutput3.writeResource("InterpreterGroup_1497134350938_711831855");
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    org.junit.Assert.assertTrue("'" + type4 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type4.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter23);
    org.junit.Assert.assertTrue("'" + type24 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type24.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);

  }

  @Test
  public void test042() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test042"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage3 = interpreterResultMessageOutput2.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage4 = interpreterResultMessageOutput2.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener5 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput6 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener5);
    interpreterOutput6.addResourceSearchPath("isolated");
    byte[] byte_array9 = interpreterOutput6.toByteArray();
    interpreterResultMessageOutput2.write(byte_array9);
    interpreterResultMessageOutput2.flush();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array9);

  }

  @Test
  public void test043() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test043"); }

    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory0 = org.apache.zeppelin.scheduler.SchedulerFactory.singleton();
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess3 = null;
    org.apache.zeppelin.scheduler.Scheduler scheduler5 = schedulerFactory0.createOrGetRemoteScheduler("{}", "_GLOBAL_", remoteInterpreterProcess3, (int)(short)1);
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.scheduler.Scheduler scheduler7 = schedulerFactory0.createOrGetFIFOScheduler("<div class=\"result-alert alert-warning\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>%s</div>");
      org.junit.Assert.fail("Expected exception of type java.util.concurrent.RejectedExecutionException");
    } catch (java.util.concurrent.RejectedExecutionException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(schedulerFactory0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler5);

  }

  @Test
  public void test044() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test044"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet1 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResourcesExcept("_GLOBAL_");
    // The following exception was thrown during execution in test generation
    try {
    java.util.List<org.apache.zeppelin.resource.Resource> list_resource4 = resourceSet1.subList(4, 10);
      org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException");
    } catch (java.lang.IndexOutOfBoundsException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet1);

  }

  @Test
  public void test045() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test045"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage3 = interpreterResultMessageOutput2.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage4 = interpreterResultMessageOutput2.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener5 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput6 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener5);
    interpreterOutput6.addResourceSearchPath("isolated");
    byte[] byte_array9 = interpreterOutput6.toByteArray();
    interpreterResultMessageOutput2.write(byte_array9);
    boolean b11 = interpreterResultMessageOutput2.isAppendSupported();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test046() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test046"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet2.filterByName("anonymous");
    org.apache.zeppelin.resource.ResourceSet resourceSet8 = resourceSet2.filterByParagraphId("pre_exec_dev");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet8);

  }

  @Test
  public void test047() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test047"); }

    org.apache.zeppelin.helium.ApplicationException applicationException1 = new org.apache.zeppelin.helium.ApplicationException("");

  }

  @Test
  public void test048() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test048"); }

    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo1 = new org.apache.zeppelin.user.AuthenticationInfo("pre_exec");
    org.apache.zeppelin.user.UserCredentials userCredentials2 = null;
    authenticationInfo1.setUserCredentials(userCredentials2);

  }

  @Test
  public void test049() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test049"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    java.util.Collection<java.util.List<org.apache.zeppelin.interpreter.Interpreter>> collection_list_interpreter9 = interpreterGroup0.values();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_list_interpreter9);

  }

  @Test
  public void test050() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test050"); }

    java.lang.String[] str_array2 = org.apache.zeppelin.display.Input.split("post_exec", '#');
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);

  }

  @Test
  public void test051() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test051"); }

    java.util.Map<java.lang.String,java.lang.String> map_str_str3 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener5 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener6 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess8 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str3, 59683, remoteInterpreterProcessListener5, applicationEventListener6, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterManagedProcess8.stop();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup10 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str11 = interpreterGroup10.getId();
    boolean b13 = interpreterGroup10.equals((java.lang.Object)0L);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup14 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool15 = interpreterGroup14.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry17 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup14.setInterpreterHookRegistry(interpreterHookRegistry17);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry19 = interpreterGroup14.getAngularObjectRegistry();
    boolean b21 = interpreterGroup10.remove((java.lang.Object)interpreterGroup14, (java.lang.Object)10.0d);
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener23 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry24 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener23);
    org.apache.zeppelin.resource.Resource[] resource_array26 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource27 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b28 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource27, resource_array26);
    org.apache.zeppelin.resource.Resource[] resource_array29 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource30 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource30, resource_array29);
    boolean b32 = arraylist_resource30.isEmpty();
    boolean b33 = linkedlist_resource27.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource30);
    linkedlist_resource27.clear();
    org.apache.zeppelin.display.AngularObject angularObject38 = angularObjectRegistry24.add("_GLOBAL_", (java.lang.Object)linkedlist_resource27, "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "pre_exec", false);
    org.apache.zeppelin.display.AngularObject angularObject42 = angularObjectRegistry24.remove("org.apache.zeppelin.interpreter.InterpreterException: ", "InterpreterGroup_1497134350938_711831855", "post_exec_dev");
    org.apache.zeppelin.display.AngularObject angularObject46 = angularObjectRegistry24.get("InterpreterGroup_1497134350938_711831855", "pre_exec", "zeppelin.interpreter.port");
    interpreterGroup10.setAngularObjectRegistry(angularObjectRegistry24);
    // The following exception was thrown during execution in test generation
    try {
    int i50 = remoteInterpreterManagedProcess8.reference(interpreterGroup10, "{envName=InterpreterGroup_1497134367518_-1467696533, propertyName=AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}, defaultValue=pre_exec, description=InterpreterGroup_1497134393145_-2056563636}", (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "InterpreterGroup_1497134419269_204117250"+ "'", str11.equals("InterpreterGroup_1497134419269_204117250"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistry19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject46);

  }

  @Test
  public void test052() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test052"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry1 = interpreterGroup0.getInterpreterHookRegistry();
    java.lang.String str2 = interpreterGroup0.toString();
    interpreterGroup0.shutdown();
    interpreterGroup0.clear();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry6 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("scoped");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "{}"+ "'", str2.equals("{}"));

  }

  @Test
  public void test053() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test053"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = interpreterGroup2.getInterpreterHookRegistry();
    java.lang.String str4 = interpreterGroup2.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener1, interpreterGroup2);
    org.apache.zeppelin.display.AngularObject angularObject10 = remoteAngularObjectRegistry5.remove("_GLOBAL_", "post_exec_dev", "_GLOBAL_", false);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry13 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry((org.apache.zeppelin.display.AngularObjectRegistry)remoteAngularObjectRegistry5, "InterpreterGroup_1497134350790_986318210", "InterpreterGroup_1497134367518_-1467696533");
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption16 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption17 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption16);
    interpreterOption17.setHost("[null]");
    interpreterOption17.setExistingProcess(false);
    org.apache.zeppelin.display.AngularObject angularObject22 = heliumAppAngularObjectRegistry13.add("pre_exec_dev", (java.lang.Object)interpreterOption17);
    java.lang.String str23 = angularObject22.getName();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}"+ "'", str4.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "pre_exec_dev"+ "'", str23.equals("pre_exec_dev"));

  }

  @Test
  public void test054() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test054"); }

    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener0 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher interpreterOutputChangeWatcher1 = new org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher(interpreterOutputChangeListener0);
    interpreterOutputChangeWatcher1.clear();
    interpreterOutputChangeWatcher1.shutdown();

  }

  @Test
  public void test055() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test055"); }

    org.apache.zeppelin.resource.LocalResourcePool localResourcePool1 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.resource.Resource resource3 = localResourcePool1.remove("InterpreterGroup_1497134393545_537212119");
    java.lang.String str4 = localResourcePool1.id();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "zeppelin.interpreter.port"+ "'", str4.equals("zeppelin.interpreter.port"));

  }

  @Test
  public void test056() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test056"); }

    java.lang.String[] str_array2 = org.apache.zeppelin.display.Input.split("InterpreterGroup_1497134408853_-1621173162", ' ');
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);

  }

  @Test
  public void test057() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test057"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet4.filterByName("InterpreterGroup_1497134350938_711831855");
    org.apache.zeppelin.resource.ResourceSet resourceSet8 = resourceSet4.filterByClassname("<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet8);

  }

  @Test
  public void test058() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test058"); }

    org.apache.zeppelin.resource.Resource[] resource_array1 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource2 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b3 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource2, resource_array1);
    org.apache.zeppelin.resource.Resource[] resource_array4 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource5 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource5, resource_array4);
    boolean b7 = arraylist_resource5.isEmpty();
    boolean b8 = linkedlist_resource2.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource5);
    org.apache.zeppelin.display.ui.OptionInput.ParamOption paramOption9 = null;
    org.apache.zeppelin.display.ui.OptionInput.ParamOption[] paramOption_array10 = new org.apache.zeppelin.display.ui.OptionInput.ParamOption[] { paramOption9 };
    org.apache.zeppelin.display.ui.Select select11 = org.apache.zeppelin.display.Input.select("post_exec_dev", (java.lang.Object)linkedlist_resource2, paramOption_array10);
    boolean b13 = linkedlist_resource2.removeFirstOccurrence((java.lang.Object)(short)1);
    java.lang.Object[] obj_array14 = linkedlist_resource2.toArray();
    org.apache.zeppelin.tabledata.Row row15 = new org.apache.zeppelin.tabledata.Row(obj_array14);
    java.lang.Object[] obj_array16 = row15.get();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(paramOption_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(select11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);

  }

  @Test
  public void test059() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test059"); }

    org.apache.zeppelin.interpreter.InterpreterPropertyBuilder interpreterPropertyBuilder0 = new org.apache.zeppelin.interpreter.InterpreterPropertyBuilder();
    org.apache.zeppelin.interpreter.InterpreterPropertyBuilder interpreterPropertyBuilder4 = interpreterPropertyBuilder0.add("InterpreterGroup_1497134385425_-1840284417", "InterpreterGroup_1497134419263_1893234849", "[]");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterPropertyBuilder4);

  }

  @Test
  public void test060() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test060"); }

    org.apache.zeppelin.helium.HeliumType heliumType0 = null;
    java.lang.String[][] str_array_array5 = new java.lang.String[][] {  };
    org.apache.zeppelin.helium.HeliumPackage heliumPackage8 = new org.apache.zeppelin.helium.HeliumPackage(heliumType0, "", "", "hi!", "hi!", str_array_array5, "post_exec_dev", "post_exec_dev");
    java.lang.String str9 = heliumPackage8.getArtifact();
    java.lang.String str10 = heliumPackage8.getPublishedDate();
    java.lang.String[][] str_array_array11 = heliumPackage8.getResources();
    org.apache.zeppelin.helium.SpellPackageInfo spellPackageInfo12 = heliumPackage8.getSpellInfo();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!"+ "'", str9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(spellPackageInfo12);

  }

  @Test
  public void test061() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test061"); }

    java.nio.ByteBuffer byteBuffer0 = null;
    org.apache.zeppelin.resource.ByteBufferInputStream byteBufferInputStream1 = new org.apache.zeppelin.resource.ByteBufferInputStream(byteBuffer0);
    int i2 = byteBufferInputStream1.available();
    byteBufferInputStream1.mark((int)'4');
    byte[] byte_array8 = new byte[] { (byte)100, (byte)1, (byte)10 };
    // The following exception was thrown during execution in test generation
    try {
    int i11 = byteBufferInputStream1.read(byte_array8, 2, (int)'4');
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array8);

  }

  @Test
  public void test062() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test062"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup9 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool10 = interpreterGroup9.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry12 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup9.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry12);
    java.lang.String str18 = interpreterHookRegistry12.get("InterpreterGroup_1497134411157_987936470", "{envName=zeppelin.interpreter.port, propertyName=<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>, defaultValue={}, description=           anonymous}", "{\"params\"");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str18);

  }

  @Test
  public void test063() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test063"); }

    org.apache.zeppelin.interpreter.remote.AppendOutputBuffer appendOutputBuffer4 = new org.apache.zeppelin.interpreter.remote.AppendOutputBuffer("<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>", "<div class=\"result-alert alert-warning\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>%s</div>", (int)(byte)10, "pre_exec");
    java.lang.String str5 = appendOutputBuffer4.getData();
    int i6 = appendOutputBuffer4.getIndex();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "pre_exec"+ "'", str5.equals("pre_exec"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 10);

  }

  @Test
  public void test064() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test064"); }

    org.apache.zeppelin.dep.DependencyResolver dependencyResolver1 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134376971_-1963975868");
    dependencyResolver1.addRepo("1", "1", false);
    java.util.List<java.io.File> list_file7 = dependencyResolver1.load("");
    org.sonatype.aether.repository.RemoteRepository remoteRepository9 = dependencyResolver1.delRepo("InterpreterGroup_1497134350790_986318210");
    org.apache.zeppelin.interpreter.InterpreterResult.Type type11 = org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener12 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput13 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type11, interpreterResultMessageOutputListener12);
    java.io.File file14 = null;
    interpreterResultMessageOutput13.write(file14);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup16 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str17 = interpreterGroup16.getId();
    boolean b19 = interpreterGroup16.equals((java.lang.Object)0L);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup20 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool21 = interpreterGroup20.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry23 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup20.setInterpreterHookRegistry(interpreterHookRegistry23);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry25 = interpreterGroup20.getAngularObjectRegistry();
    boolean b27 = interpreterGroup16.remove((java.lang.Object)interpreterGroup20, (java.lang.Object)10.0d);
    boolean b28 = interpreterGroup20.isEmpty();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type29 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener30 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput31 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type29, interpreterResultMessageOutputListener30);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage32 = interpreterResultMessageOutput31.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage33 = interpreterResultMessageOutput31.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener34 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput35 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener34);
    interpreterOutput35.addResourceSearchPath("isolated");
    byte[] byte_array38 = interpreterOutput35.toByteArray();
    interpreterResultMessageOutput31.write(byte_array38);
    boolean b40 = interpreterGroup20.containsKey((java.lang.Object)interpreterResultMessageOutput31);
    byte[] byte_array41 = interpreterResultMessageOutput31.toByteArray();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type42 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener43 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput44 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type42, interpreterResultMessageOutputListener43);
    interpreterResultMessageOutput44.flush();
    boolean b46 = interpreterResultMessageOutput44.isAppendSupported();
    java.net.URL uRL47 = null;
    interpreterResultMessageOutput44.write(uRL47);
    java.lang.String[] str_array54 = new java.lang.String[] { "isolated", "InterpreterGroup_1497134361189_-653890590", "_GLOBAL_", "isolated", "1" };
    java.util.ArrayList<java.lang.String> arraylist_str55 = new java.util.ArrayList<java.lang.String>();
    boolean b56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str55, str_array54);
    interpreterResultMessageOutput44.setResourceSearchPaths((java.util.List<java.lang.String>)arraylist_str55);
    interpreterResultMessageOutput31.setResourceSearchPaths((java.util.List<java.lang.String>)arraylist_str55);
    interpreterResultMessageOutput13.setResourceSearchPaths((java.util.List<java.lang.String>)arraylist_str55);
    // The following exception was thrown during execution in test generation
    try {
    java.util.List<org.sonatype.aether.resolution.ArtifactResult> list_artifactResult60 = dependencyResolver1.getArtifactsWithDep("%angular [null]", (java.util.Collection<java.lang.String>)arraylist_str55);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(remoteRepository9);
    org.junit.Assert.assertTrue("'" + type11 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR + "'", type11.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "InterpreterGroup_1497134419812_-27795123"+ "'", str17.equals("InterpreterGroup_1497134419812_-27795123"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistry25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);

  }

  @Test
  public void test065() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test065"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    interpreterResultMessageOutput2.flush();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type4 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener5 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput6 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type4, interpreterResultMessageOutputListener5);
    java.lang.String[] str_array9 = new java.lang.String[] { "zeppelin.interpreter.port", "_GLOBAL_" };
    java.util.ArrayList<java.lang.String> arraylist_str10 = new java.util.ArrayList<java.lang.String>();
    boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str10, str_array9);
    interpreterResultMessageOutput6.setResourceSearchPaths((java.util.List<java.lang.String>)arraylist_str10);
    interpreterResultMessageOutput2.setResourceSearchPaths((java.util.List<java.lang.String>)arraylist_str10);
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry25 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry22, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject27 = heliumAppAngularObjectRegistry25.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput28 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext29 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry25, interpreterOutput28);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener30 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener31 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput32 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener30, interpreterOutputChangeListener31);
    org.apache.zeppelin.helium.ApplicationContext applicationContext33 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry25, interpreterOutput32);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput34 = applicationContext33.out;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput35 = interpreterOutput34.getCurrentOutput();
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener37 = interpreterOutput34.createInterpreterResultMessageOutputListener((int)(byte)0);
    interpreterOutput34.write(3);
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput40 = interpreterOutput34.getCurrentOutput();
    byte[] byte_array41 = interpreterOutput34.toByteArray();
    interpreterResultMessageOutput2.write(byte_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOutput34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterResultMessageOutput35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutputListener37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutput40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array41);

  }

  @Test
  public void test066() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test066"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str1 = interpreterGroup0.getId();
    boolean b3 = interpreterGroup0.equals((java.lang.Object)0L);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry7 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup4.setInterpreterHookRegistry(interpreterHookRegistry7);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry9 = interpreterGroup4.getAngularObjectRegistry();
    boolean b11 = interpreterGroup0.remove((java.lang.Object)interpreterGroup4, (java.lang.Object)10.0d);
    boolean b12 = interpreterGroup4.isEmpty();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type13 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener14 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput15 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type13, interpreterResultMessageOutputListener14);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage16 = interpreterResultMessageOutput15.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage17 = interpreterResultMessageOutput15.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener18 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput19 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener18);
    interpreterOutput19.addResourceSearchPath("isolated");
    byte[] byte_array22 = interpreterOutput19.toByteArray();
    interpreterResultMessageOutput15.write(byte_array22);
    boolean b24 = interpreterGroup4.containsKey((java.lang.Object)interpreterResultMessageOutput15);
    java.lang.String str25 = interpreterGroup4.getId();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "InterpreterGroup_1497134419879_18384985"+ "'", str1.equals("InterpreterGroup_1497134419879_18384985"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistry9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "InterpreterGroup_1497134419879_-322357118"+ "'", str25.equals("InterpreterGroup_1497134419879_-322357118"));

  }

  @Test
  public void test067() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test067"); }

    java.lang.String[] str_array4 = org.apache.zeppelin.display.Input.split("InterpreterGroup_1497134379014_-1019571993");
    java.lang.String[] str_array9 = org.apache.zeppelin.display.Input.splitPipe("InterpreterGroup_1497134374771_373499119");
    java.lang.String[] str_array12 = org.apache.zeppelin.display.Input.split("InterpreterGroup_1497134373781_-855626841", 'a');
    java.lang.String[] str_array18 = new java.lang.String[] { "pre_exec_dev", "InterpreterGroup_1497134374771_373499119", "shared", "zeppelin.repl.result", "scoped" };
    java.lang.String[] str_array20 = org.apache.zeppelin.display.Input.split("InterpreterGroup_1497134368135_304166951", "zeppelin.repl.result", ' ', str_array9, str_array12, str_array18, false);
    java.lang.String[] str_array22 = org.apache.zeppelin.display.Input.split("hi!");
    java.lang.String[] str_array24 = org.apache.zeppelin.display.Input.split("InterpreterGroup_1497134384931_-1968252549", "InterpreterGroup_1497134408397_554648092", '4', str_array4, str_array20, str_array22, true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);

  }

  @Test
  public void test068() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test068"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage3 = interpreterResultMessageOutput2.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage4 = interpreterResultMessageOutput2.toInterpreterResultMessage();
    java.net.URL uRL5 = null;
    interpreterResultMessageOutput2.write(uRL5);
    boolean b7 = interpreterResultMessageOutput2.isAppendSupported();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test069() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test069"); }

    java.util.Map<java.lang.String,org.apache.zeppelin.interpreter.InterpreterProperty> map_str_interpreterProperty3 = null;
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.interpreter.Interpreter.register("InterpreterGroup_1497134410138_-585552671", "InterpreterGroup_1497134387007_1195822394", "InterpreterGroup_1497134385808_1965526612", map_str_interpreterProperty3);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test070() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test070"); }

    org.apache.zeppelin.resource.ResourceId resourceId0 = null;
    java.lang.Class class2 = null;
    java.lang.Class[] class_array3 = new java.lang.Class[] { class2 };
    java.lang.String[] str_array5 = org.apache.zeppelin.display.Input.split("hi!");
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage invokeResourceMethodEventMessage7 = new org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage(resourceId0, "InterpreterGroup_1497134377883_708078564", class_array3, (java.lang.Object[])str_array5, "");
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(class_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);

  }

  @Test
  public void test071() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test071"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code10 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array11 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage12 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage12, interpreterResultMessage_array11);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult14 = new org.apache.zeppelin.interpreter.InterpreterResult(code10, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage12);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code15 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array16 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage17 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage17, interpreterResultMessage_array16);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult19 = new org.apache.zeppelin.interpreter.InterpreterResult(code15, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage17);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code20 = interpreterResult19.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage21 = interpreterResult19.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code22 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array23 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage24 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage24, interpreterResultMessage_array23);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult26 = new org.apache.zeppelin.interpreter.InterpreterResult(code22, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage24);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code27 = interpreterResult26.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage28 = interpreterResult26.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code29 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array30 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage31, interpreterResultMessage_array30);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult33 = new org.apache.zeppelin.interpreter.InterpreterResult(code29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage31);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code34 = interpreterResult33.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage35 = interpreterResult33.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code36 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array37 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage38 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b39 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage38, interpreterResultMessage_array37);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult40 = new org.apache.zeppelin.interpreter.InterpreterResult(code36, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage38);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code41 = interpreterResult40.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage42 = interpreterResult40.message();
    java.util.List[] list_array44 = new java.util.List[ 5 ];
    @SuppressWarnings("unchecked")
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[] list_interpreterResultMessage_array45 = (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[])list_array44;
    list_interpreterResultMessage_array45[0] = arraylist_interpreterResultMessage12;
    list_interpreterResultMessage_array45[1] = list_interpreterResultMessage21;
    list_interpreterResultMessage_array45[2] = list_interpreterResultMessage28;
    list_interpreterResultMessage_array45[3] = list_interpreterResultMessage35;
    list_interpreterResultMessage_array45[4] = list_interpreterResultMessage42;
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[] list_interpreterResultMessage_array56 = linkedlist_resource1.toArray(list_interpreterResultMessage_array45);
    org.apache.zeppelin.resource.Resource resource57 = null;
    boolean b58 = linkedlist_resource1.offerFirst(resource57);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource59 = linkedlist_resource1.iterator();
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource60 = linkedlist_resource1.descendingIterator();
    org.apache.zeppelin.resource.Resource resource62 = null;
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.resource.Resource resource63 = linkedlist_resource1.set((-1), resource62);
      org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException");
    } catch (java.lang.IndexOutOfBoundsException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource60);

  }

  @Test
  public void test072() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test072"); }

    org.apache.zeppelin.tabledata.ColumnDef.TYPE tYPE1 = org.apache.zeppelin.tabledata.ColumnDef.TYPE.LONG;
    org.apache.zeppelin.tabledata.ColumnDef columnDef2 = new org.apache.zeppelin.tabledata.ColumnDef("InterpreterGroup_1497134410025_-620513103", tYPE1);
    org.junit.Assert.assertTrue("'" + tYPE1 + "' != '" + org.apache.zeppelin.tabledata.ColumnDef.TYPE.LONG + "'", tYPE1.equals(org.apache.zeppelin.tabledata.ColumnDef.TYPE.LONG));

  }

  @Test
  public void test073() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test073"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool3 = interpreterGroup2.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry5 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup2.setInterpreterHookRegistry(interpreterHookRegistry5);
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry7 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("", angularObjectRegistryListener1, interpreterGroup2);
    java.util.List<org.apache.zeppelin.display.AngularObject> list_angularObject10 = remoteAngularObjectRegistry7.getAll("<div class=\"result-alert alert-warning\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>%s</div>", "pre_exec_dev");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_angularObject10);

  }

  @Test
  public void test074() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test074"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory2 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService5 = executorFactory2.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess7 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory8 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler10 = new org.apache.zeppelin.scheduler.RemoteScheduler("zeppelin.interpreter.host", executorService5, "pre_exec_dev", remoteInterpreterProcess7, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory8, (int)(short)1);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess12 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory13 = org.apache.zeppelin.scheduler.SchedulerFactory.singleton();
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess16 = null;
    org.apache.zeppelin.scheduler.Scheduler scheduler18 = schedulerFactory13.createOrGetRemoteScheduler("{}", "_GLOBAL_", remoteInterpreterProcess16, (int)(short)1);
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler20 = new org.apache.zeppelin.scheduler.RemoteScheduler("1", executorService5, "hi!", remoteInterpreterProcess12, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory13, 100);
    remoteScheduler20.setMaxConcurrency(100);
    java.lang.String str23 = remoteScheduler20.getName();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(schedulerFactory13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "1"+ "'", str23.equals("1"));

  }

  @Test
  public void test075() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test075"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener1);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry5 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry2, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.resource.Resource[] resource_array7 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource8 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource8, resource_array7);
    org.apache.zeppelin.resource.Resource[] resource_array10 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource11 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource11, resource_array10);
    boolean b13 = arraylist_resource11.isEmpty();
    boolean b14 = linkedlist_resource8.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource11);
    org.apache.zeppelin.resource.Resource resource15 = null;
    boolean b16 = linkedlist_resource8.add(resource15);
    boolean b18 = linkedlist_resource8.contains((java.lang.Object)(-1));
    org.apache.zeppelin.resource.Resource resource19 = null;
    boolean b20 = linkedlist_resource8.offerLast(resource19);
    org.apache.zeppelin.resource.Resource[] resource_array22 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource23 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b24 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource23, resource_array22);
    org.apache.zeppelin.resource.Resource[] resource_array25 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource26 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b27 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource26, resource_array25);
    boolean b28 = arraylist_resource26.isEmpty();
    boolean b29 = linkedlist_resource23.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource26);
    org.apache.zeppelin.resource.Resource resource30 = null;
    boolean b31 = linkedlist_resource23.add(resource30);
    boolean b33 = linkedlist_resource23.contains((java.lang.Object)(-1));
    boolean b34 = linkedlist_resource8.addAll(1, (java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource23);
    org.apache.zeppelin.display.AngularObject angularObject38 = angularObjectRegistry2.add("InterpreterGroup_1497134361094_1261121192", (java.lang.Object)linkedlist_resource23, "zeppelin.interpreter.port", "{}", true);
    java.lang.String str39 = angularObject38.getParagraphId();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "{}"+ "'", str39.equals("{}"));

  }

  @Test
  public void test076() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test076"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener7 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry8 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener7);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry11 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry8, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject13 = heliumAppAngularObjectRegistry11.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput14 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext15 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry11, interpreterOutput14);
    org.apache.zeppelin.display.AngularObject angularObject17 = heliumAppAngularObjectRegistry11.remove("InterpreterGroup_1497134353138_86992792");
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener25 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry26 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener25);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry29 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry26, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject31 = heliumAppAngularObjectRegistry29.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput32 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext33 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry29, interpreterOutput32);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener34 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener35 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput36 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener34, interpreterOutputChangeListener35);
    org.apache.zeppelin.helium.ApplicationContext applicationContext37 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry29, interpreterOutput36);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput38 = applicationContext37.out;
    org.apache.zeppelin.helium.ApplicationContext applicationContext39 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134374771_373499119", "InterpreterGroup_1497134367518_-1467696533", "isolated", heliumAppAngularObjectRegistry11, interpreterOutput38);
    org.apache.zeppelin.display.AngularObject<java.io.OutputStream> angularobject_outputStream40 = new org.apache.zeppelin.display.AngularObject<java.io.OutputStream>();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type41 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener42 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput43 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type41, interpreterResultMessageOutputListener42);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type44 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput43.setType(type44);
    angularobject_outputStream40.set((java.io.OutputStream)interpreterResultMessageOutput43);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type47 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener48 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput49 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type47, interpreterResultMessageOutputListener48);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage50 = interpreterResultMessageOutput49.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage51 = interpreterResultMessageOutput49.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup52 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry53 = interpreterGroup52.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array54 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource55 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b56 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource55, resource_array54);
    org.apache.zeppelin.resource.Resource[] resource_array57 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource58 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b59 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource58, resource_array57);
    boolean b60 = arraylist_resource58.isEmpty();
    boolean b61 = linkedlist_resource55.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource58);
    linkedlist_resource55.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter63 = interpreterGroup52.get((java.lang.Object)linkedlist_resource55);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type64 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter65 = interpreterGroup52.get((java.lang.Object)type64);
    interpreterResultMessageOutput49.setType(type64);
    interpreterResultMessageOutput43.setType(type64);
    org.slf4j.Logger logger68 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream69 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger68);
    byte[] byte_array73 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream69.write(byte_array73, (int)'a', 3);
    interpreterResultMessageOutput43.write(byte_array73, (int)'#', 2);
    interpreterOutput38.write(byte_array73);
    interpreterOutput38.writeResource("InterpreterGroup_1497134376922_-128746751");
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput83 = interpreterOutput38.getCurrentOutput();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOutput38);
    org.junit.Assert.assertTrue("'" + type44 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type44.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter63);
    org.junit.Assert.assertTrue("'" + type64 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type64.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutput83);

  }

  @Test
  public void test077() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test077"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str1 = interpreterGroup0.getId();
    boolean b3 = interpreterGroup0.equals((java.lang.Object)0L);
    java.util.Collection<java.util.List<org.apache.zeppelin.interpreter.Interpreter>> collection_list_interpreter4 = interpreterGroup0.values();
    interpreterGroup0.close();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "InterpreterGroup_1497134420494_1077107902"+ "'", str1.equals("InterpreterGroup_1497134420494_1077107902"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_list_interpreter4);

  }

  @Test
  public void test078() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test078"); }

    org.apache.zeppelin.dep.RepositoryListener repositoryListener0 = new org.apache.zeppelin.dep.RepositoryListener();
    org.sonatype.aether.RepositoryEvent repositoryEvent1 = null;
    repositoryListener0.metadataDownloading(repositoryEvent1);
    org.sonatype.aether.RepositoryEvent repositoryEvent3 = null;
    repositoryListener0.metadataDownloaded(repositoryEvent3);
    org.sonatype.aether.RepositoryEvent repositoryEvent5 = null;
    // The following exception was thrown during execution in test generation
    try {
    repositoryListener0.artifactResolving(repositoryEvent5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test079() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test079"); }

    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption3 = new org.apache.zeppelin.interpreter.InterpreterOption(false, "InterpreterGroup_1497134410025_-620513103", "{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}");

  }

  @Test
  public void test080() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test080"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    interpreterOption6.setUserImpersonate(false);
    boolean b11 = interpreterOption6.perUserIsolated();
    interpreterOption6.setPerUser("1");
    java.lang.String str14 = interpreterOption6.getHost();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str14);

  }

  @Test
  public void test081() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test081"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = org.apache.zeppelin.interpreter.InterpreterResult.Type.IMG;
    org.junit.Assert.assertTrue("'" + type0 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.IMG + "'", type0.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.IMG));

  }

  @Test
  public void test082() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test082"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess2 = null;
    interpreterGroup0.setRemoteInterpreterProcess(remoteInterpreterProcess2);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool5 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = localResourcePool5.getAll();
    org.apache.zeppelin.resource.Resource resource8 = localResourcePool5.get("org.apache.zeppelin.tabledata.TableDataException: <strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.Resource resource12 = localResourcePool5.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>", "AngularObject{noteId='<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>', paragraphId='pre_exec', object=[], name='_GLOBAL_'}");
    org.apache.zeppelin.resource.Resource resource16 = localResourcePool5.remove("InterpreterGroup_1497134404865_16666424", "zeppelin.interpreter.port", "InterpreterGroup_1497134411957_9600749");
    interpreterGroup0.setResourcePool((org.apache.zeppelin.resource.ResourcePool)localResourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource16);

  }

  @Test
  public void test083() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test083"); }

    org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph("{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}", "InterpreterGroup_1497134405331_2118921226");

  }

  @Test
  public void test084() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test084"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    interpreterResultMessageOutput2.flush();
    boolean b4 = interpreterResultMessageOutput2.isAppendSupported();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type5 = interpreterResultMessageOutput2.getType();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(type5);

  }

  @Test
  public void test085() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test085"); }

    org.apache.zeppelin.dep.DependencyResolver dependencyResolver1 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134376971_-1963975868");
    dependencyResolver1.addRepo("1", "1", false);
    java.util.List<java.io.File> list_file7 = dependencyResolver1.load("InterpreterGroup_1497134350938_711831855");
    java.lang.String[] str_array45 = new java.lang.String[] { "post_exec", "InterpreterGroup_1497134410098_-512670828", "{\"params\"", "InterpreterGroup_1497134373781_-855626841", "InterpreterGroup_1497134410739_-1534144333", "[]", "InterpreterGroup_1497134408853_-1621173162", "InterpreterGroup_1497134353138_86992792", "InterpreterGroup_1497134350938_711831855", "org.apache.zeppelin.interpreter.InterpreterException: ", "InterpreterGroup_1497134410138_-585552671", "InterpreterGroup_1497134387007_1195822394", "InterpreterGroup_1497134410556_1275540258", "InterpreterGroup_1497134384934_2010942845", "org.apache.zeppelin.interpreter.InterpreterException: ", "InterpreterGroup_1497134413118_579211358", "InterpreterGroup_1497134393145_-2056563636", "InterpreterGroup_1497134350790_986318210", "InterpreterGroup_1497134412057_-886896671", "pre_exec_dev", "InterpreterGroup_1497134413118_579211358", "InterpreterGroup_1497134367518_-1467696533", "post_exec", "InterpreterGroup_1497134411090_182457301", "InterpreterGroup_1497134384596_204399223", "InterpreterGroup_1497134413118_579211358", "InterpreterGroup_1497134367518_-1467696533", "InterpreterGroup_1497134373781_-855626841", "org.apache.zeppelin.interpreter.InterpreterException: ", "InterpreterGroup_1497134393145_-2056563636", "InterpreterGroup_1497134385425_-1840284417", "InterpreterGroup_1497134374771_373499119", "InterpreterGroup_1497134385425_-1840284417", "InterpreterGroup_1497134393646_-2053954492", "InterpreterGroup_1497134387007_1195822394", "zeppelin.repl.result" };
    java.util.ArrayList<java.lang.String> arraylist_str46 = new java.util.ArrayList<java.lang.String>();
    boolean b47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str46, str_array45);
    // The following exception was thrown during execution in test generation
    try {
    java.util.List<org.sonatype.aether.resolution.ArtifactResult> list_artifactResult48 = dependencyResolver1.getArtifactsWithDep("{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}", (java.util.Collection<java.lang.String>)arraylist_str46);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);

  }

  @Test
  public void test086() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test086"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    boolean b11 = linkedlist_resource1.contains((java.lang.Object)(-1));
    org.apache.zeppelin.resource.Resource resource12 = null;
    boolean b13 = linkedlist_resource1.offerLast(resource12);
    org.apache.zeppelin.resource.Resource[] resource_array15 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource16 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource16, resource_array15);
    org.apache.zeppelin.resource.Resource[] resource_array18 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource19 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource19, resource_array18);
    boolean b21 = arraylist_resource19.isEmpty();
    boolean b22 = linkedlist_resource16.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource19);
    org.apache.zeppelin.resource.Resource resource23 = null;
    boolean b24 = linkedlist_resource16.add(resource23);
    boolean b26 = linkedlist_resource16.contains((java.lang.Object)(-1));
    boolean b27 = linkedlist_resource1.addAll(1, (java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource16);
    org.apache.zeppelin.resource.Resource[] resource_array29 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource30 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource30, resource_array29);
    org.apache.zeppelin.resource.Resource[] resource_array32 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource33 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b34 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource33, resource_array32);
    boolean b35 = arraylist_resource33.isEmpty();
    boolean b36 = linkedlist_resource30.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource33);
    org.apache.zeppelin.resource.Resource resource37 = null;
    boolean b38 = linkedlist_resource30.add(resource37);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource39 = linkedlist_resource30.iterator();
    java.lang.String str40 = linkedlist_resource30.toString();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry42 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    int i43 = linkedlist_resource30.lastIndexOf((java.lang.Object)interpreterHookRegistry42);
    org.apache.zeppelin.display.ui.OptionInput.ParamOption paramOption44 = null;
    org.apache.zeppelin.display.ui.OptionInput.ParamOption[] paramOption_array45 = new org.apache.zeppelin.display.ui.OptionInput.ParamOption[] { paramOption44 };
    org.apache.zeppelin.display.ui.Select select46 = new org.apache.zeppelin.display.ui.Select("", (java.lang.Object)interpreterHookRegistry42, paramOption_array45);
    boolean b47 = linkedlist_resource16.remove((java.lang.Object)select46);
    org.apache.zeppelin.resource.Resource resource48 = linkedlist_resource16.remove();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "[null]"+ "'", str40.equals("[null]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(paramOption_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource48);

  }

  @Test
  public void test087() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test087"); }

    org.apache.zeppelin.interpreter.remote.AppendOutputBuffer appendOutputBuffer4 = new org.apache.zeppelin.interpreter.remote.AppendOutputBuffer("InterpreterGroup_1497134350790_986318210", "org.apache.zeppelin.tabledata.TableDataException: <strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", 29914, "InterpreterGroup_1497134405350_1754624058");
    java.lang.String str5 = appendOutputBuffer4.getData();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "InterpreterGroup_1497134405350_1754624058"+ "'", str5.equals("InterpreterGroup_1497134405350_1754624058"));

  }

  @Test
  public void test088() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test088"); }

    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource remoteZeppelinServerResource0 = new org.apache.zeppelin.interpreter.RemoteZeppelinServerResource();
    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type type1 = remoteZeppelinServerResource0.getResourceType();
    java.lang.String str2 = remoteZeppelinServerResource0.getOwnerKey();
    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type type3 = remoteZeppelinServerResource0.getResourceType();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener11 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry12 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener11);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry15 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry12, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject17 = heliumAppAngularObjectRegistry15.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput18 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext19 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry15, interpreterOutput18);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener20 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener21 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput22 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener20, interpreterOutputChangeListener21);
    org.apache.zeppelin.helium.ApplicationContext applicationContext23 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry15, interpreterOutput22);
    interpreterOutput22.clear();
    remoteZeppelinServerResource0.setData((java.lang.Object)interpreterOutput22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(type1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(type3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject17);

  }

  @Test
  public void test089() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test089"); }

    org.apache.zeppelin.dep.RepositoryListener repositoryListener0 = new org.apache.zeppelin.dep.RepositoryListener();
    org.sonatype.aether.RepositoryEvent repositoryEvent1 = null;
    repositoryListener0.metadataDownloading(repositoryEvent1);
    org.sonatype.aether.RepositoryEvent repositoryEvent3 = null;
    // The following exception was thrown during execution in test generation
    try {
    repositoryListener0.artifactDescriptorInvalid(repositoryEvent3);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test090() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test090"); }

    org.apache.zeppelin.interpreter.InterpreterProperty interpreterProperty4 = new org.apache.zeppelin.interpreter.InterpreterProperty("zeppelin.interpreter.port", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "{}", "anonymous");
    interpreterProperty4.setDescription("{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}");
    interpreterProperty4.setPropertyName("scoped");
    interpreterProperty4.setDescription("");

  }

  @Test
  public void test091() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test091"); }

    org.apache.zeppelin.dep.Repository repository1 = new org.apache.zeppelin.dep.Repository("{envName=InterpreterGroup_1497134367518_-1467696533, propertyName=AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}, defaultValue=pre_exec, description=InterpreterGroup_1497134393145_-2056563636}");

  }

  @Test
  public void test092() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test092"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = org.apache.zeppelin.interpreter.InterpreterResult.Type.HTML;
    org.apache.zeppelin.interpreter.InterpreterResult.Code code1 = org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = interpreterGroup2.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array4 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource5 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource5, resource_array4);
    org.apache.zeppelin.resource.Resource[] resource_array7 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource8 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8, resource_array7);
    boolean b10 = arraylist_resource8.isEmpty();
    boolean b11 = linkedlist_resource5.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8);
    linkedlist_resource5.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter13 = interpreterGroup2.get((java.lang.Object)linkedlist_resource5);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type14 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter15 = interpreterGroup2.get((java.lang.Object)type14);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult17 = new org.apache.zeppelin.interpreter.InterpreterResult(code1, type14, "shared");
    org.apache.zeppelin.interpreter.InterpreterResult.Code code18 = org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup19 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry20 = interpreterGroup19.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array21 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource22 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b23 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource22, resource_array21);
    org.apache.zeppelin.resource.Resource[] resource_array24 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource25 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b26 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource25, resource_array24);
    boolean b27 = arraylist_resource25.isEmpty();
    boolean b28 = linkedlist_resource22.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource25);
    linkedlist_resource22.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter30 = interpreterGroup19.get((java.lang.Object)linkedlist_resource22);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type31 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter32 = interpreterGroup19.get((java.lang.Object)type31);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult34 = new org.apache.zeppelin.interpreter.InterpreterResult(code18, type31, "shared");
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult36 = new org.apache.zeppelin.interpreter.InterpreterResult(code1, type31, "InterpreterGroup_1497134367518_-1467696533");
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener44 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry45 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener44);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry48 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry45, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject50 = heliumAppAngularObjectRegistry48.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput51 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext52 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry48, interpreterOutput51);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener53 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener54 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput55 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener53, interpreterOutputChangeListener54);
    org.apache.zeppelin.helium.ApplicationContext applicationContext56 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry48, interpreterOutput55);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput57 = applicationContext56.out;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener59 = interpreterOutput57.createInterpreterResultMessageOutputListener((int)(byte)100);
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener60 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput61 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type31, interpreterResultMessageOutputListener59, interpreterOutputChangeListener60);
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput62 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener59);
    org.junit.Assert.assertTrue("'" + type0 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.HTML + "'", type0.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.HTML));
    org.junit.Assert.assertTrue("'" + code1 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE + "'", code1.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter13);
    org.junit.Assert.assertTrue("'" + type14 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type14.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter15);
    org.junit.Assert.assertTrue("'" + code18 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE + "'", code18.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter30);
    org.junit.Assert.assertTrue("'" + type31 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type31.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOutput57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutputListener59);

  }

  @Test
  public void test093() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test093"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.interpreter.InterpreterContext.set(interpreterContext35);
    java.lang.String str37 = interpreterContext35.getReplName();
    java.lang.String str38 = interpreterContext35.getReplName();
    org.apache.zeppelin.interpreter.remote.RemoteEventClientWrapper remoteEventClientWrapper39 = interpreterContext35.getClient();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo40 = interpreterContext35.getAuthenticationInfo();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str37.equals("org.apache.zeppelin.interpreter.InterpreterException: "));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str38.equals("org.apache.zeppelin.interpreter.InterpreterException: "));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(remoteEventClientWrapper39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo40);

  }

  @Test
  public void test094() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test094"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.interpreter.InterpreterResult.Code code5 = null;
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult6 = new org.apache.zeppelin.interpreter.InterpreterResult(code5);
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage7 = interpreterResult6.message();
    boolean b8 = resourceSet2.removeAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)list_interpreterResultMessage7);
    java.util.ListIterator<org.apache.zeppelin.resource.Resource> listiterator_resource9 = resourceSet2.listIterator();
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.resource.Resource resource10 = resourceSet2.remove();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(listiterator_resource9);

  }

  @Test
  public void test095() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test095"); }

    org.apache.zeppelin.dep.DependencyContext dependencyContext1 = new org.apache.zeppelin.dep.DependencyContext("1");
    java.util.List<java.io.File> list_file2 = dependencyContext1.getFiles();
    org.apache.zeppelin.dep.Dependency dependency4 = dependencyContext1.load("InterpreterGroup_1497134387892_-1132206419");
    java.util.List<java.lang.String> list_str5 = dependency4.getExclusions();
    org.apache.zeppelin.dep.Dependency dependency6 = dependency4.excludeAll();
    java.lang.String str7 = dependency4.getGroupArtifactVersion();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(dependency4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(dependency6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "InterpreterGroup_1497134387892_-1132206419"+ "'", str7.equals("InterpreterGroup_1497134387892_-1132206419"));

  }

  @Test
  public void test096() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test096"); }

    org.apache.zeppelin.helium.ApplicationException applicationException1 = new org.apache.zeppelin.helium.ApplicationException("[]");
    org.apache.zeppelin.helium.ApplicationException applicationException3 = new org.apache.zeppelin.helium.ApplicationException("InterpreterGroup_1497134410556_1275540258");
    applicationException1.addSuppressed((java.lang.Throwable)applicationException3);

  }

  @Test
  public void test097() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test097"); }

    org.apache.zeppelin.interpreter.remote.ClientFactory clientFactory2 = new org.apache.zeppelin.interpreter.remote.ClientFactory("post_exec_dev", (int)(short)1);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client3 = null;
    clientFactory2.passivateObject(pooledobject_client3);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client5 = null;
    clientFactory2.passivateObject(pooledobject_client5);
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client7 = null;
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client8 = clientFactory2.wrap(client7);
    // The following exception was thrown during execution in test generation
    try {
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client9 = clientFactory2.makeObject();
      org.junit.Assert.fail("Expected exception of type org.apache.zeppelin.interpreter.InterpreterException");
    } catch (org.apache.zeppelin.interpreter.InterpreterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(pooledobject_client8);

  }

  @Test
  public void test098() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test098"); }

    org.apache.zeppelin.interpreter.InterpreterException interpreterException1 = new org.apache.zeppelin.interpreter.InterpreterException("");
    org.apache.zeppelin.interpreter.InterpreterException interpreterException2 = new org.apache.zeppelin.interpreter.InterpreterException((java.lang.Throwable)interpreterException1);
    java.lang.String str3 = org.apache.zeppelin.interpreter.InterpreterUtils.getMostRelevantMessage((java.lang.Exception)interpreterException2);
    org.apache.zeppelin.helium.ApplicationException applicationException4 = new org.apache.zeppelin.helium.ApplicationException((java.lang.Exception)interpreterException2);
    org.apache.zeppelin.interpreter.InterpreterException interpreterException6 = new org.apache.zeppelin.interpreter.InterpreterException("InterpreterGroup_1497134377064_955397632");
    org.apache.zeppelin.interpreter.InterpreterException interpreterException7 = new org.apache.zeppelin.interpreter.InterpreterException((java.lang.Throwable)interpreterException6);
    interpreterException2.addSuppressed((java.lang.Throwable)interpreterException7);
    java.lang.String str9 = org.apache.zeppelin.interpreter.InterpreterUtils.getMostRelevantMessage((java.lang.Exception)interpreterException7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str3.equals("org.apache.zeppelin.interpreter.InterpreterException: "));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: InterpreterGroup_1497134377064_955397632"+ "'", str9.equals("org.apache.zeppelin.interpreter.InterpreterException: InterpreterGroup_1497134377064_955397632"));

  }

  @Test
  public void test099() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test099"); }

    org.apache.zeppelin.helium.HeliumType heliumType0 = null;
    java.lang.String[][] str_array_array5 = new java.lang.String[][] {  };
    org.apache.zeppelin.helium.HeliumPackage heliumPackage8 = new org.apache.zeppelin.helium.HeliumPackage(heliumType0, "", "", "hi!", "hi!", str_array_array5, "post_exec_dev", "post_exec_dev");
    java.lang.String str9 = heliumPackage8.getArtifact();
    java.lang.String str10 = heliumPackage8.getPublishedDate();
    java.lang.String str11 = heliumPackage8.getArtifact();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener13 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup14 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool15 = interpreterGroup14.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry17 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup14.setInterpreterHookRegistry(interpreterHookRegistry17);
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry19 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("", angularObjectRegistryListener13, interpreterGroup14);
    boolean b20 = heliumPackage8.equals((java.lang.Object)angularObjectRegistryListener13);
    org.apache.zeppelin.helium.SpellPackageInfo spellPackageInfo21 = heliumPackage8.getSpellInfo();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!"+ "'", str9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!"+ "'", str11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(spellPackageInfo21);

  }

  @Test
  public void test100() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test100"); }

    org.slf4j.Logger logger0 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream1 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger0);
    byte[] byte_array5 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream1.write(byte_array5, (int)'a', 3);
    org.slf4j.Logger logger9 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream10 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger9);
    byte[] byte_array14 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream10.write(byte_array14, (int)'a', 3);
    interpreterOutputStream1.write(byte_array14, (int)(short)10, 10);
    interpreterOutputStream1.close();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array14);

  }

  @Test
  public void test101() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test101"); }

    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry1 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("InterpreterGroup_1497134350938_711831855");
    interpreterHookRegistry1.addNote("InterpreterGroup_1497134374528_1509866041");

  }

  @Test
  public void test102() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test102"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet4.filterByName("InterpreterGroup_1497134350938_711831855");
    java.lang.Object[] obj_array7 = resourceSet6.toArray();
    org.apache.zeppelin.resource.ResourceSet resourceSet9 = resourceSet6.filterByClassnameRegex("org.apache.zeppelin.interpreter.InterpreterException: ");
    org.apache.zeppelin.resource.Resource resource10 = resourceSet9.pollFirst();
    org.apache.zeppelin.resource.Resource resource11 = null;
    boolean b12 = resourceSet9.offerLast(resource11);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = resourceSet9.offerFirst(resource13);
    java.lang.Object obj15 = resourceSet9.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);

  }

  @Test
  public void test103() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test103"); }

    org.apache.zeppelin.interpreter.InterpreterException interpreterException1 = new org.apache.zeppelin.interpreter.InterpreterException("");
    org.apache.zeppelin.interpreter.InterpreterException interpreterException2 = new org.apache.zeppelin.interpreter.InterpreterException((java.lang.Throwable)interpreterException1);
    org.apache.zeppelin.interpreter.InterpreterException interpreterException3 = new org.apache.zeppelin.interpreter.InterpreterException((java.lang.Throwable)interpreterException1);

  }

  @Test
  public void test104() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test104"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.interpreter.InterpreterContext.set(interpreterContext35);
    java.lang.String str37 = interpreterContext35.getReplName();
    org.apache.zeppelin.resource.ResourcePool resourcePool38 = interpreterContext35.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput39 = interpreterContext35.out;
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str37.equals("org.apache.zeppelin.interpreter.InterpreterException: "));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourcePool38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterOutput39);

  }

  @Test
  public void test105() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test105"); }

    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption0 = new org.apache.zeppelin.interpreter.InterpreterOption();
    boolean b1 = interpreterOption0.isUserImpersonate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == false);

  }

  @Test
  public void test106() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test106"); }

    org.apache.zeppelin.display.Input<java.util.Collection<java.lang.String>> input_collection_str0 = new org.apache.zeppelin.display.Input<java.util.Collection<java.lang.String>>();

  }

  @Test
  public void test107() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test107"); }

    java.lang.String[] str_array1 = org.apache.zeppelin.display.Input.split("InterpreterGroup_1497134379014_-1019571993");
    org.apache.zeppelin.tabledata.Row row2 = new org.apache.zeppelin.tabledata.Row((java.lang.Object[])str_array1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array1);

  }

  @Test
  public void test108() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test108"); }

    org.apache.zeppelin.interpreter.InterpreterException interpreterException1 = new org.apache.zeppelin.interpreter.InterpreterException("AngularObject{noteId='null', paragraphId='null', object=null, name='null'}");
    java.lang.String str2 = org.apache.zeppelin.interpreter.InterpreterUtils.getMostRelevantMessage((java.lang.Exception)interpreterException1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}"+ "'", str2.equals("AngularObject{noteId='null', paragraphId='null', object=null, name='null'}"));

  }

  @Test
  public void test109() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test109"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.interpreter.InterpreterResult.Code code5 = null;
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult6 = new org.apache.zeppelin.interpreter.InterpreterResult(code5);
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage7 = interpreterResult6.message();
    boolean b8 = resourceSet2.removeAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)list_interpreterResultMessage7);
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.resource.Resource resource9 = resourceSet2.remove();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test110() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test110"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    authenticationInfo16.setUser("InterpreterGroup_1497134411157_987936470");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test111() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test111"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str1 = interpreterGroup0.getId();
    boolean b3 = interpreterGroup0.equals((java.lang.Object)0L);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry7 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup4.setInterpreterHookRegistry(interpreterHookRegistry7);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry9 = interpreterGroup4.getAngularObjectRegistry();
    boolean b11 = interpreterGroup0.remove((java.lang.Object)interpreterGroup4, (java.lang.Object)10.0d);
    boolean b12 = interpreterGroup4.isEmpty();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup14 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool15 = interpreterGroup14.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry17 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup14.setInterpreterHookRegistry(interpreterHookRegistry17);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption20 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption21 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption20);
    boolean b22 = interpreterGroup14.contains((java.lang.Object)interpreterOption20);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup23 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool24 = interpreterGroup23.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry26 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup23.setInterpreterHookRegistry(interpreterHookRegistry26);
    interpreterGroup14.setInterpreterHookRegistry(interpreterHookRegistry26);
    java.lang.String str29 = interpreterGroup14.toString();
    java.util.Map<java.lang.String,org.apache.zeppelin.interpreter.InterpreterGroup> map_str_interpreterGroup30 = null;
    interpreterGroup14.close(map_str_interpreterGroup30, "{}", "InterpreterGroup_1497134350938_711831855");
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup34 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry35 = interpreterGroup34.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array36 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource37 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b38 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource37, resource_array36);
    org.apache.zeppelin.resource.Resource[] resource_array39 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource40 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b41 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource40, resource_array39);
    boolean b42 = arraylist_resource40.isEmpty();
    boolean b43 = linkedlist_resource37.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource40);
    linkedlist_resource37.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter45 = interpreterGroup34.get((java.lang.Object)linkedlist_resource37);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type46 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter47 = interpreterGroup34.get((java.lang.Object)type46);
    interpreterGroup14.putAll((java.util.Map<java.lang.String,java.util.List<org.apache.zeppelin.interpreter.Interpreter>>)interpreterGroup34);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup50 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry51 = interpreterGroup50.getInterpreterHookRegistry();
    java.lang.String str52 = interpreterGroup50.toString();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup54 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str55 = interpreterGroup54.getId();
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array57 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter58 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b59 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter58, interpreter_array57);
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter60 = interpreterGroup54.putIfAbsent("pre_exec_dev", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter58);
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array61 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter62 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b63 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter62, interpreter_array61);
    boolean b64 = interpreterGroup50.replace("InterpreterGroup_1497134350790_986318210", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter58, (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter62);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup65 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry66 = interpreterGroup65.getInterpreterHookRegistry();
    java.lang.String str67 = interpreterGroup65.toString();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup69 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str70 = interpreterGroup69.getId();
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array72 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter73 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b74 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter73, interpreter_array72);
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter75 = interpreterGroup69.putIfAbsent("pre_exec_dev", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter73);
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array76 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter77 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b78 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter77, interpreter_array76);
    boolean b79 = interpreterGroup65.replace("InterpreterGroup_1497134350790_986318210", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter73, (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter77);
    boolean b80 = interpreterGroup34.replace("zeppelin.interpreter.port", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter58, (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter73);
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter81 = interpreterGroup4.put("InterpreterGroup_1497134386032_1263213569", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "InterpreterGroup_1497134421659_488496160"+ "'", str1.equals("InterpreterGroup_1497134421659_488496160"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistry9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "{}"+ "'", str29.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter45);
    org.junit.Assert.assertTrue("'" + type46 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type46.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "{}"+ "'", str52.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "InterpreterGroup_1497134421662_940144173"+ "'", str55.equals("InterpreterGroup_1497134421662_940144173"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str67 + "' != '" + "{}"+ "'", str67.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "InterpreterGroup_1497134421663_244465960"+ "'", str70.equals("InterpreterGroup_1497134421663_244465960"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter81);

  }

  @Test
  public void test112() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test112"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory1 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService4 = executorFactory1.createOrGet("scoped", 2);
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory5 = org.apache.zeppelin.scheduler.SchedulerFactory.singleton();
    org.apache.zeppelin.scheduler.ParallelScheduler parallelScheduler7 = new org.apache.zeppelin.scheduler.ParallelScheduler("post_exec_dev", executorService4, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory5, (int)(byte)10);
    org.apache.zeppelin.scheduler.Job job9 = parallelScheduler7.removeFromWaitingQueue("InterpreterGroup_1497134376922_-128746751");
    parallelScheduler7.setMaxConcurrency(3);
    parallelScheduler7.stop();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(schedulerFactory5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(job9);

  }

  @Test
  public void test113() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test113"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterException interpreterException2 = new org.apache.zeppelin.interpreter.InterpreterException("");
    org.apache.zeppelin.helium.ApplicationException applicationException3 = new org.apache.zeppelin.helium.ApplicationException((java.lang.Exception)interpreterException2);
    org.apache.zeppelin.resource.Resource[] resource_array4 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource5 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource5, resource_array4);
    org.apache.zeppelin.resource.Resource[] resource_array7 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource8 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8, resource_array7);
    boolean b10 = arraylist_resource8.isEmpty();
    boolean b11 = linkedlist_resource5.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8);
    org.apache.zeppelin.resource.Resource resource12 = null;
    boolean b13 = linkedlist_resource5.add(resource12);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code14 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array15 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage16 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage16, interpreterResultMessage_array15);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult18 = new org.apache.zeppelin.interpreter.InterpreterResult(code14, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage16);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code19 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array20 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage21 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b22 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage21, interpreterResultMessage_array20);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult23 = new org.apache.zeppelin.interpreter.InterpreterResult(code19, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage21);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code24 = interpreterResult23.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage25 = interpreterResult23.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code26 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array27 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage28 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage28, interpreterResultMessage_array27);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult30 = new org.apache.zeppelin.interpreter.InterpreterResult(code26, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage28);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code31 = interpreterResult30.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage32 = interpreterResult30.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code33 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array34 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage35 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b36 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage35, interpreterResultMessage_array34);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult37 = new org.apache.zeppelin.interpreter.InterpreterResult(code33, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage35);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code38 = interpreterResult37.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage39 = interpreterResult37.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code40 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array41 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage42 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b43 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage42, interpreterResultMessage_array41);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult44 = new org.apache.zeppelin.interpreter.InterpreterResult(code40, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage42);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code45 = interpreterResult44.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage46 = interpreterResult44.message();
    java.util.List[] list_array48 = new java.util.List[ 5 ];
    @SuppressWarnings("unchecked")
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[] list_interpreterResultMessage_array49 = (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[])list_array48;
    list_interpreterResultMessage_array49[0] = arraylist_interpreterResultMessage16;
    list_interpreterResultMessage_array49[1] = list_interpreterResultMessage25;
    list_interpreterResultMessage_array49[2] = list_interpreterResultMessage32;
    list_interpreterResultMessage_array49[3] = list_interpreterResultMessage39;
    list_interpreterResultMessage_array49[4] = list_interpreterResultMessage46;
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[] list_interpreterResultMessage_array60 = linkedlist_resource5.toArray(list_interpreterResultMessage_array49);
    org.apache.zeppelin.resource.Resource resource61 = null;
    boolean b62 = linkedlist_resource5.offerFirst(resource61);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource63 = linkedlist_resource5.iterator();
    boolean b64 = interpreterGroup0.remove((java.lang.Object)applicationException3, (java.lang.Object)linkedlist_resource5);
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener66 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup67 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry68 = interpreterGroup67.getInterpreterHookRegistry();
    java.lang.String str69 = interpreterGroup67.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry70 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener66, interpreterGroup67);
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter71 = interpreterGroup0.get((java.lang.Object)remoteAngularObjectRegistry70);
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener72 = remoteAngularObjectRegistry70.getListener();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "{}"+ "'", str69.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistryListener72);

  }

  @Test
  public void test114() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test114"); }

    org.apache.zeppelin.resource.LocalResourcePool localResourcePool1 = new org.apache.zeppelin.resource.LocalResourcePool("AngularObject{noteId='null', paragraphId='null', object=null, name='null'}");

  }

  @Test
  public void test115() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test115"); }

    org.apache.zeppelin.helium.HeliumType heliumType0 = null;
    java.lang.String[][] str_array_array5 = new java.lang.String[][] {  };
    org.apache.zeppelin.helium.HeliumPackage heliumPackage8 = new org.apache.zeppelin.helium.HeliumPackage(heliumType0, "", "", "hi!", "hi!", str_array_array5, "post_exec_dev", "post_exec_dev");
    java.lang.String str9 = heliumPackage8.getArtifact();
    java.lang.String str10 = heliumPackage8.getGroupId();
    java.lang.String str11 = heliumPackage8.getArtifactId();
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj12 = heliumPackage8.getConfig();
    java.lang.Object obj13 = null;
    boolean b14 = heliumPackage8.equals(obj13);
    java.lang.String str15 = heliumPackage8.getName();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!"+ "'", str9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(map_str_obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + ""+ "'", str15.equals(""));

  }

  @Test
  public void test116() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test116"); }

    org.apache.zeppelin.dep.DependencyContext dependencyContext1 = new org.apache.zeppelin.dep.DependencyContext("1");
    dependencyContext1.reset();
    org.apache.zeppelin.dep.Repository repository4 = dependencyContext1.addRepo("hi!");
    org.apache.zeppelin.dep.Repository repository6 = repository4.password("shared");
    org.apache.zeppelin.dep.Repository repository8 = repository4.password("{envName=zeppelin.interpreter.port, propertyName=<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>, defaultValue={}, description=           anonymous}");
    org.sonatype.aether.repository.Authentication authentication9 = repository4.getAuthentication();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(authentication9);

  }

  @Test
  public void test117() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test117"); }

    java.lang.String[] str_array1 = org.apache.zeppelin.display.Input.splitPipe("InterpreterGroup_1497134422540_309628923");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array1);

  }

  @Test
  public void test118() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test118"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry36 = interpreterContext35.getAngularObjectRegistry();
    java.lang.String str37 = interpreterContext35.getParagraphTitle();
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput38 = interpreterContext35.out;
    org.apache.zeppelin.interpreter.remote.RemoteEventClientWrapper remoteEventClientWrapper39 = interpreterContext35.getClient();
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput40 = interpreterContext35.out;
    org.apache.zeppelin.display.GUI gUI41 = interpreterContext35.getGui();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObjectRegistry36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "pre_exec_dev"+ "'", str37.equals("pre_exec_dev"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterOutput38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(remoteEventClientWrapper39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterOutput40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(gUI41);

  }

  @Test
  public void test119() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test119"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.interpreter.InterpreterContext.set(interpreterContext35);
    java.lang.String str37 = interpreterContext35.getReplName();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo38 = interpreterContext35.getAuthenticationInfo();
    org.apache.zeppelin.user.UserCredentials userCredentials39 = authenticationInfo38.getUserCredentials();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str37.equals("org.apache.zeppelin.interpreter.InterpreterException: "));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(userCredentials39);

  }

  @Test
  public void test120() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test120"); }

    org.apache.zeppelin.dep.DependencyResolver dependencyResolver1 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134376971_-1963975868");
    dependencyResolver1.addRepo("1", "1", false);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup7 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool8 = interpreterGroup7.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry10 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup7.setInterpreterHookRegistry(interpreterHookRegistry10);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption13 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption14 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption13);
    boolean b15 = interpreterGroup7.contains((java.lang.Object)interpreterOption13);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup16 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool17 = interpreterGroup16.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry19 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup16.setInterpreterHookRegistry(interpreterHookRegistry19);
    interpreterGroup7.setInterpreterHookRegistry(interpreterHookRegistry19);
    java.lang.String str22 = interpreterGroup7.toString();
    java.util.Map<java.lang.String,org.apache.zeppelin.interpreter.InterpreterGroup> map_str_interpreterGroup23 = null;
    interpreterGroup7.close(map_str_interpreterGroup23, "{}", "InterpreterGroup_1497134350938_711831855");
    java.util.Set<java.lang.String> set_str27 = interpreterGroup7.keySet();
    java.util.List<java.io.File> list_file28 = dependencyResolver1.load("InterpreterGroup_1497134369176_-1878842789", (java.util.Collection<java.lang.String>)set_str27);
    java.io.File file30 = null;
    // The following exception was thrown during execution in test generation
    try {
    dependencyResolver1.copyLocalDependency("InterpreterGroup_1497134419263_1893234849", file30);
      org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException");
    } catch (java.io.FileNotFoundException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "{}"+ "'", str22.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file28);

  }

  @Test
  public void test121() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test121"); }

    org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool interpreterContextRunnerPool0 = new org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool();
    org.apache.zeppelin.resource.Resource[] resource_array7 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource8 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource8, resource_array7);
    org.apache.zeppelin.resource.Resource[] resource_array10 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource11 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource11, resource_array10);
    boolean b13 = arraylist_resource11.isEmpty();
    boolean b14 = linkedlist_resource8.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource11);
    org.apache.zeppelin.resource.Resource resource15 = null;
    boolean b16 = linkedlist_resource8.add(resource15);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource17 = linkedlist_resource8.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo18 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i19 = linkedlist_resource8.indexOf((java.lang.Object)authenticationInfo18);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj20 = null;
    org.apache.zeppelin.display.GUI gUI21 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener23 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry24 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener23);
    org.apache.zeppelin.display.AngularObject angularObject29 = angularObjectRegistry24.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool31 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array32 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner33 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b34 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner33, interpreterContextRunner_array32);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput35 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController36 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext37 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo18, map_str_obj20, gUI21, angularObjectRegistry24, (org.apache.zeppelin.resource.ResourcePool)localResourcePool31, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner33, interpreterOutput35, remoteWorksController36);
    interpreterContextRunnerPool0.addAll("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner33);
    org.apache.zeppelin.resource.Resource[] resource_array45 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource46 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b47 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource46, resource_array45);
    org.apache.zeppelin.resource.Resource[] resource_array48 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource49 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b50 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource49, resource_array48);
    boolean b51 = arraylist_resource49.isEmpty();
    boolean b52 = linkedlist_resource46.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource49);
    org.apache.zeppelin.resource.Resource resource53 = null;
    boolean b54 = linkedlist_resource46.add(resource53);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource55 = linkedlist_resource46.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo56 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i57 = linkedlist_resource46.indexOf((java.lang.Object)authenticationInfo56);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj58 = null;
    org.apache.zeppelin.display.GUI gUI59 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener61 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry62 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener61);
    org.apache.zeppelin.display.AngularObject angularObject67 = angularObjectRegistry62.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool69 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array70 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner71 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b72 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner71, interpreterContextRunner_array70);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput73 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController74 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext75 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo56, map_str_obj58, gUI59, angularObjectRegistry62, (org.apache.zeppelin.resource.ResourcePool)localResourcePool69, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner71, interpreterOutput73, remoteWorksController74);
    org.apache.zeppelin.interpreter.InterpreterContext.set(interpreterContext75);
    java.lang.String str77 = interpreterContext75.getReplName();
    java.lang.String str78 = interpreterContext75.getReplName();
    java.lang.String str79 = interpreterContext75.getParagraphId();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner> list_interpreterContextRunner80 = interpreterContext75.getRunners();
    interpreterContextRunnerPool0.addAll("pre_exec_dev", list_interpreterContextRunner80);
    interpreterContextRunnerPool0.clear("InterpreterGroup_1497134373781_-855626841");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i57 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str77 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str77.equals("org.apache.zeppelin.interpreter.InterpreterException: "));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str78 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str78.equals("org.apache.zeppelin.interpreter.InterpreterException: "));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str79 + "' != '" + "InterpreterGroup_1497134353138_86992792"+ "'", str79.equals("InterpreterGroup_1497134353138_86992792"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterContextRunner80);

  }

  @Test
  public void test122() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test122"); }

    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener0 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput1 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener0);
    interpreterOutput1.addResourceSearchPath("InterpreterGroup_1497134369176_-1878842789");
    int i4 = interpreterOutput1.size();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener12 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry13 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener12);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry16 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry13, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject18 = heliumAppAngularObjectRegistry16.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput19 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext20 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry16, interpreterOutput19);
    org.apache.zeppelin.display.AngularObject angularObject22 = heliumAppAngularObjectRegistry16.remove("InterpreterGroup_1497134353138_86992792");
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener30 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry31 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener30);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry34 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry31, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject36 = heliumAppAngularObjectRegistry34.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput37 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext38 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry34, interpreterOutput37);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener39 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener40 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput41 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener39, interpreterOutputChangeListener40);
    org.apache.zeppelin.helium.ApplicationContext applicationContext42 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry34, interpreterOutput41);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput43 = applicationContext42.out;
    org.apache.zeppelin.helium.ApplicationContext applicationContext44 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134374771_373499119", "InterpreterGroup_1497134367518_-1467696533", "isolated", heliumAppAngularObjectRegistry16, interpreterOutput43);
    org.apache.zeppelin.display.AngularObject<java.io.OutputStream> angularobject_outputStream45 = new org.apache.zeppelin.display.AngularObject<java.io.OutputStream>();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type46 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener47 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput48 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type46, interpreterResultMessageOutputListener47);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type49 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput48.setType(type49);
    angularobject_outputStream45.set((java.io.OutputStream)interpreterResultMessageOutput48);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type52 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener53 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput54 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type52, interpreterResultMessageOutputListener53);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage55 = interpreterResultMessageOutput54.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage56 = interpreterResultMessageOutput54.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup57 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry58 = interpreterGroup57.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array59 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource60 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b61 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource60, resource_array59);
    org.apache.zeppelin.resource.Resource[] resource_array62 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource63 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b64 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource63, resource_array62);
    boolean b65 = arraylist_resource63.isEmpty();
    boolean b66 = linkedlist_resource60.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource63);
    linkedlist_resource60.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter68 = interpreterGroup57.get((java.lang.Object)linkedlist_resource60);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type69 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter70 = interpreterGroup57.get((java.lang.Object)type69);
    interpreterResultMessageOutput54.setType(type69);
    interpreterResultMessageOutput48.setType(type69);
    org.slf4j.Logger logger73 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream74 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger73);
    byte[] byte_array78 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream74.write(byte_array78, (int)'a', 3);
    interpreterResultMessageOutput48.write(byte_array78, (int)'#', 2);
    interpreterOutput43.write(byte_array78);
    interpreterOutput1.write(byte_array78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOutput43);
    org.junit.Assert.assertTrue("'" + type49 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type49.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter68);
    org.junit.Assert.assertTrue("'" + type69 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type69.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array78);

  }

  @Test
  public void test123() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test123"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Code code0 = null;
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult1 = new org.apache.zeppelin.interpreter.InterpreterResult(code0);
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage2 = interpreterResult1.message();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage3 = interpreterResult1.message();
    interpreterResult1.add("InterpreterGroup_1497134412057_-886896671");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage3);

  }

  @Test
  public void test124() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test124"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup9 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool10 = interpreterGroup9.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry12 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup9.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.shutdown();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type16 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener17 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput18 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type16, interpreterResultMessageOutputListener17);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage19 = interpreterResultMessageOutput18.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage20 = interpreterResultMessageOutput18.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener21 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput22 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener21);
    interpreterOutput22.addResourceSearchPath("isolated");
    byte[] byte_array25 = interpreterOutput22.toByteArray();
    interpreterResultMessageOutput18.write(byte_array25);
    boolean b27 = interpreterGroup0.contains((java.lang.Object)interpreterResultMessageOutput18);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup29 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str30 = interpreterGroup29.getId();
    boolean b32 = interpreterGroup29.equals((java.lang.Object)0L);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup33 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool34 = interpreterGroup33.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry36 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup33.setInterpreterHookRegistry(interpreterHookRegistry36);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry38 = interpreterGroup33.getAngularObjectRegistry();
    boolean b40 = interpreterGroup29.remove((java.lang.Object)interpreterGroup33, (java.lang.Object)10.0d);
    java.util.Collection<java.util.List<org.apache.zeppelin.interpreter.Interpreter>> collection_list_interpreter41 = interpreterGroup33.values();
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array43 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter44 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b45 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter44, interpreter_array43);
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter46 = interpreterGroup33.put("AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter44);
    // The following exception was thrown during execution in test generation
    try {
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter47 = interpreterGroup0.put("InterpreterGroup_1497134378013_-178412288", list_interpreter46);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "InterpreterGroup_1497134423148_42638196"+ "'", str30.equals("InterpreterGroup_1497134423148_42638196"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistry38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_list_interpreter41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter46);

  }

  @Test
  public void test125() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test125"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    linkedlist_resource1.clear();
    java.lang.Object obj9 = linkedlist_resource1.clone();
    java.util.concurrent.ExecutorService executorService11 = null;
    org.apache.zeppelin.scheduler.SchedulerListener schedulerListener12 = null;
    org.apache.zeppelin.scheduler.FIFOScheduler fIFOScheduler13 = new org.apache.zeppelin.scheduler.FIFOScheduler("org.apache.zeppelin.interpreter.InterpreterException: ", executorService11, schedulerListener12);
    fIFOScheduler13.stop();
    boolean b15 = linkedlist_resource1.removeFirstOccurrence((java.lang.Object)fIFOScheduler13);
    org.apache.zeppelin.resource.Resource resource16 = null;
    linkedlist_resource1.addLast(resource16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test126() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test126"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Code code0 = org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup1 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry2 = interpreterGroup1.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource4 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource4, resource_array3);
    org.apache.zeppelin.resource.Resource[] resource_array6 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource7 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource7, resource_array6);
    boolean b9 = arraylist_resource7.isEmpty();
    boolean b10 = linkedlist_resource4.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource7);
    linkedlist_resource4.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter12 = interpreterGroup1.get((java.lang.Object)linkedlist_resource4);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type13 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter14 = interpreterGroup1.get((java.lang.Object)type13);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult16 = new org.apache.zeppelin.interpreter.InterpreterResult(code0, type13, "shared");
    org.apache.zeppelin.interpreter.InterpreterResult.Code code17 = org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup18 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry19 = interpreterGroup18.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array20 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource21 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b22 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource21, resource_array20);
    org.apache.zeppelin.resource.Resource[] resource_array23 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource24 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource24, resource_array23);
    boolean b26 = arraylist_resource24.isEmpty();
    boolean b27 = linkedlist_resource21.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource24);
    linkedlist_resource21.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter29 = interpreterGroup18.get((java.lang.Object)linkedlist_resource21);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type30 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter31 = interpreterGroup18.get((java.lang.Object)type30);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult33 = new org.apache.zeppelin.interpreter.InterpreterResult(code17, type30, "shared");
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult35 = new org.apache.zeppelin.interpreter.InterpreterResult(code0, type30, "InterpreterGroup_1497134367518_-1467696533");
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener43 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry44 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener43);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry47 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry44, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject49 = heliumAppAngularObjectRegistry47.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput50 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext51 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry47, interpreterOutput50);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener52 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener53 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput54 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener52, interpreterOutputChangeListener53);
    org.apache.zeppelin.helium.ApplicationContext applicationContext55 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry47, interpreterOutput54);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput56 = applicationContext55.out;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener58 = interpreterOutput56.createInterpreterResultMessageOutputListener((int)(byte)100);
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener59 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput60 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type30, interpreterResultMessageOutputListener58, interpreterOutputChangeListener59);
    java.net.URL uRL61 = null;
    interpreterResultMessageOutput60.write(uRL61);
    org.junit.Assert.assertTrue("'" + code0 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE + "'", code0.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter12);
    org.junit.Assert.assertTrue("'" + type13 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type13.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter14);
    org.junit.Assert.assertTrue("'" + code17 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE + "'", code17.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter29);
    org.junit.Assert.assertTrue("'" + type30 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type30.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOutput56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutputListener58);

  }

  @Test
  public void test127() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test127"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener1);
    org.apache.zeppelin.resource.Resource[] resource_array4 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource5 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource5, resource_array4);
    org.apache.zeppelin.resource.Resource[] resource_array7 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource8 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8, resource_array7);
    boolean b10 = arraylist_resource8.isEmpty();
    boolean b11 = linkedlist_resource5.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8);
    linkedlist_resource5.clear();
    org.apache.zeppelin.display.AngularObject angularObject16 = angularObjectRegistry2.add("_GLOBAL_", (java.lang.Object)linkedlist_resource5, "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "pre_exec", false);
    angularObjectRegistry2.removeAll("localhost", "1");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject16);

  }

  @Test
  public void test128() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test128"); }

    java.util.Map<java.lang.String,java.lang.String> map_str_str3 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener5 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener6 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess8 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str3, 59683, remoteInterpreterProcessListener5, applicationEventListener6, "InterpreterGroup_1497134377064_955397632");
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client9 = remoteInterpreterManagedProcess8.getClient();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(client9);

  }

  @Test
  public void test129() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test129"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup1 = org.apache.zeppelin.interpreter.InterpreterGroup.getByInterpreterGroupId("InterpreterGroup_1497134376971_-1963975868");
    java.util.Properties properties2 = interpreterGroup1.getProperty();
    java.util.Map<java.lang.String,java.lang.String> map_str_str8 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener10 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener11 = null;
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.interpreter.remote.RemoteInterpreter remoteInterpreter14 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter(properties2, "1", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", "AngularObject{noteId='<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>', paragraphId='pre_exec', object=[], name='_GLOBAL_'}", "InterpreterGroup_1497134361094_1261121192", "InterpreterGroup_1497134410397_-259667388", map_str_str8, (int)(short)10, remoteInterpreterProcessListener10, applicationEventListener11, "{\"params\"", (java.lang.Boolean)true);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterGroup1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(properties2);

  }

  @Test
  public void test130() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test130"); }

    java.lang.Exception exception0 = null;
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str1 = org.apache.zeppelin.interpreter.InterpreterUtils.getMostRelevantMessage(exception0);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test131() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test131"); }

    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource remoteZeppelinServerResource0 = new org.apache.zeppelin.interpreter.RemoteZeppelinServerResource();
    java.lang.String str1 = remoteZeppelinServerResource0.getOwnerKey();
    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type type2 = org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS;
    remoteZeppelinServerResource0.setResourceType(type2);
    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource remoteZeppelinServerResource4 = new org.apache.zeppelin.interpreter.RemoteZeppelinServerResource();
    java.lang.String str5 = remoteZeppelinServerResource4.getOwnerKey();
    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type type6 = org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS;
    remoteZeppelinServerResource4.setResourceType(type6);
    remoteZeppelinServerResource0.setResourceType(type6);
    java.lang.Object obj9 = remoteZeppelinServerResource0.getData();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str1);
    org.junit.Assert.assertTrue("'" + type2 + "' != '" + org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS + "'", type2.equals(org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertTrue("'" + type6 + "' != '" + org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS + "'", type6.equals(org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);

  }

  @Test
  public void test132() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test132"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener1);
    org.apache.zeppelin.resource.Resource[] resource_array4 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource5 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource5, resource_array4);
    org.apache.zeppelin.resource.Resource[] resource_array7 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource8 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8, resource_array7);
    boolean b10 = arraylist_resource8.isEmpty();
    boolean b11 = linkedlist_resource5.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8);
    linkedlist_resource5.clear();
    org.apache.zeppelin.display.AngularObject angularObject16 = angularObjectRegistry2.add("_GLOBAL_", (java.lang.Object)linkedlist_resource5, "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "pre_exec", false);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup17 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry18 = interpreterGroup17.getInterpreterHookRegistry();
    java.lang.String str19 = interpreterGroup17.toString();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup21 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str22 = interpreterGroup21.getId();
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array24 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter25 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b26 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter25, interpreter_array24);
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter27 = interpreterGroup21.putIfAbsent("pre_exec_dev", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter25);
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array28 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter29 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b30 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter29, interpreter_array28);
    boolean b31 = interpreterGroup17.replace("InterpreterGroup_1497134350790_986318210", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter25, (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter29);
    boolean b32 = linkedlist_resource5.containsAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter25);
    java.lang.Object[] obj_array33 = linkedlist_resource5.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "{}"+ "'", str19.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "InterpreterGroup_1497134423638_1902175415"+ "'", str22.equals("InterpreterGroup_1497134423638_1902175415"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);

  }

  @Test
  public void test133() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test133"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Code code0 = org.apache.zeppelin.interpreter.InterpreterResult.Code.KEEP_PREVIOUS_RESULT;
    org.apache.zeppelin.interpreter.InterpreterResult.Code code1 = org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE;
    org.apache.zeppelin.resource.ResourceSet resourceSet3 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet5 = resourceSet3.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet7 = resourceSet5.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.interpreter.InterpreterResult.Code code8 = null;
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult9 = new org.apache.zeppelin.interpreter.InterpreterResult(code8);
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage10 = interpreterResult9.message();
    boolean b11 = resourceSet5.removeAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)list_interpreterResultMessage10);
    org.apache.zeppelin.resource.Resource[] resource_array13 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource14 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource14, resource_array13);
    org.apache.zeppelin.resource.Resource[] resource_array16 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource17 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource17, resource_array16);
    boolean b19 = arraylist_resource17.isEmpty();
    boolean b20 = linkedlist_resource14.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource17);
    org.apache.zeppelin.display.ui.OptionInput.ParamOption paramOption21 = null;
    org.apache.zeppelin.display.ui.OptionInput.ParamOption[] paramOption_array22 = new org.apache.zeppelin.display.ui.OptionInput.ParamOption[] { paramOption21 };
    org.apache.zeppelin.display.ui.Select select23 = org.apache.zeppelin.display.Input.select("post_exec_dev", (java.lang.Object)linkedlist_resource14, paramOption_array22);
    org.apache.zeppelin.display.ui.Select select24 = new org.apache.zeppelin.display.ui.Select("post_exec_dev", (java.lang.Object)list_interpreterResultMessage10, paramOption_array22);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult25 = new org.apache.zeppelin.interpreter.InterpreterResult(code1, list_interpreterResultMessage10);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult26 = new org.apache.zeppelin.interpreter.InterpreterResult(code0, list_interpreterResultMessage10);
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage27 = interpreterResult26.message();
    org.junit.Assert.assertTrue("'" + code0 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.KEEP_PREVIOUS_RESULT + "'", code0.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.KEEP_PREVIOUS_RESULT));
    org.junit.Assert.assertTrue("'" + code1 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE + "'", code1.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(paramOption_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(select23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage27);

  }

  @Test
  public void test134() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test134"); }

    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption1 = new org.apache.zeppelin.interpreter.InterpreterOption(false);
    interpreterOption1.setPerUser("InterpreterGroup_1497134377636_1315933403");
    int i4 = interpreterOption1.getPort();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == (-1));

  }

  @Test
  public void test135() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test135"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener1);
    org.apache.zeppelin.resource.Resource[] resource_array4 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource5 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource5, resource_array4);
    org.apache.zeppelin.resource.Resource[] resource_array7 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource8 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8, resource_array7);
    boolean b10 = arraylist_resource8.isEmpty();
    boolean b11 = linkedlist_resource5.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8);
    linkedlist_resource5.clear();
    org.apache.zeppelin.display.AngularObject angularObject16 = angularObjectRegistry2.add("_GLOBAL_", (java.lang.Object)linkedlist_resource5, "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "pre_exec", false);
    java.util.List<org.apache.zeppelin.display.AngularObject> list_angularObject19 = angularObjectRegistry2.getAll("pre_exec", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    angularObjectRegistry2.removeAll("InterpreterGroup_1497134367518_-1467696533", "pre_exec_dev");
    org.apache.zeppelin.display.AngularObject angularObject26 = angularObjectRegistry2.get("InterpreterGroup_1497134353138_86992792", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.tabledata.TableDataException: <strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    angularObjectRegistry2.removeAll("InterpreterGroup_1497134422540_309628923", "InterpreterGroup_1497134373781_-855626841");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_angularObject19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject26);

  }

  @Test
  public void test136() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test136"); }

    org.apache.zeppelin.dep.TransferListener transferListener0 = new org.apache.zeppelin.dep.TransferListener();
    org.sonatype.aether.transfer.TransferEvent transferEvent1 = null;
    transferListener0.transferStarted(transferEvent1);
    org.sonatype.aether.transfer.TransferEvent transferEvent3 = null;
    transferListener0.transferStarted(transferEvent3);
    org.sonatype.aether.transfer.TransferEvent transferEvent5 = null;
    // The following exception was thrown during execution in test generation
    try {
    transferListener0.transferCorrupted(transferEvent5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test137() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test137"); }

    org.apache.zeppelin.user.CredentialsInfoSaving credentialsInfoSaving0 = new org.apache.zeppelin.user.CredentialsInfoSaving();
    java.util.Map<java.lang.String,org.apache.zeppelin.user.UserCredentials> map_str_userCredentials1 = null;
    credentialsInfoSaving0.credentialsMap = map_str_userCredentials1;
    java.util.Map<java.lang.String,org.apache.zeppelin.user.UserCredentials> map_str_userCredentials3 = null;
    credentialsInfoSaving0.credentialsMap = map_str_userCredentials3;

  }

  @Test
  public void test138() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test138"); }

    java.util.Map<java.lang.String,java.lang.String> map_str_str3 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener5 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener6 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess8 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str3, 59683, remoteInterpreterProcessListener5, applicationEventListener6, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterManagedProcess8.stop();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup10 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool11 = interpreterGroup10.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry13 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup10.setInterpreterHookRegistry(interpreterHookRegistry13);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption16 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption17 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption16);
    boolean b18 = interpreterGroup10.contains((java.lang.Object)interpreterOption16);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup19 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool20 = interpreterGroup19.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry22 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup19.setInterpreterHookRegistry(interpreterHookRegistry22);
    interpreterGroup10.setInterpreterHookRegistry(interpreterHookRegistry22);
    java.lang.String str25 = interpreterGroup10.toString();
    // The following exception was thrown during execution in test generation
    try {
    int i28 = remoteInterpreterManagedProcess8.reference(interpreterGroup10, "InterpreterGroup_1497134385425_-1840284417", (java.lang.Boolean)true);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "{}"+ "'", str25.equals("{}"));

  }

  @Test
  public void test139() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test139"); }

    org.apache.zeppelin.dep.TransferListener transferListener0 = new org.apache.zeppelin.dep.TransferListener();
    org.sonatype.aether.transfer.TransferEvent transferEvent1 = null;
    transferListener0.transferStarted(transferEvent1);
    org.sonatype.aether.transfer.TransferEvent transferEvent3 = null;
    // The following exception was thrown during execution in test generation
    try {
    transferListener0.transferInitiated(transferEvent3);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test140() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test140"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener0 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener1 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener0, applicationEventListener1);
    remoteInterpreterEventPoller2.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    boolean b8 = interpreterGroup4.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str9 = interpreterGroup4.getId();
    remoteInterpreterEventPoller2.setInterpreterGroup(interpreterGroup4);
    remoteInterpreterEventPoller2.run();
    java.util.Map<java.lang.String,java.lang.String> map_str_str15 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener17 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener18 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess20 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str15, 59683, remoteInterpreterProcessListener17, applicationEventListener18, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterEventPoller2.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess20);
    int i22 = remoteInterpreterManagedProcess20.dereference();
    org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool interpreterContextRunnerPool23 = remoteInterpreterManagedProcess20.getInterpreterContextRunnerPool();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "InterpreterGroup_1497134424327_-1961553751"+ "'", str9.equals("InterpreterGroup_1497134424327_-1961553751"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunnerPool23);

  }

  @Test
  public void test141() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test141"); }

    java.util.Map<java.lang.String,org.apache.zeppelin.interpreter.InterpreterProperty> map_str_interpreterProperty3 = null;
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.interpreter.Interpreter.register("InterpreterGroup_1497134384596_204399223", "InterpreterGroup_1497134420195_-722782936", "post_exec_dev", map_str_interpreterProperty3);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test142() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test142"); }

    org.apache.zeppelin.user.UsernamePassword usernamePassword2 = new org.apache.zeppelin.user.UsernamePassword("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    usernamePassword2.setPassword("post_exec_dev");
    java.lang.String str5 = usernamePassword2.getUsername();
    usernamePassword2.setPassword("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "InterpreterGroup_1497134350938_711831855"+ "'", str5.equals("InterpreterGroup_1497134350938_711831855"));

  }

  @Test
  public void test143() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test143"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener0 = null;
    org.apache.zeppelin.interpreter.remote.AppendOutputRunner appendOutputRunner1 = new org.apache.zeppelin.interpreter.remote.AppendOutputRunner(remoteInterpreterProcessListener0);
    appendOutputRunner1.appendBuffer("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "pre_exec_dev", 102400, "");
    // The following exception was thrown during execution in test generation
    try {
    appendOutputRunner1.run();
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test144() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test144"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Code code0 = null;
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult2 = new org.apache.zeppelin.interpreter.InterpreterResult(code0, "");
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage3 = null;
    interpreterResult2.add(interpreterResultMessage3);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type5 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener6 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput7 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type5, interpreterResultMessageOutputListener6);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage8 = interpreterResultMessageOutput7.toInterpreterResultMessage();
    interpreterResult2.add(interpreterResultMessage8);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str10 = interpreterResultMessage8.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage8);

  }

  @Test
  public void test145() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test145"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    boolean b6 = resourceSet2.contains((java.lang.Object)"zeppelin.interpreter.port");
    org.apache.zeppelin.resource.ResourceSet resourceSet8 = resourceSet2.filterByName("InterpreterGroup_1497134367518_-1467696533");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet8);

  }

  @Test
  public void test146() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test146"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("InterpreterGroup_1497134412057_-886896671", angularObjectRegistryListener1);

  }

  @Test
  public void test147() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test147"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = interpreterGroup2.getInterpreterHookRegistry();
    java.lang.String str4 = interpreterGroup2.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener1, interpreterGroup2);
    interpreterGroup2.setAngularRegistryPushed(false);
    java.util.Set<java.util.Map.Entry<java.lang.String,java.util.List<org.apache.zeppelin.interpreter.Interpreter>>> set_entry_str_list_interpreter8 = interpreterGroup2.entrySet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}"+ "'", str4.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_entry_str_list_interpreter8);

  }

  @Test
  public void test148() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test148"); }

    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage2 = org.apache.zeppelin.interpreter.ResultMessages.getExceedsLimitRowsMessage((int)'#', "InterpreterGroup_1497134410739_-1534144333");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage2);

  }

  @Test
  public void test149() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test149"); }

    org.apache.zeppelin.display.AngularObject<java.io.OutputStream> angularobject_outputStream0 = new org.apache.zeppelin.display.AngularObject<java.io.OutputStream>();
    java.lang.String str1 = angularobject_outputStream0.toString();
    org.apache.zeppelin.display.AngularObjectWatcher angularObjectWatcher2 = null;
    angularobject_outputStream0.addWatcher(angularObjectWatcher2);
    java.lang.String str4 = angularobject_outputStream0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}"+ "'", str1.equals("AngularObject{noteId='null', paragraphId='null', object=null, name='null'}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}"+ "'", str4.equals("AngularObject{noteId='null', paragraphId='null', object=null, name='null'}"));

  }

  @Test
  public void test150() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test150"); }

    org.apache.zeppelin.dep.RepositorySystemFactory.ManualWagonProvider manualWagonProvider0 = new org.apache.zeppelin.dep.RepositorySystemFactory.ManualWagonProvider();
    org.apache.maven.wagon.Wagon wagon2 = manualWagonProvider0.lookup("pre_exec");
    org.apache.maven.wagon.Wagon wagon3 = null;
    manualWagonProvider0.release(wagon3);
    org.apache.maven.wagon.Wagon wagon5 = null;
    manualWagonProvider0.release(wagon5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(wagon2);

  }

  @Test
  public void test151() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test151"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry1 = interpreterGroup0.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array2 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource3 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource3, resource_array2);
    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource6 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource6, resource_array5);
    boolean b8 = arraylist_resource6.isEmpty();
    boolean b9 = linkedlist_resource3.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource6);
    linkedlist_resource3.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter11 = interpreterGroup0.get((java.lang.Object)linkedlist_resource3);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type12 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter13 = interpreterGroup0.get((java.lang.Object)type12);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess14 = null;
    interpreterGroup0.setRemoteInterpreterProcess(remoteInterpreterProcess14);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry16 = interpreterGroup0.getAngularObjectRegistry();
    java.lang.String str17 = interpreterGroup0.getId();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter11);
    org.junit.Assert.assertTrue("'" + type12 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type12.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistry16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "InterpreterGroup_1497134424367_1322327128"+ "'", str17.equals("InterpreterGroup_1497134424367_1322327128"));

  }

  @Test
  public void test152() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test152"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage3 = interpreterResultMessageOutput2.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage4 = interpreterResultMessageOutput2.toInterpreterResultMessage();
    java.io.File file5 = null;
    interpreterResultMessageOutput2.write(file5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage4);

  }

  @Test
  public void test153() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test153"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.resource.Resource resource39 = localResourcePool29.get("<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>", "org.apache.zeppelin.interpreter.InterpreterException: ", "<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet40 = localResourcePool29.getAll();
    java.util.ListIterator<org.apache.zeppelin.resource.Resource> listiterator_resource41 = resourceSet40.listIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(listiterator_resource41);

  }

  @Test
  public void test154() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test154"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener1);
    org.apache.zeppelin.display.AngularObject angularObject7 = angularObjectRegistry2.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    java.util.List<org.apache.zeppelin.display.AngularObject> list_angularObject10 = angularObjectRegistry2.getAll("post_exec", "InterpreterGroup_1497134421662_940144173");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_angularObject10);

  }

  @Test
  public void test155() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test155"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.display.GUI gUI36 = new org.apache.zeppelin.display.GUI();
    java.util.LinkedHashMap<java.lang.String,org.apache.zeppelin.display.Input> linkedhashmap_str_input37 = gUI36.getForms();
    java.lang.Object obj40 = gUI36.input("InterpreterGroup_1497134350790_986318210", (java.lang.Object)(byte)1);
    java.lang.String str41 = gUI36.toJson();
    org.apache.zeppelin.resource.Resource[] resource_array47 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource48 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b49 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource48, resource_array47);
    org.apache.zeppelin.resource.Resource[] resource_array50 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource51 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b52 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource51, resource_array50);
    boolean b53 = arraylist_resource51.isEmpty();
    boolean b54 = linkedlist_resource48.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource51);
    org.apache.zeppelin.resource.Resource resource55 = null;
    boolean b56 = linkedlist_resource48.add(resource55);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource57 = linkedlist_resource48.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo58 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i59 = linkedlist_resource48.indexOf((java.lang.Object)authenticationInfo58);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj60 = null;
    org.apache.zeppelin.display.GUI gUI61 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener63 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry64 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener63);
    org.apache.zeppelin.display.AngularObject angularObject69 = angularObjectRegistry64.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool71 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array72 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner73 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b74 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner73, interpreterContextRunner_array72);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput75 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController76 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext77 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo58, map_str_obj60, gUI61, angularObjectRegistry64, (org.apache.zeppelin.resource.ResourcePool)localResourcePool71, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner73, interpreterOutput75, remoteWorksController76);
    java.lang.Object obj80 = gUI61.textbox("", "zeppelin.interpreter.host");
    gUI61.convertOldInput();
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj82 = gUI61.getParams();
    gUI36.setParams(map_str_obj82);
    java.lang.String str85 = org.apache.zeppelin.display.Input.getSimpleQuery(map_str_obj82, "InterpreterGroup_1497134408987_-733609207");
    gUI19.setParams(map_str_obj82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(linkedhashmap_str_input37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj40 + "' != '" + "1"+ "'", obj40.equals("1"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}"+ "'", str41.equals("{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj80 + "' != '" + "zeppelin.interpreter.host"+ "'", obj80.equals("zeppelin.interpreter.host"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(map_str_obj82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str85 + "' != '" + "InterpreterGroup_1497134408987_-733609207"+ "'", str85.equals("InterpreterGroup_1497134408987_-733609207"));

  }

  @Test
  public void test156() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test156"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    boolean b11 = linkedlist_resource1.contains((java.lang.Object)(-1));
    org.apache.zeppelin.resource.Resource resource12 = null;
    boolean b13 = linkedlist_resource1.offerLast(resource12);
    org.apache.zeppelin.resource.Resource[] resource_array15 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource16 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource16, resource_array15);
    org.apache.zeppelin.resource.Resource[] resource_array18 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource19 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource19, resource_array18);
    boolean b21 = arraylist_resource19.isEmpty();
    boolean b22 = linkedlist_resource16.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource19);
    org.apache.zeppelin.resource.Resource resource23 = null;
    boolean b24 = linkedlist_resource16.add(resource23);
    boolean b26 = linkedlist_resource16.contains((java.lang.Object)(-1));
    boolean b27 = linkedlist_resource1.addAll(1, (java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource16);
    linkedlist_resource16.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);

  }

  @Test
  public void test157() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test157"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess9 = interpreterGroup0.getRemoteInterpreterProcess();
    boolean b10 = interpreterGroup0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(remoteInterpreterProcess9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test158() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test158"); }

    org.apache.zeppelin.dep.DependencyContext dependencyContext1 = new org.apache.zeppelin.dep.DependencyContext("1");
    java.util.List<java.io.File> list_file2 = dependencyContext1.getFiles();
    org.apache.zeppelin.dep.Dependency dependency4 = dependencyContext1.load("InterpreterGroup_1497134387892_-1132206419");
    java.util.List<java.lang.String> list_str5 = dependency4.getExclusions();
    org.apache.zeppelin.dep.Dependency dependency6 = dependency4.excludeAll();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup7 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool8 = interpreterGroup7.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry10 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup7.setInterpreterHookRegistry(interpreterHookRegistry10);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption13 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption14 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption13);
    boolean b15 = interpreterGroup7.contains((java.lang.Object)interpreterOption13);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup16 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool17 = interpreterGroup16.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry19 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup16.setInterpreterHookRegistry(interpreterHookRegistry19);
    interpreterGroup7.setInterpreterHookRegistry(interpreterHookRegistry19);
    interpreterGroup7.shutdown();
    java.lang.String str23 = interpreterGroup7.getId();
    java.util.Set<java.util.Map.Entry<java.lang.String,java.util.List<org.apache.zeppelin.interpreter.Interpreter>>> set_entry_str_list_interpreter24 = interpreterGroup7.entrySet();
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry25 = interpreterGroup7.getAngularObjectRegistry();
    java.util.Set<java.util.Map.Entry<java.lang.String,java.util.List<org.apache.zeppelin.interpreter.Interpreter>>> set_entry_str_list_interpreter26 = interpreterGroup7.entrySet();
    java.util.Enumeration<java.util.List<org.apache.zeppelin.interpreter.Interpreter>> enumeration_list_interpreter27 = interpreterGroup7.elements();
    boolean b28 = dependency6.equals((java.lang.Object)enumeration_list_interpreter27);
    java.util.List<java.lang.String> list_str29 = dependency6.getExclusions();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(dependency4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(dependency6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "InterpreterGroup_1497134425062_-942800446"+ "'", str23.equals("InterpreterGroup_1497134425062_-942800446"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_entry_str_list_interpreter24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistry25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_entry_str_list_interpreter26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(enumeration_list_interpreter27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_str29);

  }

  @Test
  public void test159() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test159"); }

    org.apache.zeppelin.user.Credentials credentials2 = new org.apache.zeppelin.user.Credentials((java.lang.Boolean)true, "%null ");

  }

  @Test
  public void test160() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test160"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet4.filterByName("InterpreterGroup_1497134350938_711831855");
    java.lang.Object[] obj_array7 = resourceSet6.toArray();
    org.apache.zeppelin.resource.ResourceSet resourceSet9 = resourceSet6.filterByClassnameRegex("org.apache.zeppelin.interpreter.InterpreterException: ");
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory10 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService12 = executorFactory10.createOrGet("hi!");
    java.util.concurrent.ExecutorService executorService14 = executorFactory10.createOrGet("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    executorFactory10.shutdown("InterpreterGroup_1497134361189_-653890590");
    java.util.concurrent.ExecutorService executorService19 = executorFactory10.createOrGet("org.apache.zeppelin.tabledata.TableDataException: <strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", 102400);
    int i20 = resourceSet9.indexOf((java.lang.Object)executorFactory10);
    resourceSet9.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == (-1));

  }

  @Test
  public void test161() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test161"); }

    org.apache.zeppelin.interpreter.InterpreterOutput.limit = (byte)0;

  }

  @Test
  public void test162() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test162"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet4.filterByName("InterpreterGroup_1497134350938_711831855");
    resourceSet6.clear();
    org.apache.zeppelin.resource.ResourceSet resourceSet9 = resourceSet6.filterByNoteId("pre_exec");
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource10 = resourceSet6.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource10);

  }

  @Test
  public void test163() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test163"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener7 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry8 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener7);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry11 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry8, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject13 = heliumAppAngularObjectRegistry11.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput14 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext15 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry11, interpreterOutput14);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener16 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener17 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput18 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener16, interpreterOutputChangeListener17);
    org.apache.zeppelin.helium.ApplicationContext applicationContext19 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry11, interpreterOutput18);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput20 = applicationContext19.out;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput21 = interpreterOutput20.getCurrentOutput();
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener23 = interpreterOutput20.createInterpreterResultMessageOutputListener((int)(byte)0);
    interpreterOutput20.write(3);
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput26 = interpreterOutput20.getCurrentOutput();
    byte[] byte_array27 = interpreterOutput20.toByteArray();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage28 = interpreterOutput20.toInterpreterResultMessage();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOutput20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterResultMessageOutput21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutputListener23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutput26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage28);

  }

  @Test
  public void test164() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test164"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type3 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput2.setType(type3);
    interpreterResultMessageOutput2.clear();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage6 = interpreterResultMessageOutput2.toInterpreterResultMessage();
    java.lang.String str7 = interpreterResultMessage6.toString();
    org.junit.Assert.assertTrue("'" + type3 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type3.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "%svg "+ "'", str7.equals("%svg "));

  }

  @Test
  public void test165() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test165"); }

    org.apache.zeppelin.resource.LocalResourcePool localResourcePool1 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.resource.Resource resource3 = localResourcePool1.remove("InterpreterGroup_1497134393545_537212119");
    org.apache.zeppelin.dep.DependencyResolver dependencyResolver5 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134376971_-1963975868");
    dependencyResolver5.addRepo("1", "1", false);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup11 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool12 = interpreterGroup11.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry14 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup11.setInterpreterHookRegistry(interpreterHookRegistry14);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption17 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption18 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption17);
    boolean b19 = interpreterGroup11.contains((java.lang.Object)interpreterOption17);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup20 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool21 = interpreterGroup20.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry23 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup20.setInterpreterHookRegistry(interpreterHookRegistry23);
    interpreterGroup11.setInterpreterHookRegistry(interpreterHookRegistry23);
    java.lang.String str26 = interpreterGroup11.toString();
    java.util.Map<java.lang.String,org.apache.zeppelin.interpreter.InterpreterGroup> map_str_interpreterGroup27 = null;
    interpreterGroup11.close(map_str_interpreterGroup27, "{}", "InterpreterGroup_1497134350938_711831855");
    java.util.Set<java.lang.String> set_str31 = interpreterGroup11.keySet();
    java.util.List<java.io.File> list_file32 = dependencyResolver5.load("InterpreterGroup_1497134369176_-1878842789", (java.util.Collection<java.lang.String>)set_str31);
    org.apache.zeppelin.helium.ApplicationLoader applicationLoader33 = new org.apache.zeppelin.helium.ApplicationLoader((org.apache.zeppelin.resource.ResourcePool)localResourcePool1, dependencyResolver5);
    dependencyResolver5.addRepo("InterpreterGroup_1497134385425_-1840284417", "InterpreterGroup_1497134377636_1315933403", true);
    java.io.File file39 = null;
    // The following exception was thrown during execution in test generation
    try {
    java.util.List<java.io.File> list_file40 = dependencyResolver5.load("InterpreterGroup_1497134413115_2139466129", file39);
      org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException");
    } catch (java.io.FileNotFoundException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "{}"+ "'", str26.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file32);

  }

  @Test
  public void test166() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test166"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    java.lang.String str36 = localResourcePool29.id();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "zeppelin.interpreter.port"+ "'", str36.equals("zeppelin.interpreter.port"));

  }

  @Test
  public void test167() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test167"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = org.apache.zeppelin.interpreter.InterpreterResult.Type.TEXT;
    org.junit.Assert.assertTrue("'" + type0 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.TEXT + "'", type0.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.TEXT));

  }

  @Test
  public void test168() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test168"); }

    org.apache.zeppelin.display.AngularObject<java.io.OutputStream> angularobject_outputStream0 = new org.apache.zeppelin.display.AngularObject<java.io.OutputStream>();
    org.apache.zeppelin.display.AngularObjectWatcher angularObjectWatcher1 = null;
    angularobject_outputStream0.removeWatcher(angularObjectWatcher1);

  }

  @Test
  public void test169() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test169"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory1 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService4 = executorFactory1.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess6 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory7 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler9 = new org.apache.zeppelin.scheduler.RemoteScheduler("zeppelin.interpreter.host", executorService4, "pre_exec_dev", remoteInterpreterProcess6, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory7, (int)(short)1);
    remoteScheduler9.stop();
    java.util.Collection<org.apache.zeppelin.scheduler.Job> collection_job11 = remoteScheduler9.getJobsRunning();
    remoteScheduler9.run();
    java.util.Collection<org.apache.zeppelin.scheduler.Job> collection_job13 = remoteScheduler9.getJobsRunning();
    remoteScheduler9.stop();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_job11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_job13);

  }

  @Test
  public void test170() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test170"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource10 = linkedlist_resource1.iterator();
    java.lang.String str11 = linkedlist_resource1.toString();
    org.apache.zeppelin.resource.Resource resource12 = linkedlist_resource1.remove();
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.resource.Resource resource13 = linkedlist_resource1.remove();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[null]"+ "'", str11.equals("[null]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource12);

  }

  @Test
  public void test171() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test171"); }

    java.util.LinkedHashMap<java.lang.String,org.apache.zeppelin.display.Input> linkedhashmap_str_input1 = org.apache.zeppelin.display.Input.extractSimpleQueryForm("InterpreterGroup_1497134410138_-585552671");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(linkedhashmap_str_input1);

  }

  @Test
  public void test172() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test172"); }

    org.apache.zeppelin.interpreter.remote.AppendOutputBuffer appendOutputBuffer4 = new org.apache.zeppelin.interpreter.remote.AppendOutputBuffer("AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}", "InterpreterGroup_1497134376922_-128746751", (int)(short)-1, "");
    java.lang.String str5 = appendOutputBuffer4.getNoteId();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}"+ "'", str5.equals("AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}"));

  }

  @Test
  public void test173() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test173"); }

    org.apache.zeppelin.interpreter.InterpreterProperty interpreterProperty4 = new org.apache.zeppelin.interpreter.InterpreterProperty("zeppelin.interpreter.port", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "{}", "anonymous");
    java.lang.String str5 = interpreterProperty4.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "{envName=zeppelin.interpreter.port, propertyName=<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>, defaultValue={}, description=           anonymous}"+ "'", str5.equals("{envName=zeppelin.interpreter.port, propertyName=<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>, defaultValue={}, description=           anonymous}"));

  }

  @Test
  public void test174() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test174"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    linkedlist_resource1.clear();
    java.lang.Object obj9 = linkedlist_resource1.clone();
    java.util.concurrent.ExecutorService executorService11 = null;
    org.apache.zeppelin.scheduler.SchedulerListener schedulerListener12 = null;
    org.apache.zeppelin.scheduler.FIFOScheduler fIFOScheduler13 = new org.apache.zeppelin.scheduler.FIFOScheduler("org.apache.zeppelin.interpreter.InterpreterException: ", executorService11, schedulerListener12);
    fIFOScheduler13.stop();
    boolean b15 = linkedlist_resource1.removeFirstOccurrence((java.lang.Object)fIFOScheduler13);
    fIFOScheduler13.run();
    fIFOScheduler13.stop();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test175() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test175"); }

    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry1 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    java.lang.String str5 = interpreterHookRegistry1.get("", "post_exec_dev", "hi!");
    interpreterHookRegistry1.addRepl("InterpreterGroup_1497134373781_-855626841", "InterpreterGroup_1497134379014_-1019571993");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str5);

  }

  @Test
  public void test176() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test176"); }

    org.apache.zeppelin.dep.DependencyResolver dependencyResolver1 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134376959_456934766");

  }

  @Test
  public void test177() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test177"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener4 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry5 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener4);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry8 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry5, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject10 = heliumAppAngularObjectRegistry8.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput11 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext12 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry8, interpreterOutput11);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry13 = applicationContext12.getAngularObjectRegistry();
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput14 = applicationContext12.out;
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(heliumAppAngularObjectRegistry13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterOutput14);

  }

  @Test
  public void test178() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test178"); }

    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo1 = new org.apache.zeppelin.user.AuthenticationInfo("InterpreterGroup_1497134421663_244465960");

  }

  @Test
  public void test179() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test179"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet0.filterByNoteId("_GLOBAL_");
    org.apache.zeppelin.resource.Resource resource5 = null;
    boolean b6 = resourceSet4.offerLast(resource5);
    org.apache.zeppelin.resource.Resource resource8 = null;
    // The following exception was thrown during execution in test generation
    try {
    resourceSet4.add(29914, resource8);
      org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException");
    } catch (java.lang.IndexOutOfBoundsException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);

  }

  @Test
  public void test180() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test180"); }

    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo1 = new org.apache.zeppelin.user.AuthenticationInfo("InterpreterGroup_1497134410556_1275540258");

  }

  @Test
  public void test181() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test181"); }

    org.apache.zeppelin.user.Credentials credentials2 = new org.apache.zeppelin.user.Credentials((java.lang.Boolean)false, "InterpreterGroup_1497134421659_488496160");

  }

  @Test
  public void test182() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test182"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = interpreterGroup2.getInterpreterHookRegistry();
    java.lang.String str4 = interpreterGroup2.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener1, interpreterGroup2);
    org.apache.zeppelin.display.AngularObject angularObject10 = remoteAngularObjectRegistry5.remove("_GLOBAL_", "post_exec_dev", "_GLOBAL_", false);
    org.apache.zeppelin.display.AngularObject angularObject15 = remoteAngularObjectRegistry5.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "zeppelin.interpreter.port", true);
    remoteAngularObjectRegistry5.removeAllAndNotifyRemoteProcess("{\"params\":{},\"forms\":{}}", "InterpreterGroup_1497134374771_373499119");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}"+ "'", str4.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject15);

  }

  @Test
  public void test183() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test183"); }

    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener0 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput1 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener0);
    interpreterOutput1.addResourceSearchPath("InterpreterGroup_1497134369176_-1878842789");
    int i4 = interpreterOutput1.size();
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener5 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput6 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener5);
    interpreterOutput6.addResourceSearchPath("isolated");
    byte[] byte_array9 = interpreterOutput6.toByteArray();
    interpreterOutput1.write(byte_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array9);

  }

  @Test
  public void test184() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test184"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    boolean b11 = linkedlist_resource1.contains((java.lang.Object)(-1));
    org.apache.zeppelin.resource.Resource resource12 = null;
    boolean b13 = linkedlist_resource1.offerLast(resource12);
    org.apache.zeppelin.resource.Resource[] resource_array15 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource16 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource16, resource_array15);
    org.apache.zeppelin.resource.Resource[] resource_array18 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource19 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource19, resource_array18);
    boolean b21 = arraylist_resource19.isEmpty();
    boolean b22 = linkedlist_resource16.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource19);
    org.apache.zeppelin.resource.Resource resource23 = null;
    boolean b24 = linkedlist_resource16.add(resource23);
    boolean b26 = linkedlist_resource16.contains((java.lang.Object)(-1));
    boolean b27 = linkedlist_resource1.addAll(1, (java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource16);
    org.apache.zeppelin.resource.Resource resource28 = null;
    boolean b29 = linkedlist_resource16.offerLast(resource28);
    org.apache.zeppelin.resource.ResourceSet resourceSet30 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet32 = resourceSet30.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet34 = resourceSet30.filterByNoteId("_GLOBAL_");
    org.apache.zeppelin.resource.Resource resource35 = null;
    boolean b36 = resourceSet34.offerLast(resource35);
    boolean b37 = linkedlist_resource16.equals((java.lang.Object)resourceSet34);
    org.apache.zeppelin.resource.Resource resource38 = linkedlist_resource16.peekFirst();
    org.apache.zeppelin.resource.Resource resource39 = null;
    boolean b40 = linkedlist_resource16.offerLast(resource39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);

  }

  @Test
  public void test185() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test185"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry1 = interpreterGroup0.getInterpreterHookRegistry();
    interpreterGroup0.close("");
    java.util.Enumeration<java.util.List<org.apache.zeppelin.interpreter.Interpreter>> enumeration_list_interpreter4 = interpreterGroup0.elements();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(enumeration_list_interpreter4);

  }

  @Test
  public void test186() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test186"); }

    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption1 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption2 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption1);
    boolean b3 = interpreterOption2.perNoteShared();
    boolean b4 = interpreterOption2.perUserScoped();
    interpreterOption2.setExistingProcess(false);
    interpreterOption2.setHost("[null]");
    boolean b9 = interpreterOption2.perNoteShared();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test187() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test187"); }

    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption1 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    boolean b2 = interpreterOption1.isUserImpersonate();
    boolean b3 = interpreterOption1.permissionIsSet();
    boolean b4 = interpreterOption1.perNoteIsolated();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);

  }

  @Test
  public void test188() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test188"); }

    org.apache.zeppelin.dep.RepositoryListener repositoryListener0 = new org.apache.zeppelin.dep.RepositoryListener();
    org.sonatype.aether.RepositoryEvent repositoryEvent1 = null;
    repositoryListener0.metadataDownloading(repositoryEvent1);
    org.sonatype.aether.RepositoryEvent repositoryEvent3 = null;
    repositoryListener0.metadataDownloaded(repositoryEvent3);
    org.sonatype.aether.RepositoryEvent repositoryEvent5 = null;
    // The following exception was thrown during execution in test generation
    try {
    repositoryListener0.artifactInstalled(repositoryEvent5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test189() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test189"); }

    org.apache.zeppelin.user.UsernamePassword usernamePassword2 = new org.apache.zeppelin.user.UsernamePassword("{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}", "InterpreterGroup_1497134350938_711831855");
    usernamePassword2.setPassword("InterpreterGroup_1497134368135_304166951");
    java.lang.String str5 = usernamePassword2.getUsername();
    java.lang.String str6 = usernamePassword2.getPassword();
    java.lang.String str7 = usernamePassword2.getUsername();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}"+ "'", str5.equals("{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "InterpreterGroup_1497134368135_304166951"+ "'", str6.equals("InterpreterGroup_1497134368135_304166951"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}"+ "'", str7.equals("{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}"));

  }

  @Test
  public void test190() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test190"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str1 = interpreterGroup0.getId();
    boolean b3 = interpreterGroup0.equals((java.lang.Object)0L);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry7 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup4.setInterpreterHookRegistry(interpreterHookRegistry7);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry9 = interpreterGroup4.getAngularObjectRegistry();
    boolean b11 = interpreterGroup0.remove((java.lang.Object)interpreterGroup4, (java.lang.Object)10.0d);
    java.util.Collection<java.util.List<org.apache.zeppelin.interpreter.Interpreter>> collection_list_interpreter12 = interpreterGroup4.values();
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array14 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter15 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter15, interpreter_array14);
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter17 = interpreterGroup4.put("AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter15);
    java.lang.String str18 = interpreterGroup4.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "InterpreterGroup_1497134425413_1534169025"+ "'", str1.equals("InterpreterGroup_1497134425413_1534169025"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistry9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_list_interpreter12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "{AngularObject{noteId='null', paragraphId='null', object=null, name='null'}=[]}"+ "'", str18.equals("{AngularObject{noteId='null', paragraphId='null', object=null, name='null'}=[]}"));

  }

  @Test
  public void test191() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test191"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry1 = interpreterGroup0.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array2 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource3 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource3, resource_array2);
    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource6 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource6, resource_array5);
    boolean b8 = arraylist_resource6.isEmpty();
    boolean b9 = linkedlist_resource3.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource6);
    linkedlist_resource3.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter11 = interpreterGroup0.get((java.lang.Object)linkedlist_resource3);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type12 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter13 = interpreterGroup0.get((java.lang.Object)type12);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code14 = org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR;
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult15 = new org.apache.zeppelin.interpreter.InterpreterResult(code14);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type16 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener17 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput18 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type16, interpreterResultMessageOutputListener17);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type19 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput18.setType(type19);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult22 = new org.apache.zeppelin.interpreter.InterpreterResult(code14, type19, "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}");
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener23 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener24 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput25 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener23, interpreterOutputChangeListener24);
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener27 = interpreterOutput25.createInterpreterResultMessageOutputListener(5);
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener28 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput29 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type19, interpreterResultMessageOutputListener27, interpreterOutputChangeListener28);
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput30 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type12, interpreterResultMessageOutputListener27);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type31 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener32 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput33 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type31, interpreterResultMessageOutputListener32);
    interpreterResultMessageOutput33.flush();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type35 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener36 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput37 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type35, interpreterResultMessageOutputListener36);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type38 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput37.setType(type38);
    interpreterResultMessageOutput37.clear();
    interpreterResultMessageOutput37.close();
    interpreterResultMessageOutput37.close();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup43 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str44 = interpreterGroup43.getId();
    boolean b46 = interpreterGroup43.equals((java.lang.Object)0L);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup47 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool48 = interpreterGroup47.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry50 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup47.setInterpreterHookRegistry(interpreterHookRegistry50);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry52 = interpreterGroup47.getAngularObjectRegistry();
    boolean b54 = interpreterGroup43.remove((java.lang.Object)interpreterGroup47, (java.lang.Object)10.0d);
    boolean b55 = interpreterGroup47.isEmpty();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type56 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener57 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput58 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type56, interpreterResultMessageOutputListener57);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage59 = interpreterResultMessageOutput58.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage60 = interpreterResultMessageOutput58.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener61 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput62 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener61);
    interpreterOutput62.addResourceSearchPath("isolated");
    byte[] byte_array65 = interpreterOutput62.toByteArray();
    interpreterResultMessageOutput58.write(byte_array65);
    boolean b67 = interpreterGroup47.containsKey((java.lang.Object)interpreterResultMessageOutput58);
    byte[] byte_array68 = interpreterResultMessageOutput58.toByteArray();
    interpreterResultMessageOutput37.write(byte_array68);
    interpreterResultMessageOutput33.write(byte_array68, 59683, (int)'#');
    // The following exception was thrown during execution in test generation
    try {
    interpreterResultMessageOutput30.write(byte_array68, 3, 59683);
      org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException");
    } catch (java.lang.ArrayIndexOutOfBoundsException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter11);
    org.junit.Assert.assertTrue("'" + type12 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type12.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter13);
    org.junit.Assert.assertTrue("'" + code14 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR + "'", code14.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR));
    org.junit.Assert.assertTrue("'" + type19 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type19.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutputListener27);
    org.junit.Assert.assertTrue("'" + type38 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type38.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "InterpreterGroup_1497134425437_1081674831"+ "'", str44.equals("InterpreterGroup_1497134425437_1081674831"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistry52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array68);

  }

  @Test
  public void test192() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test192"); }

    org.apache.zeppelin.interpreter.remote.ClientFactory clientFactory2 = new org.apache.zeppelin.interpreter.remote.ClientFactory("", 59683);
    org.apache.zeppelin.interpreter.remote.ClientFactory clientFactory5 = new org.apache.zeppelin.interpreter.remote.ClientFactory("post_exec_dev", (int)(short)1);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client6 = null;
    clientFactory5.passivateObject(pooledobject_client6);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client8 = null;
    clientFactory5.passivateObject(pooledobject_client8);
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client10 = null;
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client11 = clientFactory5.wrap(client10);
    clientFactory2.destroyObject(pooledobject_client11);
    org.apache.zeppelin.interpreter.remote.ClientFactory clientFactory15 = new org.apache.zeppelin.interpreter.remote.ClientFactory("post_exec_dev", (int)(short)1);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client16 = null;
    clientFactory15.passivateObject(pooledobject_client16);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client18 = null;
    clientFactory15.passivateObject(pooledobject_client18);
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client20 = null;
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client21 = clientFactory15.wrap(client20);
    // The following exception was thrown during execution in test generation
    try {
    boolean b22 = clientFactory2.validateObject(pooledobject_client21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(pooledobject_client11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(pooledobject_client21);

  }

  @Test
  public void test193() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test193"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    java.lang.String str36 = authenticationInfo16.getTicket();
    org.apache.zeppelin.user.UserCredentials userCredentials37 = authenticationInfo16.getUserCredentials();
    boolean b38 = authenticationInfo16.isAnonymous();
    org.apache.zeppelin.user.UserCredentials userCredentials39 = authenticationInfo16.getUserCredentials();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "InterpreterGroup_1497134361094_1261121192"+ "'", str36.equals("InterpreterGroup_1497134361094_1261121192"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(userCredentials37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(userCredentials39);

  }

  @Test
  public void test194() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test194"); }

    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener0 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput1 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener0);
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener3 = interpreterOutput1.createInterpreterResultMessageOutputListener((int)(short)1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutputListener3);

  }

  @Test
  public void test195() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test195"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    java.lang.String[] str_array5 = new java.lang.String[] { "zeppelin.interpreter.port", "_GLOBAL_" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    interpreterResultMessageOutput2.setResourceSearchPaths((java.util.List<java.lang.String>)arraylist_str6);
    interpreterResultMessageOutput2.clear();
    interpreterResultMessageOutput2.write((int)'a');
    interpreterResultMessageOutput2.close();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);

  }

  @Test
  public void test196() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test196"); }

    org.apache.zeppelin.resource.Resource resource0 = null;
    org.apache.zeppelin.tabledata.ProxyRowIterator proxyRowIterator1 = new org.apache.zeppelin.tabledata.ProxyRowIterator(resource0);
    proxyRowIterator1.remove();
    proxyRowIterator1.remove();
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.tabledata.Row row4 = proxyRowIterator1.next();
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test197() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test197"); }

    java.nio.ByteBuffer byteBuffer0 = null;
    org.apache.zeppelin.resource.ByteBufferInputStream byteBufferInputStream1 = new org.apache.zeppelin.resource.ByteBufferInputStream(byteBuffer0);
    org.slf4j.Logger logger2 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream3 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger2);
    byte[] byte_array7 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream3.write(byte_array7, (int)'a', 3);
    org.slf4j.Logger logger11 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream12 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger11);
    byte[] byte_array16 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream12.write(byte_array16, (int)'a', 3);
    interpreterOutputStream3.write(byte_array16, (int)(short)10, 10);
    // The following exception was thrown during execution in test generation
    try {
    int i23 = byteBufferInputStream1.read(byte_array16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array16);

  }

  @Test
  public void test198() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test198"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.resource.Resource[] resource_array10 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource11 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource11, resource_array10);
    org.apache.zeppelin.resource.Resource[] resource_array13 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource14 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource14, resource_array13);
    boolean b16 = arraylist_resource14.isEmpty();
    boolean b17 = linkedlist_resource11.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource14);
    org.apache.zeppelin.resource.Resource resource18 = null;
    boolean b19 = linkedlist_resource11.add(resource18);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource20 = linkedlist_resource11.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo21 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i22 = linkedlist_resource11.indexOf((java.lang.Object)authenticationInfo21);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj23 = null;
    org.apache.zeppelin.display.GUI gUI24 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener26 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry27 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener26);
    org.apache.zeppelin.display.AngularObject angularObject32 = angularObjectRegistry27.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool34 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array35 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner36 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner36, interpreterContextRunner_array35);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput38 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController39 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext40 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo21, map_str_obj23, gUI24, angularObjectRegistry27, (org.apache.zeppelin.resource.ResourcePool)localResourcePool34, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner36, interpreterOutput38, remoteWorksController39);
    interpreterGroup0.setAngularObjectRegistry(angularObjectRegistry27);
    java.util.Properties properties42 = interpreterGroup0.getProperty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(properties42);

  }

  @Test
  public void test199() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test199"); }

    org.apache.zeppelin.display.AngularObject<java.io.OutputStream> angularobject_outputStream0 = new org.apache.zeppelin.display.AngularObject<java.io.OutputStream>();
    java.lang.String str1 = angularobject_outputStream0.toString();
    org.apache.zeppelin.display.AngularObjectWatcher angularObjectWatcher2 = null;
    angularobject_outputStream0.addWatcher(angularObjectWatcher2);
    java.lang.Object obj4 = angularobject_outputStream0.get();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}"+ "'", str1.equals("AngularObject{noteId='null', paragraphId='null', object=null, name='null'}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj4);

  }

  @Test
  public void test200() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test200"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource4 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource4, resource_array3);
    org.apache.zeppelin.helium.HeliumType heliumType6 = org.apache.zeppelin.helium.HeliumType.INTERPRETER;
    boolean b7 = linkedlist_resource4.contains((java.lang.Object)heliumType6);
    int i8 = resourceSet0.indexOf((java.lang.Object)linkedlist_resource4);
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.resource.Resource resource9 = resourceSet0.getFirst();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    org.junit.Assert.assertTrue("'" + heliumType6 + "' != '" + org.apache.zeppelin.helium.HeliumType.INTERPRETER + "'", heliumType6.equals(org.apache.zeppelin.helium.HeliumType.INTERPRETER));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == (-1));

  }

  @Test
  public void test201() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test201"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener0 = null;
    org.apache.zeppelin.interpreter.remote.AppendOutputRunner appendOutputRunner1 = new org.apache.zeppelin.interpreter.remote.AppendOutputRunner(remoteInterpreterProcessListener0);
    appendOutputRunner1.appendBuffer("existing_process", "InterpreterGroup_1497134410739_-1534144333", (int)'4', "InterpreterGroup_1497134410739_-1534144333");

  }

  @Test
  public void test202() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test202"); }

    org.apache.zeppelin.display.AngularObject<java.io.OutputStream> angularobject_outputStream0 = new org.apache.zeppelin.display.AngularObject<java.io.OutputStream>();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener2 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput3 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type1, interpreterResultMessageOutputListener2);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type4 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput3.setType(type4);
    angularobject_outputStream0.set((java.io.OutputStream)interpreterResultMessageOutput3);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type7 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener8 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput9 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type7, interpreterResultMessageOutputListener8);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage10 = interpreterResultMessageOutput9.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage11 = interpreterResultMessageOutput9.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup12 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry13 = interpreterGroup12.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array14 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource15 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource15, resource_array14);
    org.apache.zeppelin.resource.Resource[] resource_array17 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource18 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource18, resource_array17);
    boolean b20 = arraylist_resource18.isEmpty();
    boolean b21 = linkedlist_resource15.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource18);
    linkedlist_resource15.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter23 = interpreterGroup12.get((java.lang.Object)linkedlist_resource15);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type24 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter25 = interpreterGroup12.get((java.lang.Object)type24);
    interpreterResultMessageOutput9.setType(type24);
    interpreterResultMessageOutput3.setType(type24);
    org.slf4j.Logger logger28 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream29 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger28);
    byte[] byte_array33 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream29.write(byte_array33, (int)'a', 3);
    interpreterResultMessageOutput3.write(byte_array33, (int)'#', 2);
    interpreterResultMessageOutput3.write((int)'#');
    org.junit.Assert.assertTrue("'" + type4 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type4.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter23);
    org.junit.Assert.assertTrue("'" + type24 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type24.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array33);

  }

  @Test
  public void test203() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test203"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Code code0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array1 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage2 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b3 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage2, interpreterResultMessage_array1);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult4 = new org.apache.zeppelin.interpreter.InterpreterResult(code0, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage2);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code5 = interpreterResult4.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage6 = interpreterResult4.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type7 = org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener8 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput9 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type7, interpreterResultMessageOutputListener8);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage11 = new org.apache.zeppelin.interpreter.InterpreterResultMessage(type7, "[null]");
    java.lang.String str12 = interpreterResultMessage11.getData();
    org.apache.zeppelin.tabledata.InterpreterResultTableData interpreterResultTableData13 = new org.apache.zeppelin.tabledata.InterpreterResultTableData(interpreterResultMessage11);
    interpreterResult4.add(interpreterResultMessage11);
    interpreterResult4.add("InterpreterGroup_1497134412057_-886896671");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage6);
    org.junit.Assert.assertTrue("'" + type7 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR + "'", type7.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "[null]"+ "'", str12.equals("[null]"));

  }

  @Test
  public void test204() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test204"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByNoteId("isolated");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);

  }

  @Test
  public void test205() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test205"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str1 = interpreterGroup0.getId();
    boolean b3 = interpreterGroup0.equals((java.lang.Object)0L);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry7 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup4.setInterpreterHookRegistry(interpreterHookRegistry7);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry9 = interpreterGroup4.getAngularObjectRegistry();
    boolean b11 = interpreterGroup0.remove((java.lang.Object)interpreterGroup4, (java.lang.Object)10.0d);
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener13 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry14 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener13);
    org.apache.zeppelin.resource.Resource[] resource_array16 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource17 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource17, resource_array16);
    org.apache.zeppelin.resource.Resource[] resource_array19 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource20 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource20, resource_array19);
    boolean b22 = arraylist_resource20.isEmpty();
    boolean b23 = linkedlist_resource17.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource20);
    linkedlist_resource17.clear();
    org.apache.zeppelin.display.AngularObject angularObject28 = angularObjectRegistry14.add("_GLOBAL_", (java.lang.Object)linkedlist_resource17, "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "pre_exec", false);
    org.apache.zeppelin.display.AngularObject angularObject32 = angularObjectRegistry14.remove("org.apache.zeppelin.interpreter.InterpreterException: ", "InterpreterGroup_1497134350938_711831855", "post_exec_dev");
    org.apache.zeppelin.display.AngularObject angularObject36 = angularObjectRegistry14.get("InterpreterGroup_1497134350938_711831855", "pre_exec", "zeppelin.interpreter.port");
    interpreterGroup0.setAngularObjectRegistry(angularObjectRegistry14);
    org.apache.zeppelin.resource.ResourceSet resourceSet39 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResourcesExcept("_GLOBAL_");
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener41 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup42 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry43 = interpreterGroup42.getInterpreterHookRegistry();
    java.lang.String str44 = interpreterGroup42.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry45 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener41, interpreterGroup42);
    org.apache.zeppelin.display.AngularObject angularObject50 = remoteAngularObjectRegistry45.remove("org.apache.zeppelin.interpreter.InterpreterException: ", "", "post_exec_dev", true);
    org.apache.zeppelin.display.AngularObject angularObject55 = remoteAngularObjectRegistry45.remove("[null]", "shared", "post_exec_dev", true);
    int i56 = resourceSet39.lastIndexOf((java.lang.Object)"[null]");
    boolean b57 = interpreterGroup0.contains((java.lang.Object)resourceSet39);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code58 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array59 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage60 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b61 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage60, interpreterResultMessage_array59);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult62 = new org.apache.zeppelin.interpreter.InterpreterResult(code58, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage60);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code63 = interpreterResult62.code();
    java.lang.String str64 = interpreterResult62.toString();
    java.lang.String str65 = interpreterResult62.toString();
    int i66 = resourceSet39.lastIndexOf((java.lang.Object)str65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "InterpreterGroup_1497134425803_-166526896"+ "'", str1.equals("InterpreterGroup_1497134425803_-166526896"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistry9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "{}"+ "'", str44.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i56 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + ""+ "'", str64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + ""+ "'", str65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i66 == (-1));

  }

  @Test
  public void test206() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test206"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener0 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener1 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener0, applicationEventListener1);
    remoteInterpreterEventPoller2.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    boolean b8 = interpreterGroup4.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str9 = interpreterGroup4.getId();
    remoteInterpreterEventPoller2.setInterpreterGroup(interpreterGroup4);
    org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage invokeResourceMethodEventMessage11 = null;
    java.lang.Object obj12 = null;
    remoteInterpreterEventPoller2.sendInvokeMethodResult(invokeResourceMethodEventMessage11, obj12);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess14 = null;
    remoteInterpreterEventPoller2.setInterpreterProcess(remoteInterpreterProcess14);
    org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage invokeResourceMethodEventMessage16 = null;
    org.apache.zeppelin.resource.Resource[] resource_array17 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource18 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource18, resource_array17);
    org.apache.zeppelin.resource.Resource[] resource_array20 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource21 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b22 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource21, resource_array20);
    boolean b23 = arraylist_resource21.isEmpty();
    boolean b24 = linkedlist_resource18.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource21);
    org.apache.zeppelin.resource.Resource resource25 = null;
    boolean b26 = linkedlist_resource18.add(resource25);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource27 = linkedlist_resource18.iterator();
    java.lang.Object obj28 = linkedlist_resource18.clone();
    org.apache.zeppelin.resource.Resource resource29 = linkedlist_resource18.getLast();
    remoteInterpreterEventPoller2.sendInvokeMethodResult(invokeResourceMethodEventMessage16, (java.lang.Object)resource29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "InterpreterGroup_1497134425883_-392119256"+ "'", str9.equals("InterpreterGroup_1497134425883_-392119256"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource29);

  }

  @Test
  public void test207() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test207"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    boolean b10 = interpreterGroup0.contains((java.lang.Object)"<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    interpreterGroup0.close("InterpreterGroup_1497134367518_-1467696533");
    java.util.Collection<java.util.List<org.apache.zeppelin.interpreter.Interpreter>> collection_list_interpreter13 = interpreterGroup0.values();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_list_interpreter13);

  }

  @Test
  public void test208() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test208"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet1 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResourcesExcept("org.apache.zeppelin.interpreter.InterpreterException: InterpreterGroup_1497134377064_955397632");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet1);

  }

  @Test
  public void test209() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test209"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    java.lang.String[] str_array25 = new java.lang.String[] { "anonymous", "hi!", "zeppelin.interpreter.port", "InterpreterGroup_1497134350790_986318210", "post_exec_dev", "_GLOBAL_", "existing_process", "existing_process", "zeppelin.interpreter.host", "pre_exec_dev", "InterpreterGroup_1497134350790_986318210", "pre_exec_dev", "pre_exec", "pre_exec_dev", "isolated", "pre_exec", "shared", "_GLOBAL_", "[null]", "existing_process" };
    java.util.ArrayList<java.lang.String> arraylist_str26 = new java.util.ArrayList<java.lang.String>();
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str26, str_array25);
    boolean b28 = resourceSet4.removeAll((java.util.Collection<java.lang.String>)arraylist_str26);
    resourceSet4.clear();
    org.apache.zeppelin.resource.ResourceSet resourceSet31 = resourceSet4.filterByParagraphId("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet33 = resourceSet31.filterByNoteId("InterpreterGroup_1497134410138_-585552671");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet33);

  }

  @Test
  public void test210() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test210"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet4.filterByName("InterpreterGroup_1497134350938_711831855");
    java.lang.Object[] obj_array7 = resourceSet6.toArray();
    org.apache.zeppelin.resource.ResourceSet resourceSet9 = resourceSet6.filterByClassnameRegex("org.apache.zeppelin.interpreter.InterpreterException: ");
    java.util.ListIterator<org.apache.zeppelin.resource.Resource> listiterator_resource10 = resourceSet6.listIterator();
    org.apache.zeppelin.resource.ResourceSet resourceSet11 = new org.apache.zeppelin.resource.ResourceSet((java.util.Collection<org.apache.zeppelin.resource.Resource>)resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(listiterator_resource10);

  }

  @Test
  public void test211() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test211"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener7 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry8 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener7);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry11 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry8, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject13 = heliumAppAngularObjectRegistry11.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput14 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext15 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry11, interpreterOutput14);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener16 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener17 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput18 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener16, interpreterOutputChangeListener17);
    org.apache.zeppelin.helium.ApplicationContext applicationContext19 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry11, interpreterOutput18);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput20 = applicationContext19.out;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener22 = interpreterOutput20.createInterpreterResultMessageOutputListener((int)(byte)100);
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput23 = interpreterOutput20.getCurrentOutput();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type24 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener25 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput26 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type24, interpreterResultMessageOutputListener25);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage27 = interpreterResultMessageOutput26.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage28 = interpreterResultMessageOutput26.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener29 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput30 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener29);
    interpreterOutput30.addResourceSearchPath("isolated");
    byte[] byte_array33 = interpreterOutput30.toByteArray();
    interpreterResultMessageOutput26.write(byte_array33);
    interpreterOutput20.write(byte_array33, 5, (int)(short)0);
    interpreterOutput20.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOutput20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutputListener22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterResultMessageOutput23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array33);

  }

  @Test
  public void test212() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test212"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener1 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener2 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess remoteInterpreterRunningProcess5 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess(59683, remoteInterpreterProcessListener1, applicationEventListener2, "InterpreterGroup_1497134411090_182457301", (int)(byte)1);
    boolean b6 = remoteInterpreterRunningProcess5.isRunning();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test213() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test213"); }

    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener0 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput1 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener0);
    interpreterOutput1.addResourceSearchPath("isolated");
    byte[] byte_array4 = interpreterOutput1.toByteArray();
    interpreterOutput1.write((int)(byte)1);
    interpreterOutput1.flush();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array4);

  }

  @Test
  public void test214() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test214"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient remoteInterpreterEventClient0 = null;
    org.apache.zeppelin.interpreter.remote.RemoteEventClient remoteEventClient1 = new org.apache.zeppelin.interpreter.remote.RemoteEventClient(remoteInterpreterEventClient0);
    java.util.Map<java.lang.String,java.lang.String> map_str_str4 = null;
    // The following exception was thrown during execution in test generation
    try {
    remoteEventClient1.onParaInfosReceived("InterpreterGroup_1497134410092_-1974466412", "InterpreterGroup_1497134410931_1661555730", map_str_str4);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test215() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test215"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    boolean b11 = linkedlist_resource1.contains((java.lang.Object)(-1));
    java.lang.Object obj12 = linkedlist_resource1.clone();
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array13 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter14 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter14, interpreter_array13);
    boolean b16 = linkedlist_resource1.removeAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter14);
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory18 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService21 = executorFactory18.createOrGet("scoped", 2);
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory22 = org.apache.zeppelin.scheduler.SchedulerFactory.singleton();
    org.apache.zeppelin.scheduler.ParallelScheduler parallelScheduler24 = new org.apache.zeppelin.scheduler.ParallelScheduler("post_exec_dev", executorService21, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory22, (int)(byte)10);
    parallelScheduler24.setMaxConcurrency(1);
    java.util.Collection<org.apache.zeppelin.scheduler.Job> collection_job27 = parallelScheduler24.getJobsWaiting();
    boolean b28 = linkedlist_resource1.retainAll(collection_job27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(schedulerFactory22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_job27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);

  }

  @Test
  public void test216() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test216"); }

    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource remoteZeppelinServerResource0 = new org.apache.zeppelin.interpreter.RemoteZeppelinServerResource();
    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource remoteZeppelinServerResource1 = new org.apache.zeppelin.interpreter.RemoteZeppelinServerResource();
    java.lang.String str2 = remoteZeppelinServerResource1.getOwnerKey();
    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type type3 = org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS;
    remoteZeppelinServerResource1.setResourceType(type3);
    remoteZeppelinServerResource0.setResourceType(type3);
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener13 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry14 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener13);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry17 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry14, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject19 = heliumAppAngularObjectRegistry17.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput20 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext21 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry17, interpreterOutput20);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener22 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener23 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput24 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener22, interpreterOutputChangeListener23);
    org.apache.zeppelin.helium.ApplicationContext applicationContext25 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry17, interpreterOutput24);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry26 = applicationContext25.getAngularObjectRegistry();
    remoteZeppelinServerResource0.setData((java.lang.Object)heliumAppAngularObjectRegistry26);
    java.lang.String str28 = remoteZeppelinServerResource0.getOwnerKey();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str2);
    org.junit.Assert.assertTrue("'" + type3 + "' != '" + org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS + "'", type3.equals(org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(heliumAppAngularObjectRegistry26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str28);

  }

  @Test
  public void test217() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test217"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Code code0 = org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR;
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult1 = new org.apache.zeppelin.interpreter.InterpreterResult(code0);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type2 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener3 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput4 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type2, interpreterResultMessageOutputListener3);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type5 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput4.setType(type5);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult8 = new org.apache.zeppelin.interpreter.InterpreterResult(code0, type5, "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}");
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener9 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener10 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput11 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener9, interpreterOutputChangeListener10);
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener13 = interpreterOutput11.createInterpreterResultMessageOutputListener(5);
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener14 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput15 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type5, interpreterResultMessageOutputListener13, interpreterOutputChangeListener14);
    java.net.URL uRL16 = null;
    interpreterResultMessageOutput15.write(uRL16);
    org.slf4j.Logger logger18 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream19 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger18);
    byte[] byte_array23 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream19.write(byte_array23, (int)'a', 3);
    org.slf4j.Logger logger27 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream28 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger27);
    byte[] byte_array32 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream28.write(byte_array32, (int)'a', 3);
    interpreterOutputStream19.write(byte_array32, (int)(short)10, 10);
    interpreterResultMessageOutput15.write(byte_array32);
    org.junit.Assert.assertTrue("'" + code0 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR + "'", code0.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR));
    org.junit.Assert.assertTrue("'" + type5 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type5.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutputListener13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array32);

  }

  @Test
  public void test218() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test218"); }

    org.apache.zeppelin.dep.Repository repository1 = new org.apache.zeppelin.dep.Repository("InterpreterGroup_1497134385808_1965526612");

  }

  @Test
  public void test219() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test219"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet5 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet7 = resourceSet5.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet9 = resourceSet7.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet11 = resourceSet9.filterByName("InterpreterGroup_1497134350938_711831855");
    boolean b12 = resourceSet2.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)resourceSet11);
    org.apache.zeppelin.resource.ResourceSet resourceSet14 = resourceSet11.filterByClassnameRegex("[null]");
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.resource.Resource resource15 = resourceSet11.remove();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet14);

  }

  @Test
  public void test220() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test220"); }

    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption1 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption2 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption1);
    boolean b3 = interpreterOption2.perNoteShared();
    java.lang.String str4 = interpreterOption2.getHost();
    boolean b5 = interpreterOption2.perNoteIsolated();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);

  }

  @Test
  public void test221() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test221"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    interpreterOption6.setPerNote("InterpreterGroup_1497134376959_456934766");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test222() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test222"); }

    org.apache.zeppelin.tabledata.TableDataException tableDataException1 = new org.apache.zeppelin.tabledata.TableDataException("InterpreterGroup_1497134419879_18384985");

  }

  @Test
  public void test223() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test223"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Code code0 = org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE;
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet4.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.interpreter.InterpreterResult.Code code7 = null;
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult8 = new org.apache.zeppelin.interpreter.InterpreterResult(code7);
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage9 = interpreterResult8.message();
    boolean b10 = resourceSet4.removeAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)list_interpreterResultMessage9);
    org.apache.zeppelin.resource.Resource[] resource_array12 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource13 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b14 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource13, resource_array12);
    org.apache.zeppelin.resource.Resource[] resource_array15 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource16 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource16, resource_array15);
    boolean b18 = arraylist_resource16.isEmpty();
    boolean b19 = linkedlist_resource13.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource16);
    org.apache.zeppelin.display.ui.OptionInput.ParamOption paramOption20 = null;
    org.apache.zeppelin.display.ui.OptionInput.ParamOption[] paramOption_array21 = new org.apache.zeppelin.display.ui.OptionInput.ParamOption[] { paramOption20 };
    org.apache.zeppelin.display.ui.Select select22 = org.apache.zeppelin.display.Input.select("post_exec_dev", (java.lang.Object)linkedlist_resource13, paramOption_array21);
    org.apache.zeppelin.display.ui.Select select23 = new org.apache.zeppelin.display.ui.Select("post_exec_dev", (java.lang.Object)list_interpreterResultMessage9, paramOption_array21);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult24 = new org.apache.zeppelin.interpreter.InterpreterResult(code0, list_interpreterResultMessage9);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type25 = org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener26 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput27 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type25, interpreterResultMessageOutputListener26);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage29 = new org.apache.zeppelin.interpreter.InterpreterResultMessage(type25, "[null]");
    java.lang.String str30 = interpreterResultMessage29.getData();
    org.apache.zeppelin.tabledata.InterpreterResultTableData interpreterResultTableData31 = new org.apache.zeppelin.tabledata.InterpreterResultTableData(interpreterResultMessage29);
    interpreterResult24.add(interpreterResultMessage29);
    org.junit.Assert.assertTrue("'" + code0 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE + "'", code0.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(paramOption_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(select22);
    org.junit.Assert.assertTrue("'" + type25 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR + "'", type25.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "[null]"+ "'", str30.equals("[null]"));

  }

  @Test
  public void test224() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test224"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory1 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService4 = executorFactory1.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory5 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.Scheduler scheduler7 = schedulerFactory5.createOrGetFIFOScheduler("InterpreterGroup_1497134361189_-653890590");
    org.apache.zeppelin.scheduler.FIFOScheduler fIFOScheduler8 = new org.apache.zeppelin.scheduler.FIFOScheduler("hi!", executorService4, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory5);
    org.apache.zeppelin.scheduler.Scheduler scheduler10 = schedulerFactory5.removeScheduler("InterpreterGroup_1497134410098_-512670828");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(scheduler10);

  }

  @Test
  public void test225() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test225"); }

    org.apache.zeppelin.helium.HeliumType heliumType0 = null;
    java.lang.String[][] str_array_array5 = new java.lang.String[][] {  };
    org.apache.zeppelin.helium.HeliumPackage heliumPackage8 = new org.apache.zeppelin.helium.HeliumPackage(heliumType0, "", "", "hi!", "hi!", str_array_array5, "post_exec_dev", "post_exec_dev");
    java.lang.String str9 = heliumPackage8.getArtifact();
    java.lang.String str10 = heliumPackage8.getPublishedDate();
    java.lang.String str11 = heliumPackage8.getName();
    java.lang.String str12 = heliumPackage8.getLicense();
    java.lang.String str13 = heliumPackage8.getClassName();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!"+ "'", str9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + ""+ "'", str11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "post_exec_dev"+ "'", str12.equals("post_exec_dev"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!"+ "'", str13.equals("hi!"));

  }

  @Test
  public void test226() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test226"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    java.lang.String[] str_array25 = new java.lang.String[] { "anonymous", "hi!", "zeppelin.interpreter.port", "InterpreterGroup_1497134350790_986318210", "post_exec_dev", "_GLOBAL_", "existing_process", "existing_process", "zeppelin.interpreter.host", "pre_exec_dev", "InterpreterGroup_1497134350790_986318210", "pre_exec_dev", "pre_exec", "pre_exec_dev", "isolated", "pre_exec", "shared", "_GLOBAL_", "[null]", "existing_process" };
    java.util.ArrayList<java.lang.String> arraylist_str26 = new java.util.ArrayList<java.lang.String>();
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str26, str_array25);
    boolean b28 = resourceSet4.removeAll((java.util.Collection<java.lang.String>)arraylist_str26);
    org.apache.zeppelin.completer.StringsCompleter stringsCompleter29 = new org.apache.zeppelin.completer.StringsCompleter((java.util.Collection<java.lang.String>)arraylist_str26);
    java.util.Collection<java.lang.String> collection_str30 = stringsCompleter29.getStrings();
    org.apache.zeppelin.resource.ResourceSet resourceSet33 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet35 = resourceSet33.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet37 = resourceSet35.filterByClassnameRegex("pre_exec");
    java.lang.String[] str_array58 = new java.lang.String[] { "anonymous", "hi!", "zeppelin.interpreter.port", "InterpreterGroup_1497134350790_986318210", "post_exec_dev", "_GLOBAL_", "existing_process", "existing_process", "zeppelin.interpreter.host", "pre_exec_dev", "InterpreterGroup_1497134350790_986318210", "pre_exec_dev", "pre_exec", "pre_exec_dev", "isolated", "pre_exec", "shared", "_GLOBAL_", "[null]", "existing_process" };
    java.util.ArrayList<java.lang.String> arraylist_str59 = new java.util.ArrayList<java.lang.String>();
    boolean b60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str59, str_array58);
    boolean b61 = resourceSet37.removeAll((java.util.Collection<java.lang.String>)arraylist_str59);
    org.apache.zeppelin.completer.StringsCompleter stringsCompleter62 = new org.apache.zeppelin.completer.StringsCompleter((java.util.Collection<java.lang.String>)arraylist_str59);
    java.lang.CharSequence[] charSequence_array66 = new java.lang.CharSequence[] { "InterpreterGroup_1497134350790_986318210" };
    java.util.ArrayList<java.lang.CharSequence> arraylist_charSequence67 = new java.util.ArrayList<java.lang.CharSequence>();
    boolean b68 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>)arraylist_charSequence67, charSequence_array66);
    int i69 = stringsCompleter62.complete("", (int)(short)1, (java.util.List<java.lang.CharSequence>)arraylist_charSequence67);
    int i70 = stringsCompleter29.complete("InterpreterGroup_1497134393646_-2053954492", 10, (java.util.List<java.lang.CharSequence>)arraylist_charSequence67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(charSequence_array66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i69 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i70 == 0);

  }

  @Test
  public void test227() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test227"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet4.filterByName("InterpreterGroup_1497134350938_711831855");
    java.util.Collection<org.apache.zeppelin.resource.Resource> collection_resource7 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b8 = resourceSet6.addAll(collection_resource7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);

  }

  @Test
  public void test228() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test228"); }

    org.apache.zeppelin.display.ui.TextBox textBox2 = org.apache.zeppelin.display.Input.textbox("InterpreterGroup_1497134425803_-166526896", "org.apache.zeppelin.interpreter.InterpreterException: ");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(textBox2);

  }

  @Test
  public void test229() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test229"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener1 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener2 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess remoteInterpreterRunningProcess5 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess(4, remoteInterpreterProcessListener1, applicationEventListener2, "InterpreterGroup_1497134420494_1077107902", 4);

  }

  @Test
  public void test230() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test230"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient remoteInterpreterEventClient0 = null;
    org.apache.zeppelin.interpreter.remote.RemoteEventClient remoteEventClient1 = new org.apache.zeppelin.interpreter.remote.RemoteEventClient(remoteInterpreterEventClient0);
    java.util.Map<java.lang.String,java.lang.String> map_str_str4 = null;
    // The following exception was thrown during execution in test generation
    try {
    remoteEventClient1.onParaInfosReceived("", "InterpreterGroup_1497134410739_-1534144333", map_str_str4);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test231() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test231"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener1);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry5 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry2, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject7 = heliumAppAngularObjectRegistry5.remove("InterpreterGroup_1497134412057_-886896671");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject7);

  }

  @Test
  public void test232() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test232"); }

    java.nio.ByteBuffer byteBuffer0 = null;
    org.apache.zeppelin.resource.ByteBufferInputStream byteBufferInputStream1 = new org.apache.zeppelin.resource.ByteBufferInputStream(byteBuffer0);
    int i2 = byteBufferInputStream1.available();
    boolean b3 = byteBufferInputStream1.markSupported();
    // The following exception was thrown during execution in test generation
    try {
    byteBufferInputStream1.reset();
      org.junit.Assert.fail("Expected exception of type java.io.IOException");
    } catch (java.io.IOException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);

  }

  @Test
  public void test233() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test233"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource10 = linkedlist_resource1.iterator();
    java.lang.String str11 = linkedlist_resource1.toString();
    java.lang.Object[] obj_array12 = linkedlist_resource1.toArray();
    org.apache.zeppelin.resource.Resource resource13 = linkedlist_resource1.pollFirst();
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.resource.Resource resource14 = linkedlist_resource1.remove();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[null]"+ "'", str11.equals("[null]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource13);

  }

  @Test
  public void test234() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test234"); }

    org.apache.zeppelin.user.UsernamePassword usernamePassword2 = new org.apache.zeppelin.user.UsernamePassword("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    usernamePassword2.setPassword("post_exec_dev");
    usernamePassword2.setUsername("existing_process");
    java.lang.String str7 = usernamePassword2.getUsername();
    java.lang.String str8 = usernamePassword2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "existing_process"+ "'", str7.equals("existing_process"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "UsernamePassword{username='existing_process', password='post_exec_dev'}"+ "'", str8.equals("UsernamePassword{username='existing_process', password='post_exec_dev'}"));

  }

  @Test
  public void test235() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test235"); }

    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo0 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    authenticationInfo0.setUser("_GLOBAL_");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo0);

  }

  @Test
  public void test236() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test236"); }

    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption3 = new org.apache.zeppelin.interpreter.InterpreterOption(true, "InterpreterGroup_1497134411157_987936470", "[]");

  }

  @Test
  public void test237() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test237"); }

    org.apache.zeppelin.dep.TransferListener transferListener0 = new org.apache.zeppelin.dep.TransferListener();
    org.sonatype.aether.transfer.TransferEvent transferEvent1 = null;
    transferListener0.transferStarted(transferEvent1);
    org.sonatype.aether.transfer.TransferEvent transferEvent3 = null;
    transferListener0.transferStarted(transferEvent3);
    org.sonatype.aether.transfer.TransferEvent transferEvent5 = null;
    // The following exception was thrown during execution in test generation
    try {
    transferListener0.transferProgressed(transferEvent5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test238() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test238"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet4.filterByName("InterpreterGroup_1497134350938_711831855");
    java.lang.Object[] obj_array7 = resourceSet6.toArray();
    org.apache.zeppelin.resource.ResourceSet resourceSet9 = resourceSet6.filterByClassnameRegex("org.apache.zeppelin.interpreter.InterpreterException: ");
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory10 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService12 = executorFactory10.createOrGet("hi!");
    java.util.concurrent.ExecutorService executorService14 = executorFactory10.createOrGet("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    executorFactory10.shutdown("InterpreterGroup_1497134361189_-653890590");
    java.util.concurrent.ExecutorService executorService19 = executorFactory10.createOrGet("org.apache.zeppelin.tabledata.TableDataException: <strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", 102400);
    int i20 = resourceSet9.indexOf((java.lang.Object)executorFactory10);
    boolean b21 = resourceSet9.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);

  }

  @Test
  public void test239() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test239"); }

    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource4 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource4, resource_array3);
    org.apache.zeppelin.resource.Resource[] resource_array6 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource7 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource7, resource_array6);
    boolean b9 = arraylist_resource7.isEmpty();
    boolean b10 = linkedlist_resource4.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource7);
    org.apache.zeppelin.display.ui.OptionInput.ParamOption paramOption11 = null;
    org.apache.zeppelin.display.ui.OptionInput.ParamOption[] paramOption_array12 = new org.apache.zeppelin.display.ui.OptionInput.ParamOption[] { paramOption11 };
    org.apache.zeppelin.display.ui.Select select13 = org.apache.zeppelin.display.Input.select("post_exec_dev", (java.lang.Object)linkedlist_resource4, paramOption_array12);
    org.apache.zeppelin.display.ui.Select select14 = new org.apache.zeppelin.display.ui.Select("zeppelin.interpreter.port", (java.lang.Object)(short)0, paramOption_array12);
    boolean b15 = select14.isHidden();
    select14.setArgument("InterpreterGroup_1497134377883_708078564");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(paramOption_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(select13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test240() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test240"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry36 = interpreterContext35.getAngularObjectRegistry();
    java.lang.String str37 = interpreterContext35.getParagraphTitle();
    org.apache.zeppelin.display.GUI gUI38 = interpreterContext35.getGui();
    java.lang.String str39 = interpreterContext35.getParagraphId();
    org.apache.zeppelin.interpreter.remote.RemoteEventClientWrapper remoteEventClientWrapper40 = interpreterContext35.getClient();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObjectRegistry36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "pre_exec_dev"+ "'", str37.equals("pre_exec_dev"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(gUI38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "InterpreterGroup_1497134353138_86992792"+ "'", str39.equals("InterpreterGroup_1497134353138_86992792"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(remoteEventClientWrapper40);

  }

  @Test
  public void test241() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test241"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory1 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService4 = executorFactory1.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess6 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory7 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler9 = new org.apache.zeppelin.scheduler.RemoteScheduler("zeppelin.interpreter.host", executorService4, "pre_exec_dev", remoteInterpreterProcess6, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory7, (int)(short)1);
    java.util.Collection<org.apache.zeppelin.scheduler.Job> collection_job10 = remoteScheduler9.getJobsRunning();
    java.util.Collection<org.apache.zeppelin.scheduler.Job> collection_job11 = remoteScheduler9.getJobsRunning();
    org.apache.zeppelin.scheduler.Job job12 = null;
    // The following exception was thrown during execution in test generation
    try {
    remoteScheduler9.submit(job12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_job10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_job11);

  }

  @Test
  public void test242() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test242"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.interpreter.InterpreterContext.set(interpreterContext35);
    java.lang.String str37 = interpreterContext35.getReplName();
    org.apache.zeppelin.resource.ResourcePool resourcePool38 = interpreterContext35.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput39 = interpreterContext35.out();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner> list_interpreterContextRunner40 = interpreterContext35.getRunners();
    java.lang.String str41 = interpreterContext35.getParagraphText();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str37.equals("org.apache.zeppelin.interpreter.InterpreterException: "));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourcePool38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterOutput39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterContextRunner40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "[null]"+ "'", str41.equals("[null]"));

  }

  @Test
  public void test243() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test243"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet4.filterByName("InterpreterGroup_1497134350938_711831855");
    org.apache.zeppelin.resource.ResourceSet resourceSet8 = resourceSet6.filterByParagraphId("InterpreterGroup_1497134369176_-1878842789");
    org.apache.zeppelin.resource.Resource resource9 = null;
    boolean b10 = resourceSet8.offerLast(resource9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test244() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test244"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterContextRunner remoteInterpreterContextRunner2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterContextRunner("InterpreterGroup_1497134387851_-94093795", "InterpreterGroup_1497134410931_1661555730");

  }

  @Test
  public void test245() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test245"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterContextRunner remoteInterpreterContextRunner2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterContextRunner("InterpreterGroup_1497134353138_86992792", "zeppelin.interpreter.host");
    java.lang.String str3 = remoteInterpreterContextRunner2.getNoteId();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "InterpreterGroup_1497134353138_86992792"+ "'", str3.equals("InterpreterGroup_1497134353138_86992792"));

  }

  @Test
  public void test246() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test246"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Code code0 = null;
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult1 = new org.apache.zeppelin.interpreter.InterpreterResult(code0);
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage2 = interpreterResult1.message();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage3 = interpreterResult1.message();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage4 = interpreterResult1.message();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage4);

  }

  @Test
  public void test247() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test247"); }

    org.apache.zeppelin.dep.RepositoryListener repositoryListener0 = new org.apache.zeppelin.dep.RepositoryListener();
    org.sonatype.aether.RepositoryEvent repositoryEvent1 = null;
    repositoryListener0.metadataDownloading(repositoryEvent1);
    org.sonatype.aether.RepositoryEvent repositoryEvent3 = null;
    repositoryListener0.metadataDownloaded(repositoryEvent3);
    org.sonatype.aether.RepositoryEvent repositoryEvent5 = null;
    // The following exception was thrown during execution in test generation
    try {
    repositoryListener0.artifactDownloaded(repositoryEvent5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test248() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test248"); }

    org.slf4j.Logger logger0 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream1 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger0);
    byte[] byte_array5 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream1.write(byte_array5, (int)'a', 3);
    int i9 = interpreterOutputStream1.getMessageLevel();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type10 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener11 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput12 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type10, interpreterResultMessageOutputListener11);
    interpreterResultMessageOutput12.flush();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type14 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener15 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput16 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type14, interpreterResultMessageOutputListener15);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type17 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput16.setType(type17);
    interpreterResultMessageOutput16.clear();
    interpreterResultMessageOutput16.close();
    interpreterResultMessageOutput16.close();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup22 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str23 = interpreterGroup22.getId();
    boolean b25 = interpreterGroup22.equals((java.lang.Object)0L);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup26 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool27 = interpreterGroup26.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry29 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup26.setInterpreterHookRegistry(interpreterHookRegistry29);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry31 = interpreterGroup26.getAngularObjectRegistry();
    boolean b33 = interpreterGroup22.remove((java.lang.Object)interpreterGroup26, (java.lang.Object)10.0d);
    boolean b34 = interpreterGroup26.isEmpty();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type35 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener36 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput37 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type35, interpreterResultMessageOutputListener36);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage38 = interpreterResultMessageOutput37.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage39 = interpreterResultMessageOutput37.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener40 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput41 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener40);
    interpreterOutput41.addResourceSearchPath("isolated");
    byte[] byte_array44 = interpreterOutput41.toByteArray();
    interpreterResultMessageOutput37.write(byte_array44);
    boolean b46 = interpreterGroup26.containsKey((java.lang.Object)interpreterResultMessageOutput37);
    byte[] byte_array47 = interpreterResultMessageOutput37.toByteArray();
    interpreterResultMessageOutput16.write(byte_array47);
    interpreterResultMessageOutput12.write(byte_array47, 59683, (int)'#');
    interpreterOutputStream1.write(byte_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 999);
    org.junit.Assert.assertTrue("'" + type17 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type17.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "InterpreterGroup_1497134427842_1607762254"+ "'", str23.equals("InterpreterGroup_1497134427842_1607762254"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistry31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array47);

  }

  @Test
  public void test249() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test249"); }

    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource remoteZeppelinServerResource0 = new org.apache.zeppelin.interpreter.RemoteZeppelinServerResource();
    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource remoteZeppelinServerResource1 = new org.apache.zeppelin.interpreter.RemoteZeppelinServerResource();
    java.lang.String str2 = remoteZeppelinServerResource1.getOwnerKey();
    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type type3 = org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS;
    remoteZeppelinServerResource1.setResourceType(type3);
    remoteZeppelinServerResource0.setResourceType(type3);
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener13 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry14 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener13);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry17 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry14, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject19 = heliumAppAngularObjectRegistry17.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput20 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext21 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry17, interpreterOutput20);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener22 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener23 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput24 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener22, interpreterOutputChangeListener23);
    org.apache.zeppelin.helium.ApplicationContext applicationContext25 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry17, interpreterOutput24);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry26 = applicationContext25.getAngularObjectRegistry();
    remoteZeppelinServerResource0.setData((java.lang.Object)heliumAppAngularObjectRegistry26);
    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource remoteZeppelinServerResource28 = new org.apache.zeppelin.interpreter.RemoteZeppelinServerResource();
    java.lang.String str29 = remoteZeppelinServerResource28.getOwnerKey();
    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type type30 = org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS;
    remoteZeppelinServerResource28.setResourceType(type30);
    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource remoteZeppelinServerResource32 = new org.apache.zeppelin.interpreter.RemoteZeppelinServerResource();
    java.lang.String str33 = remoteZeppelinServerResource32.getOwnerKey();
    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type type34 = org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS;
    remoteZeppelinServerResource32.setResourceType(type34);
    remoteZeppelinServerResource28.setResourceType(type34);
    remoteZeppelinServerResource0.setResourceType(type34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str2);
    org.junit.Assert.assertTrue("'" + type3 + "' != '" + org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS + "'", type3.equals(org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(heliumAppAngularObjectRegistry26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str29);
    org.junit.Assert.assertTrue("'" + type30 + "' != '" + org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS + "'", type30.equals(org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str33);
    org.junit.Assert.assertTrue("'" + type34 + "' != '" + org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS + "'", type34.equals(org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS));

  }

  @Test
  public void test250() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test250"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory0 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService2 = executorFactory0.createOrGet("hi!");
    java.util.concurrent.ExecutorService executorService4 = executorFactory0.createOrGet("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    executorFactory0.shutdown("InterpreterGroup_1497134361189_-653890590");
    java.util.concurrent.ExecutorService executorService9 = executorFactory0.createOrGet("org.apache.zeppelin.tabledata.TableDataException: <strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", 102400);
    // The following exception was thrown during execution in test generation
    try {
    executorFactory0.shutdownAll();
      org.junit.Assert.fail("Expected exception of type java.util.ConcurrentModificationException");
    } catch (java.util.ConcurrentModificationException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService9);

  }

  @Test
  public void test251() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test251"); }

    org.apache.zeppelin.helium.HeliumType heliumType0 = null;
    java.lang.String[][] str_array_array5 = new java.lang.String[][] {  };
    org.apache.zeppelin.helium.HeliumPackage heliumPackage8 = new org.apache.zeppelin.helium.HeliumPackage(heliumType0, "", "", "hi!", "hi!", str_array_array5, "post_exec_dev", "post_exec_dev");
    java.lang.String str9 = heliumPackage8.getDescription();
    java.lang.String[][] str_array_array10 = heliumPackage8.getResources();
    java.lang.String[][] str_array_array11 = heliumPackage8.getResources();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + ""+ "'", str9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array_array11);

  }

  @Test
  public void test252() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test252"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.interpreter.InterpreterContext.set(interpreterContext35);
    java.lang.String str37 = interpreterContext35.getParagraphId();
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry38 = interpreterContext35.getAngularObjectRegistry();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "InterpreterGroup_1497134353138_86992792"+ "'", str37.equals("InterpreterGroup_1497134353138_86992792"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObjectRegistry38);

  }

  @Test
  public void test253() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test253"); }

    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption1 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption2 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption1);
    interpreterOption1.setPort(10);
    boolean b5 = interpreterOption1.perUserShared();
    boolean b6 = interpreterOption1.perUserScoped();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test254() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test254"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup9 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool10 = interpreterGroup9.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry12 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup9.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.shutdown();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type16 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener17 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput18 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type16, interpreterResultMessageOutputListener17);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage19 = interpreterResultMessageOutput18.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage20 = interpreterResultMessageOutput18.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener21 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput22 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener21);
    interpreterOutput22.addResourceSearchPath("isolated");
    byte[] byte_array25 = interpreterOutput22.toByteArray();
    interpreterResultMessageOutput18.write(byte_array25);
    boolean b27 = interpreterGroup0.contains((java.lang.Object)interpreterResultMessageOutput18);
    interpreterGroup0.clear();
    java.util.Properties properties29 = interpreterGroup0.getProperty();
    java.util.Map<java.lang.String,java.lang.String> map_str_str35 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener37 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener38 = null;
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.interpreter.remote.RemoteInterpreter remoteInterpreter41 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter(properties29, "InterpreterGroup_1497134384512_-890338748", "InterpreterGroup_1497134421662_940144173", "InterpreterGroup_1497134427842_1607762254", "zeppelin.interpreter.host", "InterpreterGroup_1497134411090_182457301", map_str_str35, 0, remoteInterpreterProcessListener37, applicationEventListener38, "InterpreterGroup_1497134410739_-1534144333", (java.lang.Boolean)true);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(properties29);

  }

  @Test
  public void test255() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test255"); }

    org.apache.zeppelin.interpreter.remote.AppendOutputBuffer appendOutputBuffer4 = new org.apache.zeppelin.interpreter.remote.AppendOutputBuffer("InterpreterGroup_1497134410098_-512670828", "post_exec_dev", (-1), "InterpreterGroup_1497134421663_244465960");

  }

  @Test
  public void test256() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test256"); }

    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage2 = org.apache.zeppelin.interpreter.ResultMessages.getExceedsLimitRowsMessage((int)(byte)-1, "InterpreterGroup_1497134405350_1754624058");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage2);

  }

  @Test
  public void test257() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test257"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory1 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService4 = executorFactory1.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess6 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory7 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler9 = new org.apache.zeppelin.scheduler.RemoteScheduler("zeppelin.interpreter.host", executorService4, "pre_exec_dev", remoteInterpreterProcess6, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory7, (int)(short)1);
    remoteScheduler9.stop();
    java.util.Collection<org.apache.zeppelin.scheduler.Job> collection_job11 = remoteScheduler9.getJobsRunning();
    org.apache.zeppelin.scheduler.Job job13 = remoteScheduler9.removeFromWaitingQueue("AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}");
    remoteScheduler9.setMaxConcurrency((int)(byte)-1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_job11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(job13);

  }

  @Test
  public void test258() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test258"); }

    org.apache.zeppelin.interpreter.Constants constants0 = new org.apache.zeppelin.interpreter.Constants();

  }

  @Test
  public void test259() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test259"); }

    org.apache.zeppelin.tabledata.TableDataException tableDataException1 = new org.apache.zeppelin.tabledata.TableDataException("InterpreterGroup_1497134425883_-392119256");

  }

  @Test
  public void test260() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test260"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage3 = interpreterResultMessageOutput2.toInterpreterResultMessage();
    org.apache.zeppelin.tabledata.InterpreterResultTableData interpreterResultTableData4 = new org.apache.zeppelin.tabledata.InterpreterResultTableData(interpreterResultMessage3);
    java.lang.String str5 = interpreterResultMessage3.getData();
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str6 = interpreterResultMessage3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + ""+ "'", str5.equals(""));

  }

  @Test
  public void test261() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test261"); }

    org.slf4j.Logger logger0 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream1 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger0);
    byte[] byte_array5 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream1.write(byte_array5, (int)'a', 3);
    interpreterOutputStream1.ignoreLeadingNewLinesFromScalaReporter();
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput10 = interpreterOutputStream1.getInterpreterOutput();
    interpreterOutputStream1.write((int)(short)1);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput13 = interpreterOutputStream1.getInterpreterOutput();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterOutput10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterOutput13);

  }

  @Test
  public void test262() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test262"); }

    org.apache.zeppelin.dep.DependencyContext dependencyContext1 = new org.apache.zeppelin.dep.DependencyContext("InterpreterGroup_1497134404697_-764373822");

  }

  @Test
  public void test263() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test263"); }

    org.apache.zeppelin.dep.DependencyResolver dependencyResolver1 = new org.apache.zeppelin.dep.DependencyResolver("%null ");

  }

  @Test
  public void test264() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test264"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet5 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet7 = resourceSet5.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet9 = resourceSet7.filterByClassnameRegex("pre_exec");
    java.lang.String[] str_array30 = new java.lang.String[] { "anonymous", "hi!", "zeppelin.interpreter.port", "InterpreterGroup_1497134350790_986318210", "post_exec_dev", "_GLOBAL_", "existing_process", "existing_process", "zeppelin.interpreter.host", "pre_exec_dev", "InterpreterGroup_1497134350790_986318210", "pre_exec_dev", "pre_exec", "pre_exec_dev", "isolated", "pre_exec", "shared", "_GLOBAL_", "[null]", "existing_process" };
    java.util.ArrayList<java.lang.String> arraylist_str31 = new java.util.ArrayList<java.lang.String>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str31, str_array30);
    boolean b33 = resourceSet9.removeAll((java.util.Collection<java.lang.String>)arraylist_str31);
    resourceSet9.clear();
    org.apache.zeppelin.resource.ResourceSet resourceSet36 = resourceSet9.filterByParagraphId("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    int i37 = resourceSet2.indexOf((java.lang.Object)resourceSet9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == (-1));

  }

  @Test
  public void test265() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test265"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    java.lang.Object obj38 = gUI19.textbox("", "zeppelin.interpreter.host");
    java.util.LinkedHashMap<java.lang.String,org.apache.zeppelin.display.Input> linkedhashmap_str_input39 = null;
    gUI19.setForms(linkedhashmap_str_input39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj38 + "' != '" + "zeppelin.interpreter.host"+ "'", obj38.equals("zeppelin.interpreter.host"));

  }

  @Test
  public void test266() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test266"); }

    org.apache.zeppelin.helium.HeliumType heliumType0 = org.apache.zeppelin.helium.HeliumType.APPLICATION;
    boolean b1 = org.apache.zeppelin.helium.HeliumPackage.isBundleType(heliumType0);
    org.junit.Assert.assertTrue("'" + heliumType0 + "' != '" + org.apache.zeppelin.helium.HeliumType.APPLICATION + "'", heliumType0.equals(org.apache.zeppelin.helium.HeliumType.APPLICATION));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == false);

  }

  @Test
  public void test267() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test267"); }

    org.apache.zeppelin.dep.DependencyContext dependencyContext1 = new org.apache.zeppelin.dep.DependencyContext("pre_exec");
    org.apache.zeppelin.dep.Repository repository3 = dependencyContext1.addRepo("InterpreterGroup_1497134387007_1195822394");
    boolean b4 = repository3.isSnapshot();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);

  }

  @Test
  public void test268() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test268"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str1 = interpreterGroup0.getId();
    boolean b3 = interpreterGroup0.equals((java.lang.Object)0L);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry7 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup4.setInterpreterHookRegistry(interpreterHookRegistry7);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry9 = interpreterGroup4.getAngularObjectRegistry();
    boolean b11 = interpreterGroup0.remove((java.lang.Object)interpreterGroup4, (java.lang.Object)10.0d);
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener13 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry14 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener13);
    org.apache.zeppelin.resource.Resource[] resource_array16 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource17 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource17, resource_array16);
    org.apache.zeppelin.resource.Resource[] resource_array19 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource20 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource20, resource_array19);
    boolean b22 = arraylist_resource20.isEmpty();
    boolean b23 = linkedlist_resource17.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource20);
    linkedlist_resource17.clear();
    org.apache.zeppelin.display.AngularObject angularObject28 = angularObjectRegistry14.add("_GLOBAL_", (java.lang.Object)linkedlist_resource17, "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "pre_exec", false);
    org.apache.zeppelin.display.AngularObject angularObject32 = angularObjectRegistry14.remove("org.apache.zeppelin.interpreter.InterpreterException: ", "InterpreterGroup_1497134350938_711831855", "post_exec_dev");
    org.apache.zeppelin.display.AngularObject angularObject36 = angularObjectRegistry14.get("InterpreterGroup_1497134350938_711831855", "pre_exec", "zeppelin.interpreter.port");
    interpreterGroup0.setAngularObjectRegistry(angularObjectRegistry14);
    org.apache.zeppelin.resource.ResourceSet resourceSet39 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResourcesExcept("_GLOBAL_");
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener41 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup42 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry43 = interpreterGroup42.getInterpreterHookRegistry();
    java.lang.String str44 = interpreterGroup42.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry45 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener41, interpreterGroup42);
    org.apache.zeppelin.display.AngularObject angularObject50 = remoteAngularObjectRegistry45.remove("org.apache.zeppelin.interpreter.InterpreterException: ", "", "post_exec_dev", true);
    org.apache.zeppelin.display.AngularObject angularObject55 = remoteAngularObjectRegistry45.remove("[null]", "shared", "post_exec_dev", true);
    int i56 = resourceSet39.lastIndexOf((java.lang.Object)"[null]");
    boolean b57 = interpreterGroup0.contains((java.lang.Object)resourceSet39);
    int i59 = resourceSet39.indexOf((java.lang.Object)"{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}");
    org.apache.zeppelin.resource.ResourceSet resourceSet61 = resourceSet39.filterByClassnameRegex("InterpreterGroup_1497134420195_-722782936");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "InterpreterGroup_1497134428213_281380730"+ "'", str1.equals("InterpreterGroup_1497134428213_281380730"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistry9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "{}"+ "'", str44.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i56 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet61);

  }

  @Test
  public void test269() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test269"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener3 = null;
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener5 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup6 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry7 = interpreterGroup6.getInterpreterHookRegistry();
    java.lang.String str8 = interpreterGroup6.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry9 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener5, interpreterGroup6);
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry10 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("", angularObjectRegistryListener3, interpreterGroup6);
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry12 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("{}");
    interpreterGroup6.setInterpreterHookRegistry(interpreterHookRegistry12);
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry14 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("_GLOBAL_", angularObjectRegistryListener1, interpreterGroup6);
    org.apache.zeppelin.display.AngularObject angularObject18 = remoteAngularObjectRegistry14.removeAndNotifyRemoteProcess("zeppelin.interpreter.port", "zeppelin.interpreter.port", "InterpreterGroup_1497134384512_-890338748");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "{}"+ "'", str8.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject18);

  }

  @Test
  public void test270() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test270"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    boolean b10 = interpreterGroup0.contains((java.lang.Object)"<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    interpreterGroup0.close("InterpreterGroup_1497134367518_-1467696533");
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup13 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry14 = interpreterGroup13.getInterpreterHookRegistry();
    java.lang.String str15 = interpreterGroup13.toString();
    interpreterGroup0.putAll((java.util.Map<java.lang.String,java.util.List<org.apache.zeppelin.interpreter.Interpreter>>)interpreterGroup13);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener17 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener18 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller19 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener17, applicationEventListener18);
    remoteInterpreterEventPoller19.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup21 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool22 = interpreterGroup21.getResourcePool();
    boolean b25 = interpreterGroup21.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str26 = interpreterGroup21.getId();
    remoteInterpreterEventPoller19.setInterpreterGroup(interpreterGroup21);
    remoteInterpreterEventPoller19.run();
    java.util.Map<java.lang.String,java.lang.String> map_str_str32 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener34 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener35 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess37 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str32, 59683, remoteInterpreterProcessListener34, applicationEventListener35, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterEventPoller19.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess37);
    int i39 = remoteInterpreterManagedProcess37.dereference();
    boolean b40 = remoteInterpreterManagedProcess37.isRunning();
    interpreterGroup0.setRemoteInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "{}"+ "'", str15.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "InterpreterGroup_1497134428361_-2114379874"+ "'", str26.equals("InterpreterGroup_1497134428361_-2114379874"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);

  }

  @Test
  public void test271() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test271"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup9 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool10 = interpreterGroup9.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry12 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup9.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry12);
    java.lang.String str15 = interpreterGroup0.toString();
    java.util.Map<java.lang.String,org.apache.zeppelin.interpreter.InterpreterGroup> map_str_interpreterGroup16 = null;
    interpreterGroup0.close(map_str_interpreterGroup16, "{}", "InterpreterGroup_1497134350938_711831855");
    java.util.Set<java.lang.String> set_str20 = interpreterGroup0.keySet();
    java.lang.String str21 = interpreterGroup0.getId();
    interpreterGroup0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "{}"+ "'", str15.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "InterpreterGroup_1497134428426_2089555113"+ "'", str21.equals("InterpreterGroup_1497134428426_2089555113"));

  }

  @Test
  public void test272() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test272"); }

    org.apache.zeppelin.dep.DependencyResolver dependencyResolver1 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134410397_-259667388");
    java.net.URL uRL2 = null;
    // The following exception was thrown during execution in test generation
    try {
    dependencyResolver1.setProxy(uRL2, "existing_process", "InterpreterGroup_1497134409064_585101077");
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test273() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test273"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet5 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet7 = resourceSet5.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet9 = resourceSet7.filterByClassnameRegex("pre_exec");
    java.lang.String[] str_array30 = new java.lang.String[] { "anonymous", "hi!", "zeppelin.interpreter.port", "InterpreterGroup_1497134350790_986318210", "post_exec_dev", "_GLOBAL_", "existing_process", "existing_process", "zeppelin.interpreter.host", "pre_exec_dev", "InterpreterGroup_1497134350790_986318210", "pre_exec_dev", "pre_exec", "pre_exec_dev", "isolated", "pre_exec", "shared", "_GLOBAL_", "[null]", "existing_process" };
    java.util.ArrayList<java.lang.String> arraylist_str31 = new java.util.ArrayList<java.lang.String>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str31, str_array30);
    boolean b33 = resourceSet9.removeAll((java.util.Collection<java.lang.String>)arraylist_str31);
    resourceSet9.clear();
    boolean b35 = resourceSet2.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)resourceSet9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);

  }

  @Test
  public void test274() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test274"); }

    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption1 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption2 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption1);
    boolean b3 = interpreterOption2.perNoteShared();
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption4 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption2);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption5 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption4);
    boolean b6 = interpreterOption5.perUserShared();
    int i7 = interpreterOption5.getPort();
    boolean b8 = interpreterOption5.isUserImpersonate();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test275() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test275"); }

    org.apache.zeppelin.display.AngularObject<java.io.OutputStream> angularobject_outputStream0 = new org.apache.zeppelin.display.AngularObject<java.io.OutputStream>();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener2 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput3 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type1, interpreterResultMessageOutputListener2);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type4 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput3.setType(type4);
    angularobject_outputStream0.set((java.io.OutputStream)interpreterResultMessageOutput3);
    java.lang.String str7 = angularobject_outputStream0.getNoteId();
    org.junit.Assert.assertTrue("'" + type4 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type4.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str7);

  }

  @Test
  public void test276() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test276"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory1 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService4 = executorFactory1.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess6 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory7 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler9 = new org.apache.zeppelin.scheduler.RemoteScheduler("zeppelin.interpreter.host", executorService4, "pre_exec_dev", remoteInterpreterProcess6, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory7, (int)(short)1);
    java.util.Collection<org.apache.zeppelin.scheduler.Job> collection_job10 = remoteScheduler9.getJobsRunning();
    org.apache.zeppelin.scheduler.Job job11 = null;
    // The following exception was thrown during execution in test generation
    try {
    remoteScheduler9.submit(job11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_job10);

  }

  @Test
  public void test277() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test277"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener1 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener2 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess remoteInterpreterRunningProcess5 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess(2, remoteInterpreterProcessListener1, applicationEventListener2, "InterpreterGroup_1497134376922_-128746751", (int)(short)1);

  }

  @Test
  public void test278() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test278"); }

    org.apache.zeppelin.resource.ResourcePoolConnector resourcePoolConnector1 = null;
    org.apache.zeppelin.resource.DistributedResourcePool distributedResourcePool2 = new org.apache.zeppelin.resource.DistributedResourcePool("<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>", resourcePoolConnector1);
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.resource.Resource resource6 = distributedResourcePool2.get("InterpreterGroup_1497134405331_2118921226", "InterpreterGroup_1497134410092_-1974466412", "InterpreterGroup_1497134428426_2089555113");
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test279() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test279"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = interpreterGroup2.getInterpreterHookRegistry();
    java.lang.String str4 = interpreterGroup2.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener1, interpreterGroup2);
    org.apache.zeppelin.display.AngularObject angularObject10 = remoteAngularObjectRegistry5.remove("org.apache.zeppelin.interpreter.InterpreterException: ", "", "post_exec_dev", true);
    org.apache.zeppelin.display.AngularObject angularObject15 = remoteAngularObjectRegistry5.remove("[null]", "shared", "post_exec_dev", true);
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener16 = remoteAngularObjectRegistry5.getListener();
    org.apache.zeppelin.display.AngularObject angularObject20 = remoteAngularObjectRegistry5.removeAndNotifyRemoteProcess("InterpreterGroup_1497134378013_-178412288", "InterpreterGroup_1497134376850_-1874169858", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener22 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup23 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry24 = interpreterGroup23.getInterpreterHookRegistry();
    java.lang.String str25 = interpreterGroup23.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry26 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener22, interpreterGroup23);
    java.util.Map<java.lang.String,java.util.Map<java.lang.String,org.apache.zeppelin.display.AngularObject>> map_str_map_str_angularObject27 = remoteAngularObjectRegistry26.getRegistry();
    remoteAngularObjectRegistry5.setRegistry(map_str_map_str_angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}"+ "'", str4.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistryListener16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "{}"+ "'", str25.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(map_str_map_str_angularObject27);

  }

  @Test
  public void test280() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test280"); }

    org.apache.zeppelin.display.GUI gUI0 = new org.apache.zeppelin.display.GUI();
    java.lang.Object obj2 = gUI0.input("pre_exec_dev");
    gUI0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj2 + "' != '" + ""+ "'", obj2.equals(""));

  }

  @Test
  public void test281() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test281"); }

    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage2 = org.apache.zeppelin.interpreter.ResultMessages.getExceedsLimitRowsMessage(5, "post_exec_dev");
    org.apache.zeppelin.tabledata.InterpreterResultTableData interpreterResultTableData3 = new org.apache.zeppelin.tabledata.InterpreterResultTableData(interpreterResultMessage2);
    org.apache.zeppelin.tabledata.ColumnDef[] columnDef_array4 = interpreterResultTableData3.columns();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(columnDef_array4);

  }

  @Test
  public void test282() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test282"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup9 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool10 = interpreterGroup9.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry12 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup9.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.shutdown();
    java.lang.String str16 = interpreterGroup0.getId();
    java.util.Set<java.util.Map.Entry<java.lang.String,java.util.List<org.apache.zeppelin.interpreter.Interpreter>>> set_entry_str_list_interpreter17 = interpreterGroup0.entrySet();
    interpreterGroup0.shutdown();
    boolean b19 = interpreterGroup0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "InterpreterGroup_1497134428680_1589686249"+ "'", str16.equals("InterpreterGroup_1497134428680_1589686249"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_entry_str_list_interpreter17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test283() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test283"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = interpreterGroup2.getInterpreterHookRegistry();
    java.lang.String str4 = interpreterGroup2.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener1, interpreterGroup2);
    java.lang.String str6 = remoteAngularObjectRegistry5.getInterpreterGroupId();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}"+ "'", str4.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "zeppelin.interpreter.port"+ "'", str6.equals("zeppelin.interpreter.port"));

  }

  @Test
  public void test284() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test284"); }

    org.apache.zeppelin.dep.DependencyContext dependencyContext1 = new org.apache.zeppelin.dep.DependencyContext("1");
    java.util.List<java.io.File> list_file2 = dependencyContext1.getFiles();
    org.apache.zeppelin.dep.Dependency dependency4 = dependencyContext1.load("InterpreterGroup_1497134387892_-1132206419");
    java.util.List<java.lang.String> list_str5 = dependency4.getExclusions();
    org.apache.zeppelin.dep.Dependency dependency6 = dependency4.excludeAll();
    boolean b7 = dependency4.isLocalFsArtifact();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(dependency4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(dependency6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);

  }

  @Test
  public void test285() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test285"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet2.filterByName("anonymous");
    org.apache.zeppelin.resource.ResourceSet resourceSet7 = new org.apache.zeppelin.resource.ResourceSet((java.util.Collection<org.apache.zeppelin.resource.Resource>)resourceSet6);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = resourceSet7.offerFirst(resource8);
    org.apache.zeppelin.resource.Resource resource11 = resourceSet7.remove((int)(byte)0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource11);

  }

  @Test
  public void test286() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test286"); }

    org.apache.zeppelin.resource.LocalResourcePool localResourcePool1 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.resource.Resource resource3 = localResourcePool1.remove("InterpreterGroup_1497134393545_537212119");
    org.apache.zeppelin.dep.DependencyResolver dependencyResolver5 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134376971_-1963975868");
    dependencyResolver5.addRepo("1", "1", false);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup11 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool12 = interpreterGroup11.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry14 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup11.setInterpreterHookRegistry(interpreterHookRegistry14);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption17 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption18 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption17);
    boolean b19 = interpreterGroup11.contains((java.lang.Object)interpreterOption17);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup20 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool21 = interpreterGroup20.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry23 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup20.setInterpreterHookRegistry(interpreterHookRegistry23);
    interpreterGroup11.setInterpreterHookRegistry(interpreterHookRegistry23);
    java.lang.String str26 = interpreterGroup11.toString();
    java.util.Map<java.lang.String,org.apache.zeppelin.interpreter.InterpreterGroup> map_str_interpreterGroup27 = null;
    interpreterGroup11.close(map_str_interpreterGroup27, "{}", "InterpreterGroup_1497134350938_711831855");
    java.util.Set<java.lang.String> set_str31 = interpreterGroup11.keySet();
    java.util.List<java.io.File> list_file32 = dependencyResolver5.load("InterpreterGroup_1497134369176_-1878842789", (java.util.Collection<java.lang.String>)set_str31);
    org.apache.zeppelin.helium.ApplicationLoader applicationLoader33 = new org.apache.zeppelin.helium.ApplicationLoader((org.apache.zeppelin.resource.ResourcePool)localResourcePool1, dependencyResolver5);
    org.apache.zeppelin.resource.ResourceSet resourceSet35 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet37 = resourceSet35.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.Resource resource38 = null;
    boolean b39 = resourceSet35.offerFirst(resource38);
    // The following exception was thrown during execution in test generation
    try {
    localResourcePool1.put("InterpreterGroup_1497134412057_-886896671", (java.lang.Object)resource38);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "{}"+ "'", str26.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);

  }

  @Test
  public void test287() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test287"); }

    org.apache.zeppelin.resource.ResourcePool resourcePool0 = null;
    org.apache.zeppelin.dep.DependencyResolver dependencyResolver1 = null;
    org.apache.zeppelin.helium.ApplicationLoader applicationLoader2 = new org.apache.zeppelin.helium.ApplicationLoader(resourcePool0, dependencyResolver1);
    org.apache.zeppelin.helium.HeliumType heliumType3 = null;
    java.lang.String[][] str_array_array8 = new java.lang.String[][] {  };
    org.apache.zeppelin.helium.HeliumPackage heliumPackage11 = new org.apache.zeppelin.helium.HeliumPackage(heliumType3, "", "", "hi!", "hi!", str_array_array8, "post_exec_dev", "post_exec_dev");
    java.lang.String str12 = heliumPackage11.getArtifact();
    java.lang.String str13 = heliumPackage11.getPublishedDate();
    java.lang.String str14 = heliumPackage11.getName();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener19 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry20 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener19);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry23 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry20, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject25 = heliumAppAngularObjectRegistry23.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput26 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext27 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry23, interpreterOutput26);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry28 = applicationContext27.getAngularObjectRegistry();
    java.lang.String str29 = applicationContext27.getNoteId();
    java.lang.String str30 = applicationContext27.getApplicationInstanceId();
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput31 = applicationContext27.out;
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.helium.Application application32 = applicationLoader2.load(heliumPackage11, applicationContext27);
      org.junit.Assert.fail("Expected exception of type org.apache.zeppelin.helium.ApplicationException");
    } catch (org.apache.zeppelin.helium.ApplicationException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!"+ "'", str12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + ""+ "'", str14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(heliumAppAngularObjectRegistry28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "InterpreterGroup_1497134353138_86992792"+ "'", str29.equals("InterpreterGroup_1497134353138_86992792"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "pre_exec_dev"+ "'", str30.equals("pre_exec_dev"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterOutput31);

  }

  @Test
  public void test288() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test288"); }

    org.apache.zeppelin.interpreter.InterpreterProperty interpreterProperty4 = new org.apache.zeppelin.interpreter.InterpreterProperty("zeppelin.interpreter.port", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "{}", "anonymous");
    interpreterProperty4.setDescription("{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}");
    java.lang.String str7 = interpreterProperty4.getValue();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "{}"+ "'", str7.equals("{}"));

  }

  @Test
  public void test289() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test289"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory2 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService5 = executorFactory2.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess7 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory8 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler10 = new org.apache.zeppelin.scheduler.RemoteScheduler("zeppelin.interpreter.host", executorService5, "pre_exec_dev", remoteInterpreterProcess7, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory8, (int)(short)1);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess12 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory13 = org.apache.zeppelin.scheduler.SchedulerFactory.singleton();
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess16 = null;
    org.apache.zeppelin.scheduler.Scheduler scheduler18 = schedulerFactory13.createOrGetRemoteScheduler("{}", "_GLOBAL_", remoteInterpreterProcess16, (int)(short)1);
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler20 = new org.apache.zeppelin.scheduler.RemoteScheduler("1", executorService5, "hi!", remoteInterpreterProcess12, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory13, 100);
    java.util.Collection<org.apache.zeppelin.scheduler.Job> collection_job21 = remoteScheduler20.getJobsRunning();
    java.util.Collection<org.apache.zeppelin.scheduler.Job> collection_job22 = remoteScheduler20.getJobsWaiting();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(schedulerFactory13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_job21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_job22);

  }

  @Test
  public void test290() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test290"); }

    org.apache.zeppelin.user.Credentials credentials2 = new org.apache.zeppelin.user.Credentials((java.lang.Boolean)false, "");

  }

  @Test
  public void test291() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test291"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener4 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry5 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener4);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry8 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry5, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject10 = heliumAppAngularObjectRegistry8.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput11 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext12 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry8, interpreterOutput11);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry13 = applicationContext12.getAngularObjectRegistry();
    java.lang.String str14 = applicationContext12.getNoteId();
    java.lang.String str15 = applicationContext12.getApplicationInstanceId();
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput16 = applicationContext12.out;
    java.lang.String str17 = applicationContext12.getParagraphId();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(heliumAppAngularObjectRegistry13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "InterpreterGroup_1497134353138_86992792"+ "'", str14.equals("InterpreterGroup_1497134353138_86992792"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "pre_exec_dev"+ "'", str15.equals("pre_exec_dev"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterOutput16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "post_exec_dev"+ "'", str17.equals("post_exec_dev"));

  }

  @Test
  public void test292() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test292"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener1);
    org.apache.zeppelin.resource.Resource[] resource_array4 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource5 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource5, resource_array4);
    org.apache.zeppelin.resource.Resource[] resource_array7 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource8 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8, resource_array7);
    boolean b10 = arraylist_resource8.isEmpty();
    boolean b11 = linkedlist_resource5.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8);
    linkedlist_resource5.clear();
    org.apache.zeppelin.display.AngularObject angularObject16 = angularObjectRegistry2.add("_GLOBAL_", (java.lang.Object)linkedlist_resource5, "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "pre_exec", false);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener17 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput18 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener17);
    interpreterOutput18.flush();
    interpreterOutput18.write((int)(short)-1);
    int i22 = interpreterOutput18.size();
    int i23 = linkedlist_resource5.lastIndexOf((java.lang.Object)i22);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup24 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry25 = interpreterGroup24.getInterpreterHookRegistry();
    java.lang.String str26 = interpreterGroup24.toString();
    java.lang.String str27 = interpreterGroup24.toString();
    int i28 = linkedlist_resource5.lastIndexOf((java.lang.Object)interpreterGroup24);
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.resource.Resource resource29 = linkedlist_resource5.element();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "{}"+ "'", str26.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "{}"+ "'", str27.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == (-1));

  }

  @Test
  public void test293() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test293"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController36 = interpreterContext35.getRemoteWorksController();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(remoteWorksController36);

  }

  @Test
  public void test294() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test294"); }

    org.apache.zeppelin.resource.ResourcePoolConnector resourcePoolConnector1 = null;
    org.apache.zeppelin.resource.DistributedResourcePool distributedResourcePool2 = new org.apache.zeppelin.resource.DistributedResourcePool("<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>", resourcePoolConnector1);
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.resource.Resource resource7 = distributedResourcePool2.get("[]", "scoped", "InterpreterGroup_1497134425062_-942800446", true);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test295() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test295"); }

    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener0 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput1 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener0);
    interpreterOutput1.addResourceSearchPath("InterpreterGroup_1497134369176_-1878842789");
    int i4 = interpreterOutput1.size();
    byte[] byte_array5 = null;
    // The following exception was thrown during execution in test generation
    try {
    interpreterOutput1.write(byte_array5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);

  }

  @Test
  public void test296() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test296"); }

    org.apache.zeppelin.resource.ResourcePoolConnector resourcePoolConnector1 = null;
    org.apache.zeppelin.resource.DistributedResourcePool distributedResourcePool2 = new org.apache.zeppelin.resource.DistributedResourcePool("<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>", resourcePoolConnector1);
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.resource.Resource resource4 = distributedResourcePool2.get("InterpreterGroup_1497134350790_986318210");
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test297() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test297"); }

    org.apache.zeppelin.resource.ResourceId resourceId0 = null;
    java.lang.Class class2 = null;
    java.lang.Class[] class_array3 = new java.lang.Class[] { class2 };
    org.apache.zeppelin.resource.Resource[] resource_array4 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource5 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource5, resource_array4);
    org.apache.zeppelin.resource.Resource[] resource_array7 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource8 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8, resource_array7);
    boolean b10 = arraylist_resource8.isEmpty();
    boolean b11 = linkedlist_resource5.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8);
    org.apache.zeppelin.resource.Resource resource12 = null;
    boolean b13 = linkedlist_resource5.add(resource12);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code14 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array15 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage16 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage16, interpreterResultMessage_array15);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult18 = new org.apache.zeppelin.interpreter.InterpreterResult(code14, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage16);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code19 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array20 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage21 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b22 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage21, interpreterResultMessage_array20);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult23 = new org.apache.zeppelin.interpreter.InterpreterResult(code19, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage21);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code24 = interpreterResult23.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage25 = interpreterResult23.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code26 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array27 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage28 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage28, interpreterResultMessage_array27);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult30 = new org.apache.zeppelin.interpreter.InterpreterResult(code26, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage28);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code31 = interpreterResult30.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage32 = interpreterResult30.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code33 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array34 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage35 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b36 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage35, interpreterResultMessage_array34);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult37 = new org.apache.zeppelin.interpreter.InterpreterResult(code33, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage35);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code38 = interpreterResult37.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage39 = interpreterResult37.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code40 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array41 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage42 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b43 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage42, interpreterResultMessage_array41);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult44 = new org.apache.zeppelin.interpreter.InterpreterResult(code40, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage42);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code45 = interpreterResult44.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage46 = interpreterResult44.message();
    java.util.List[] list_array48 = new java.util.List[ 5 ];
    @SuppressWarnings("unchecked")
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[] list_interpreterResultMessage_array49 = (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[])list_array48;
    list_interpreterResultMessage_array49[0] = arraylist_interpreterResultMessage16;
    list_interpreterResultMessage_array49[1] = list_interpreterResultMessage25;
    list_interpreterResultMessage_array49[2] = list_interpreterResultMessage32;
    list_interpreterResultMessage_array49[3] = list_interpreterResultMessage39;
    list_interpreterResultMessage_array49[4] = list_interpreterResultMessage46;
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[] list_interpreterResultMessage_array60 = linkedlist_resource5.toArray(list_interpreterResultMessage_array49);
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage invokeResourceMethodEventMessage62 = new org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage(resourceId0, "InterpreterGroup_1497134350790_986318210", class_array3, (java.lang.Object[])list_interpreterResultMessage_array60, "");
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(class_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage_array60);

  }

  @Test
  public void test298() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test298"); }

    java.util.Collection<java.lang.Object> collection_obj1 = null;
    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.display.ui.OptionInput.ParamOption paramOption13 = null;
    org.apache.zeppelin.display.ui.OptionInput.ParamOption[] paramOption_array14 = new org.apache.zeppelin.display.ui.OptionInput.ParamOption[] { paramOption13 };
    org.apache.zeppelin.display.ui.Select select15 = org.apache.zeppelin.display.Input.select("post_exec_dev", (java.lang.Object)linkedlist_resource6, paramOption_array14);
    org.apache.zeppelin.display.ui.Select select16 = new org.apache.zeppelin.display.ui.Select("zeppelin.interpreter.port", (java.lang.Object)(short)0, paramOption_array14);
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.display.ui.CheckBox checkBox17 = new org.apache.zeppelin.display.ui.CheckBox("InterpreterGroup_1497134410098_-512670828", collection_obj1, paramOption_array14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(paramOption_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(select15);

  }

  @Test
  public void test299() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test299"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet4.filterByName("InterpreterGroup_1497134350938_711831855");
    org.apache.zeppelin.resource.ResourceSet resourceSet8 = resourceSet6.filterByParagraphId("InterpreterGroup_1497134369176_-1878842789");
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener9 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput10 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener9);
    interpreterOutput10.addResourceSearchPath("isolated");
    byte[] byte_array13 = interpreterOutput10.toByteArray();
    interpreterOutput10.write((int)(byte)1);
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput16 = interpreterOutput10.getCurrentOutput();
    boolean b17 = resourceSet8.removeLastOccurrence((java.lang.Object)interpreterResultMessageOutput16);
    interpreterResultMessageOutput16.flush();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutput16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test300() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test300"); }

    org.apache.zeppelin.display.ui.TextBox textBox2 = new org.apache.zeppelin.display.ui.TextBox("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "InterpreterGroup_1497134367518_-1467696533");
    java.lang.String str3 = textBox2.getDefaultValue();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "InterpreterGroup_1497134367518_-1467696533"+ "'", str3.equals("InterpreterGroup_1497134367518_-1467696533"));

  }

  @Test
  public void test301() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test301"); }

    java.nio.ByteBuffer byteBuffer0 = null;
    org.apache.zeppelin.resource.ByteBufferInputStream byteBufferInputStream1 = new org.apache.zeppelin.resource.ByteBufferInputStream(byteBuffer0);
    boolean b2 = byteBufferInputStream1.markSupported();
    byteBufferInputStream1.close();
    int i4 = byteBufferInputStream1.available();
    int i5 = byteBufferInputStream1.available();
    byteBufferInputStream1.mark(29914);
    int i8 = byteBufferInputStream1.available();
    // The following exception was thrown during execution in test generation
    try {
    int i9 = byteBufferInputStream1.read();
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);

  }

  @Test
  public void test302() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test302"); }

    org.apache.zeppelin.dep.DependencyContext dependencyContext1 = new org.apache.zeppelin.dep.DependencyContext("1");
    dependencyContext1.reset();
    org.apache.zeppelin.dep.Repository repository4 = dependencyContext1.addRepo("hi!");
    org.apache.zeppelin.dep.Repository repository6 = repository4.password("shared");
    org.sonatype.aether.repository.Proxy proxy7 = repository6.getProxy();
    org.sonatype.aether.repository.Authentication authentication8 = repository6.getAuthentication();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(proxy7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(authentication8);

  }

  @Test
  public void test303() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test303"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str1 = interpreterGroup0.getId();
    boolean b3 = interpreterGroup0.equals((java.lang.Object)0L);
    java.util.Collection<java.util.List<org.apache.zeppelin.interpreter.Interpreter>> collection_list_interpreter4 = interpreterGroup0.values();
    java.util.Map<java.lang.String,org.apache.zeppelin.interpreter.InterpreterGroup> map_str_interpreterGroup5 = null;
    interpreterGroup0.close(map_str_interpreterGroup5, "InterpreterGroup_1497134378013_-178412288", "{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}");
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener9 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener10 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller11 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener9, applicationEventListener10);
    remoteInterpreterEventPoller11.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup13 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool14 = interpreterGroup13.getResourcePool();
    boolean b17 = interpreterGroup13.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str18 = interpreterGroup13.getId();
    remoteInterpreterEventPoller11.setInterpreterGroup(interpreterGroup13);
    remoteInterpreterEventPoller11.run();
    java.util.Map<java.lang.String,java.lang.String> map_str_str24 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener26 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener27 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess29 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str24, 59683, remoteInterpreterProcessListener26, applicationEventListener27, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterEventPoller11.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess29);
    int i31 = remoteInterpreterManagedProcess29.getConnectTimeout();
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client32 = null;
    remoteInterpreterManagedProcess29.releaseBrokenClient(client32);
    boolean b34 = remoteInterpreterManagedProcess29.isRunning();
    interpreterGroup0.setRemoteInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "InterpreterGroup_1497134429035_-159819338"+ "'", str1.equals("InterpreterGroup_1497134429035_-159819338"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_list_interpreter4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "InterpreterGroup_1497134429035_-1128988804"+ "'", str18.equals("InterpreterGroup_1497134429035_-1128988804"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 59683);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test304() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test304"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener1);
    org.apache.zeppelin.resource.Resource[] resource_array4 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource5 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource5, resource_array4);
    org.apache.zeppelin.resource.Resource[] resource_array7 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource8 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8, resource_array7);
    boolean b10 = arraylist_resource8.isEmpty();
    boolean b11 = linkedlist_resource5.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8);
    linkedlist_resource5.clear();
    org.apache.zeppelin.display.AngularObject angularObject16 = angularObjectRegistry2.add("_GLOBAL_", (java.lang.Object)linkedlist_resource5, "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "pre_exec", false);
    org.apache.zeppelin.display.AngularObjectWatcher angularObjectWatcher17 = null;
    angularObject16.removeWatcher(angularObjectWatcher17);
    java.lang.String str19 = angularObject16.getNoteId();
    java.lang.String str20 = angularObject16.getParagraphId();
    java.lang.String str21 = angularObject16.toString();
    org.apache.zeppelin.display.AngularObject<java.io.OutputStream> angularobject_outputStream22 = new org.apache.zeppelin.display.AngularObject<java.io.OutputStream>();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type23 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener24 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput25 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type23, interpreterResultMessageOutputListener24);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type26 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput25.setType(type26);
    angularobject_outputStream22.set((java.io.OutputStream)interpreterResultMessageOutput25);
    boolean b30 = angularobject_outputStream22.equals((java.lang.Object)102400);
    java.lang.String str31 = angularobject_outputStream22.toString();
    org.apache.zeppelin.display.AngularObject<java.io.OutputStream> angularobject_outputStream32 = new org.apache.zeppelin.display.AngularObject<java.io.OutputStream>();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener34 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry35 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener34);
    org.apache.zeppelin.resource.Resource[] resource_array37 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource38 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b39 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource38, resource_array37);
    org.apache.zeppelin.resource.Resource[] resource_array40 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource41 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource41, resource_array40);
    boolean b43 = arraylist_resource41.isEmpty();
    boolean b44 = linkedlist_resource38.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource41);
    linkedlist_resource38.clear();
    org.apache.zeppelin.display.AngularObject angularObject49 = angularObjectRegistry35.add("_GLOBAL_", (java.lang.Object)linkedlist_resource38, "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "pre_exec", false);
    org.apache.zeppelin.display.AngularObjectWatcher angularObjectWatcher50 = null;
    angularObject49.removeWatcher(angularObjectWatcher50);
    java.lang.String str52 = angularObject49.getNoteId();
    java.lang.Object obj53 = angularObject49.get();
    org.apache.zeppelin.display.AngularObjectListener angularObjectListener54 = angularObject49.getListener();
    angularobject_outputStream32.setListener(angularObjectListener54);
    angularobject_outputStream22.setListener(angularObjectListener54);
    angularObject16.setListener(angularObjectListener54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>"+ "'", str19.equals("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "pre_exec"+ "'", str20.equals("pre_exec"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "AngularObject{noteId='<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>', paragraphId='pre_exec', object=[], name='_GLOBAL_'}"+ "'", str21.equals("AngularObject{noteId='<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>', paragraphId='pre_exec', object=[], name='_GLOBAL_'}"));
    org.junit.Assert.assertTrue("'" + type26 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type26.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}"+ "'", str31.equals("AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>"+ "'", str52.equals("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObjectListener54);

  }

  @Test
  public void test305() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test305"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener0 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener1 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener0, applicationEventListener1);
    remoteInterpreterEventPoller2.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    boolean b8 = interpreterGroup4.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str9 = interpreterGroup4.getId();
    remoteInterpreterEventPoller2.setInterpreterGroup(interpreterGroup4);
    remoteInterpreterEventPoller2.run();
    java.util.Map<java.lang.String,java.lang.String> map_str_str15 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener17 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener18 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess20 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str15, 59683, remoteInterpreterProcessListener17, applicationEventListener18, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterEventPoller2.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess20);
    int i22 = remoteInterpreterManagedProcess20.getConnectTimeout();
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client23 = null;
    remoteInterpreterManagedProcess20.releaseBrokenClient(client23);
    boolean b25 = remoteInterpreterManagedProcess20.isRunning();
    remoteInterpreterManagedProcess20.setMaxPoolSize((-1));
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup29 = org.apache.zeppelin.interpreter.InterpreterGroup.getByInterpreterGroupId("InterpreterGroup_1497134376971_-1963975868");
    // The following exception was thrown during execution in test generation
    try {
    int i32 = remoteInterpreterManagedProcess20.reference(interpreterGroup29, "InterpreterGroup_1497134422540_309628923", (java.lang.Boolean)false);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "InterpreterGroup_1497134429245_-1479437481"+ "'", str9.equals("InterpreterGroup_1497134429245_-1479437481"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 59683);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterGroup29);

  }

  @Test
  public void test306() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test306"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    java.lang.String[] str_array5 = new java.lang.String[] { "zeppelin.interpreter.port", "_GLOBAL_" };
    java.util.ArrayList<java.lang.String> arraylist_str6 = new java.util.ArrayList<java.lang.String>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str6, str_array5);
    interpreterResultMessageOutput2.setResourceSearchPaths((java.util.List<java.lang.String>)arraylist_str6);
    interpreterResultMessageOutput2.write((int)(short)0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);

  }

  @Test
  public void test307() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test307"); }

    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption1 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption2 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption1);
    boolean b3 = interpreterOption2.perNoteShared();
    boolean b4 = interpreterOption2.perUserScoped();
    interpreterOption2.setExistingProcess(false);
    interpreterOption2.setRemote(true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);

  }

  @Test
  public void test308() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test308"); }

    org.apache.zeppelin.interpreter.InterpreterProperty interpreterProperty4 = new org.apache.zeppelin.interpreter.InterpreterProperty("zeppelin.interpreter.port", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "{}", "anonymous");
    org.apache.zeppelin.display.GUI gUI5 = new org.apache.zeppelin.display.GUI();
    java.util.LinkedHashMap<java.lang.String,org.apache.zeppelin.display.Input> linkedhashmap_str_input6 = gUI5.getForms();
    java.lang.Object obj9 = gUI5.input("InterpreterGroup_1497134350790_986318210", (java.lang.Object)(byte)1);
    boolean b10 = interpreterProperty4.equals(obj9);
    java.lang.String str11 = interpreterProperty4.getDefaultValue();
    java.lang.String str12 = interpreterProperty4.getDescription();
    interpreterProperty4.setPropertyName("<div class=\"result-alert alert-warning\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>%s</div>");
    java.lang.String str15 = interpreterProperty4.getDefaultValue();
    interpreterProperty4.setDefaultValue("InterpreterGroup_1497134427832_-1127041808");
    java.lang.String str18 = interpreterProperty4.getEnvName();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(linkedhashmap_str_input6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + "1"+ "'", obj9.equals("1"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "{}"+ "'", str11.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "anonymous"+ "'", str12.equals("anonymous"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "{}"+ "'", str15.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "zeppelin.interpreter.port"+ "'", str18.equals("zeppelin.interpreter.port"));

  }

  @Test
  public void test309() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test309"); }

    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption1 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption2 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption1);
    interpreterOption2.setHost("[null]");
    interpreterOption2.setPerNote("InterpreterGroup_1497134350938_711831855");
    boolean b7 = interpreterOption2.permissionIsSet();
    boolean b8 = interpreterOption2.isRemote();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);

  }

  @Test
  public void test310() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test310"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = interpreterGroup2.getInterpreterHookRegistry();
    java.lang.String str4 = interpreterGroup2.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener1, interpreterGroup2);
    org.apache.zeppelin.display.AngularObject angularObject10 = remoteAngularObjectRegistry5.remove("org.apache.zeppelin.interpreter.InterpreterException: ", "", "post_exec_dev", true);
    org.apache.zeppelin.display.AngularObject angularObject14 = remoteAngularObjectRegistry5.get("InterpreterGroup_1497134371990_1999798592", "InterpreterGroup_1497134374771_373499119", "[null]");
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener15 = remoteAngularObjectRegistry5.getListener();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}"+ "'", str4.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistryListener15);

  }

  @Test
  public void test311() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test311"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = interpreterGroup2.getInterpreterHookRegistry();
    java.lang.String str4 = interpreterGroup2.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener1, interpreterGroup2);
    org.apache.zeppelin.display.AngularObject angularObject10 = remoteAngularObjectRegistry5.remove("_GLOBAL_", "post_exec_dev", "_GLOBAL_", false);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry13 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry((org.apache.zeppelin.display.AngularObjectRegistry)remoteAngularObjectRegistry5, "InterpreterGroup_1497134350790_986318210", "InterpreterGroup_1497134367518_-1467696533");
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption16 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption17 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption16);
    interpreterOption17.setHost("[null]");
    interpreterOption17.setExistingProcess(false);
    org.apache.zeppelin.display.AngularObject angularObject22 = heliumAppAngularObjectRegistry13.add("pre_exec_dev", (java.lang.Object)interpreterOption17);
    boolean b23 = interpreterOption17.perUserIsolated();
    boolean b24 = interpreterOption17.isRemote();
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption25 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}"+ "'", str4.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption25);

  }

  @Test
  public void test312() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test312"); }

    org.slf4j.Logger logger0 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream1 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger0);
    byte[] byte_array5 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream1.write(byte_array5, (int)'a', 3);
    interpreterOutputStream1.ignoreLeadingNewLinesFromScalaReporter();
    interpreterOutputStream1.ignoreLeadingNewLinesFromScalaReporter();
    interpreterOutputStream1.close();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type12 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener13 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput14 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type12, interpreterResultMessageOutputListener13);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage15 = interpreterResultMessageOutput14.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage16 = interpreterResultMessageOutput14.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener17 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput18 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener17);
    interpreterOutput18.addResourceSearchPath("isolated");
    byte[] byte_array21 = interpreterOutput18.toByteArray();
    interpreterResultMessageOutput14.write(byte_array21);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener23 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput24 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener23);
    interpreterOutput24.flush();
    interpreterOutput24.write((int)(short)-1);
    int i28 = interpreterOutput24.size();
    java.net.URL uRL29 = null;
    interpreterOutput24.write(uRL29);
    org.slf4j.Logger logger31 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream32 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger31);
    byte[] byte_array36 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream32.write(byte_array36, (int)'a', 3);
    interpreterOutput24.write(byte_array36);
    interpreterResultMessageOutput14.write(byte_array36, 0, 0);
    interpreterOutputStream1.write(byte_array36, (int)' ', 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array36);

  }

  @Test
  public void test313() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test313"); }

    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource remoteZeppelinServerResource0 = new org.apache.zeppelin.interpreter.RemoteZeppelinServerResource();
    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource remoteZeppelinServerResource1 = new org.apache.zeppelin.interpreter.RemoteZeppelinServerResource();
    java.lang.String str2 = remoteZeppelinServerResource1.getOwnerKey();
    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type type3 = org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS;
    remoteZeppelinServerResource1.setResourceType(type3);
    remoteZeppelinServerResource0.setResourceType(type3);
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener13 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry14 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener13);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry17 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry14, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject19 = heliumAppAngularObjectRegistry17.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput20 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext21 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry17, interpreterOutput20);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener22 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener23 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput24 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener22, interpreterOutputChangeListener23);
    org.apache.zeppelin.helium.ApplicationContext applicationContext25 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry17, interpreterOutput24);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry26 = applicationContext25.getAngularObjectRegistry();
    remoteZeppelinServerResource0.setData((java.lang.Object)heliumAppAngularObjectRegistry26);
    java.lang.Object obj28 = null;
    remoteZeppelinServerResource0.setData(obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str2);
    org.junit.Assert.assertTrue("'" + type3 + "' != '" + org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS + "'", type3.equals(org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(heliumAppAngularObjectRegistry26);

  }

  @Test
  public void test314() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test314"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource10 = linkedlist_resource1.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo11 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i12 = linkedlist_resource1.indexOf((java.lang.Object)authenticationInfo11);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource1.offerLast(resource13);
    org.apache.zeppelin.resource.Resource resource15 = linkedlist_resource1.getLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource15);

  }

  @Test
  public void test315() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test315"); }

    org.apache.zeppelin.interpreter.remote.ClientFactory clientFactory2 = new org.apache.zeppelin.interpreter.remote.ClientFactory("post_exec_dev", (int)(short)1);
    org.apache.zeppelin.interpreter.remote.ClientFactory clientFactory5 = new org.apache.zeppelin.interpreter.remote.ClientFactory("post_exec_dev", (int)(short)1);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client6 = null;
    clientFactory5.passivateObject(pooledobject_client6);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client8 = null;
    clientFactory5.passivateObject(pooledobject_client8);
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client10 = null;
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client11 = clientFactory5.wrap(client10);
    clientFactory2.destroyObject(pooledobject_client11);
    org.apache.zeppelin.interpreter.remote.ClientFactory clientFactory15 = new org.apache.zeppelin.interpreter.remote.ClientFactory("post_exec_dev", (int)(short)1);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client16 = null;
    clientFactory15.activateObject(pooledobject_client16);
    org.apache.zeppelin.interpreter.remote.ClientFactory clientFactory20 = new org.apache.zeppelin.interpreter.remote.ClientFactory("post_exec_dev", (int)(short)1);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client21 = null;
    clientFactory20.passivateObject(pooledobject_client21);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client23 = null;
    clientFactory20.passivateObject(pooledobject_client23);
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client25 = null;
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client26 = clientFactory20.wrap(client25);
    clientFactory15.destroyObject(pooledobject_client26);
    clientFactory2.destroyObject(pooledobject_client26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(pooledobject_client11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(pooledobject_client26);

  }

  @Test
  public void test316() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test316"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.interpreter.InterpreterContext.set(interpreterContext35);
    java.lang.String str37 = interpreterContext35.getReplName();
    java.lang.String str38 = interpreterContext35.getReplName();
    org.apache.zeppelin.interpreter.InterpreterContext.set(interpreterContext35);
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController40 = null;
    interpreterContext35.setRemoteWorksController(remoteWorksController40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str37.equals("org.apache.zeppelin.interpreter.InterpreterException: "));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str38.equals("org.apache.zeppelin.interpreter.InterpreterException: "));

  }

  @Test
  public void test317() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test317"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry36 = interpreterContext35.getAngularObjectRegistry();
    org.apache.zeppelin.interpreter.remote.RemoteEventClientWrapper remoteEventClientWrapper37 = interpreterContext35.getClient();
    org.apache.zeppelin.interpreter.remote.RemoteEventClientWrapper remoteEventClientWrapper38 = interpreterContext35.getClient();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObjectRegistry36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(remoteEventClientWrapper37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(remoteEventClientWrapper38);

  }

  @Test
  public void test318() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test318"); }

    org.apache.zeppelin.dep.RepositoryListener repositoryListener0 = new org.apache.zeppelin.dep.RepositoryListener();
    org.sonatype.aether.RepositoryEvent repositoryEvent1 = null;
    repositoryListener0.metadataDownloaded(repositoryEvent1);
    org.sonatype.aether.RepositoryEvent repositoryEvent3 = null;
    // The following exception was thrown during execution in test generation
    try {
    repositoryListener0.artifactDownloaded(repositoryEvent3);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test319() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test319"); }

    org.apache.zeppelin.display.AngularObject<java.io.OutputStream> angularobject_outputStream0 = new org.apache.zeppelin.display.AngularObject<java.io.OutputStream>();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener2 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput3 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type1, interpreterResultMessageOutputListener2);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type4 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput3.setType(type4);
    angularobject_outputStream0.set((java.io.OutputStream)interpreterResultMessageOutput3);
    boolean b8 = angularobject_outputStream0.equals((java.lang.Object)102400);
    java.lang.String str9 = angularobject_outputStream0.toString();
    angularobject_outputStream0.setParagraphId("InterpreterGroup_1497134384512_-890338748");
    java.lang.String str12 = angularobject_outputStream0.getName();
    org.junit.Assert.assertTrue("'" + type4 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type4.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}"+ "'", str9.equals("AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str12);

  }

  @Test
  public void test320() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test320"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    interpreterResultMessageOutput2.flush();
    boolean b4 = interpreterResultMessageOutput2.isAppendSupported();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type5 = org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener6 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput7 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type5, interpreterResultMessageOutputListener6);
    interpreterResultMessageOutput2.setType(type5);
    org.apache.zeppelin.dep.DependencyContext dependencyContext10 = new org.apache.zeppelin.dep.DependencyContext("1");
    java.util.List<java.io.File> list_file11 = dependencyContext10.getFiles();
    org.apache.zeppelin.dep.Dependency dependency13 = dependencyContext10.load("InterpreterGroup_1497134387892_-1132206419");
    java.util.List<java.lang.String> list_str14 = dependency13.getExclusions();
    org.apache.zeppelin.dep.Dependency dependency15 = dependency13.local();
    java.util.List<java.lang.String> list_str16 = dependency15.getExclusions();
    interpreterResultMessageOutput2.setResourceSearchPaths(list_str16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    org.junit.Assert.assertTrue("'" + type5 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR + "'", type5.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(dependency13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_str14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(dependency15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_str16);

  }

  @Test
  public void test321() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test321"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = interpreterGroup2.getInterpreterHookRegistry();
    java.lang.String str4 = interpreterGroup2.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener1, interpreterGroup2);
    java.util.Enumeration<java.lang.String> enumeration_str6 = interpreterGroup2.keys();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}"+ "'", str4.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(enumeration_str6);

  }

  @Test
  public void test322() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test322"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener4 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry5 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener4);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry8 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry5, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject10 = heliumAppAngularObjectRegistry8.get("");
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener18 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry19 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener18);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry22 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry19, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject24 = heliumAppAngularObjectRegistry22.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput25 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext26 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry22, interpreterOutput25);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener27 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener28 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput29 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener27, interpreterOutputChangeListener28);
    org.apache.zeppelin.helium.ApplicationContext applicationContext30 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry22, interpreterOutput29);
    org.apache.zeppelin.helium.ApplicationContext applicationContext31 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134386032_1263213569", "InterpreterGroup_1497134387007_1195822394", heliumAppAngularObjectRegistry8, interpreterOutput29);
    java.lang.String str32 = applicationContext31.getApplicationInstanceId();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "InterpreterGroup_1497134387007_1195822394"+ "'", str32.equals("InterpreterGroup_1497134387007_1195822394"));

  }

  @Test
  public void test323() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test323"); }

    org.apache.zeppelin.interpreter.InterpreterException interpreterException1 = new org.apache.zeppelin.interpreter.InterpreterException("InterpreterGroup_1497134350790_986318210");

  }

  @Test
  public void test324() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test324"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet1 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet3 = resourceSet1.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet5 = resourceSet3.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.interpreter.InterpreterResult.Code code6 = null;
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult7 = new org.apache.zeppelin.interpreter.InterpreterResult(code6);
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage8 = interpreterResult7.message();
    boolean b9 = resourceSet3.removeAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)list_interpreterResultMessage8);
    org.apache.zeppelin.resource.Resource[] resource_array11 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource12 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource12, resource_array11);
    org.apache.zeppelin.resource.Resource[] resource_array14 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource15 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource15, resource_array14);
    boolean b17 = arraylist_resource15.isEmpty();
    boolean b18 = linkedlist_resource12.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource15);
    org.apache.zeppelin.display.ui.OptionInput.ParamOption paramOption19 = null;
    org.apache.zeppelin.display.ui.OptionInput.ParamOption[] paramOption_array20 = new org.apache.zeppelin.display.ui.OptionInput.ParamOption[] { paramOption19 };
    org.apache.zeppelin.display.ui.Select select21 = org.apache.zeppelin.display.Input.select("post_exec_dev", (java.lang.Object)linkedlist_resource12, paramOption_array20);
    org.apache.zeppelin.display.ui.Select select22 = new org.apache.zeppelin.display.ui.Select("post_exec_dev", (java.lang.Object)list_interpreterResultMessage8, paramOption_array20);
    java.lang.String str23 = select22.getArgument();
    select22.setHidden(false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(paramOption_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(select21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str23);

  }

  @Test
  public void test325() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test325"); }

    org.apache.zeppelin.user.Credentials credentials2 = new org.apache.zeppelin.user.Credentials((java.lang.Boolean)true, "InterpreterGroup_1497134368135_304166951");
    org.apache.zeppelin.user.UserCredentials userCredentials4 = null;
    credentials2.putUserCredentials("_GLOBAL_", userCredentials4);
    org.apache.zeppelin.user.UserCredentials userCredentials7 = null;
    credentials2.putUserCredentials("pre_exec_dev", userCredentials7);
    // The following exception was thrown during execution in test generation
    try {
    boolean b11 = credentials2.removeCredentialEntity("InterpreterGroup_1497134378013_-178412288", "org.apache.zeppelin.interpreter.InterpreterException: InterpreterGroup_1497134377064_955397632");
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test326() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test326"); }

    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption1 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    boolean b2 = interpreterOption1.perNoteShared();
    boolean b3 = interpreterOption1.permissionIsSet();
    interpreterOption1.setHost("InterpreterGroup_1497134367518_-1467696533");
    interpreterOption1.setRemote(false);
    boolean b8 = interpreterOption1.perNoteScoped();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test327() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test327"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory3 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService6 = executorFactory3.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory7 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.Scheduler scheduler9 = schedulerFactory7.createOrGetFIFOScheduler("InterpreterGroup_1497134361189_-653890590");
    org.apache.zeppelin.scheduler.FIFOScheduler fIFOScheduler10 = new org.apache.zeppelin.scheduler.FIFOScheduler("hi!", executorService6, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory7);
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory11 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.FIFOScheduler fIFOScheduler12 = new org.apache.zeppelin.scheduler.FIFOScheduler("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", executorService6, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory11);
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory14 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService16 = executorFactory14.createOrGet("hi!");
    java.util.concurrent.ExecutorService executorService18 = executorFactory14.createOrGet("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory19 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.FIFOScheduler fIFOScheduler20 = new org.apache.zeppelin.scheduler.FIFOScheduler("InterpreterGroup_1497134374771_373499119", executorService18, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory19);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess23 = null;
    org.apache.zeppelin.scheduler.Scheduler scheduler25 = schedulerFactory19.createOrGetRemoteScheduler("InterpreterGroup_1497134368135_304166951", "hi!", remoteInterpreterProcess23, (int)(byte)10);
    org.apache.zeppelin.scheduler.Scheduler scheduler27 = schedulerFactory19.removeScheduler("InterpreterGroup_1497134384931_-1968252549");
    org.apache.zeppelin.scheduler.ParallelScheduler parallelScheduler29 = new org.apache.zeppelin.scheduler.ParallelScheduler("pre_exec_dev", executorService6, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory19, (int)(byte)100);
    java.lang.String str30 = parallelScheduler29.getName();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(scheduler27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "pre_exec_dev"+ "'", str30.equals("pre_exec_dev"));

  }

  @Test
  public void test328() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test328"); }

    org.apache.zeppelin.user.UsernamePassword usernamePassword2 = new org.apache.zeppelin.user.UsernamePassword("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    usernamePassword2.setPassword("post_exec_dev");
    usernamePassword2.setUsername("org.apache.zeppelin.interpreter.InterpreterException: InterpreterGroup_1497134377064_955397632");

  }

  @Test
  public void test329() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test329"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener0 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener1 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener0, applicationEventListener1);
    remoteInterpreterEventPoller2.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    boolean b8 = interpreterGroup4.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str9 = interpreterGroup4.getId();
    remoteInterpreterEventPoller2.setInterpreterGroup(interpreterGroup4);
    remoteInterpreterEventPoller2.run();
    java.util.Map<java.lang.String,java.lang.String> map_str_str15 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener17 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener18 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess20 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str15, 59683, remoteInterpreterProcessListener17, applicationEventListener18, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterEventPoller2.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess20);
    int i22 = remoteInterpreterManagedProcess20.dereference();
    boolean b23 = remoteInterpreterManagedProcess20.isRunning();
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client24 = remoteInterpreterManagedProcess20.getClient();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "InterpreterGroup_1497134429744_1274555005"+ "'", str9.equals("InterpreterGroup_1497134429744_1274555005"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(client24);

  }

  @Test
  public void test330() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test330"); }

    org.apache.zeppelin.user.Credentials credentials2 = new org.apache.zeppelin.user.Credentials((java.lang.Boolean)true, "InterpreterGroup_1497134408397_554648092");

  }

  @Test
  public void test331() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test331"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener0 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener1 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener0, applicationEventListener1);
    remoteInterpreterEventPoller2.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    boolean b8 = interpreterGroup4.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str9 = interpreterGroup4.getId();
    remoteInterpreterEventPoller2.setInterpreterGroup(interpreterGroup4);
    remoteInterpreterEventPoller2.run();
    java.util.Map<java.lang.String,java.lang.String> map_str_str15 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener17 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener18 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess20 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("InterpreterGroup_1497134377841_-315852627", "{envName=InterpreterGroup_1497134367518_-1467696533, propertyName=AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}, defaultValue=pre_exec, description=InterpreterGroup_1497134393145_-2056563636}", "InterpreterGroup_1497134376850_-1874169858", map_str_str15, 59683, remoteInterpreterProcessListener17, applicationEventListener18, "InterpreterGroup_1497134350790_986318210");
    remoteInterpreterEventPoller2.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess20);
    remoteInterpreterManagedProcess20.stop();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "InterpreterGroup_1497134429772_87627380"+ "'", str9.equals("InterpreterGroup_1497134429772_87627380"));

  }

  @Test
  public void test332() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test332"); }

    org.apache.zeppelin.dep.RepositoryListener repositoryListener0 = new org.apache.zeppelin.dep.RepositoryListener();
    org.sonatype.aether.RepositoryEvent repositoryEvent1 = null;
    // The following exception was thrown during execution in test generation
    try {
    repositoryListener0.metadataInvalid(repositoryEvent1);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test333() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test333"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener1);
    org.apache.zeppelin.resource.Resource[] resource_array4 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource5 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource5, resource_array4);
    org.apache.zeppelin.resource.Resource[] resource_array7 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource8 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8, resource_array7);
    boolean b10 = arraylist_resource8.isEmpty();
    boolean b11 = linkedlist_resource5.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8);
    linkedlist_resource5.clear();
    org.apache.zeppelin.display.AngularObject angularObject16 = angularObjectRegistry2.add("_GLOBAL_", (java.lang.Object)linkedlist_resource5, "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "pre_exec", false);
    org.apache.zeppelin.display.AngularObjectWatcher angularObjectWatcher17 = null;
    angularObject16.removeWatcher(angularObjectWatcher17);
    java.lang.String str19 = angularObject16.getName();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "_GLOBAL_"+ "'", str19.equals("_GLOBAL_"));

  }

  @Test
  public void test334() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test334"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet4.filterByName("InterpreterGroup_1497134350938_711831855");
    org.apache.zeppelin.resource.ResourceSet resourceSet8 = resourceSet6.filterByParagraphId("InterpreterGroup_1497134369176_-1878842789");
    org.sonatype.aether.repository.RemoteRepository remoteRepository9 = org.apache.zeppelin.dep.Booter.newLocalRepository();
    org.sonatype.aether.repository.RemoteRepository[] remoteRepository_array10 = new org.sonatype.aether.repository.RemoteRepository[] { remoteRepository9 };
    java.util.ArrayList<org.sonatype.aether.repository.RemoteRepository> arraylist_remoteRepository11 = new java.util.ArrayList<org.sonatype.aether.repository.RemoteRepository>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<org.sonatype.aether.repository.RemoteRepository>)arraylist_remoteRepository11, remoteRepository_array10);
    boolean b13 = resourceSet6.removeAll((java.util.Collection<org.sonatype.aether.repository.RemoteRepository>)arraylist_remoteRepository11);
    // The following exception was thrown during execution in test generation
    try {
    java.util.List<org.apache.zeppelin.resource.Resource> list_resource16 = resourceSet6.subList(4, 0);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(remoteRepository9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(remoteRepository_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test335() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test335"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Code code0 = org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR;
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult1 = new org.apache.zeppelin.interpreter.InterpreterResult(code0);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult3 = new org.apache.zeppelin.interpreter.InterpreterResult(code0, "");
    org.junit.Assert.assertTrue("'" + code0 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR + "'", code0.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR));

  }

  @Test
  public void test336() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test336"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup9 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool10 = interpreterGroup9.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry12 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup9.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry12);
    java.lang.String str15 = interpreterGroup0.toString();
    java.util.Map<java.lang.String,org.apache.zeppelin.interpreter.InterpreterGroup> map_str_interpreterGroup16 = null;
    interpreterGroup0.close(map_str_interpreterGroup16, "{}", "InterpreterGroup_1497134350938_711831855");
    java.util.Set<java.lang.String> set_str20 = interpreterGroup0.keySet();
    org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool interpreterContextRunnerPool21 = new org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool();
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterContextRunner remoteInterpreterContextRunner25 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterContextRunner("InterpreterGroup_1497134353138_86992792", "zeppelin.interpreter.host");
    java.lang.String str26 = remoteInterpreterContextRunner25.getParagraphId();
    boolean b28 = remoteInterpreterContextRunner25.equals((java.lang.Object)(short)1);
    interpreterContextRunnerPool21.add("InterpreterGroup_1497134374771_373499119", (org.apache.zeppelin.interpreter.InterpreterContextRunner)remoteInterpreterContextRunner25);
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter30 = interpreterGroup0.remove((java.lang.Object)interpreterContextRunnerPool21);
    // The following exception was thrown during execution in test generation
    try {
    interpreterContextRunnerPool21.run("InterpreterGroup_1497134393546_1288425887", "[null]");
      org.junit.Assert.fail("Expected exception of type org.apache.zeppelin.interpreter.InterpreterException");
    } catch (org.apache.zeppelin.interpreter.InterpreterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "{}"+ "'", str15.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_str20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "zeppelin.interpreter.host"+ "'", str26.equals("zeppelin.interpreter.host"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter30);

  }

  @Test
  public void test337() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test337"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.resource.ResourcePool resourcePool2 = interpreterGroup0.getResourcePool();
    java.util.Properties properties3 = interpreterGroup0.getProperty();
    java.util.Enumeration<java.util.List<org.apache.zeppelin.interpreter.Interpreter>> enumeration_list_interpreter4 = interpreterGroup0.elements();
    java.lang.Object obj5 = null;
    boolean b6 = interpreterGroup0.equals(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(properties3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(enumeration_list_interpreter4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test338() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test338"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory1 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService3 = executorFactory1.createOrGet("{}");
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory6 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService8 = executorFactory6.createOrGet("{}");
    java.util.Map<java.lang.String,java.lang.String> map_str_str13 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener15 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener16 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess18 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str13, 59683, remoteInterpreterProcessListener15, applicationEventListener16, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterManagedProcess18.stop();
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory21 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService24 = executorFactory21.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory25 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.Scheduler scheduler27 = schedulerFactory25.createOrGetFIFOScheduler("InterpreterGroup_1497134361189_-653890590");
    org.apache.zeppelin.scheduler.FIFOScheduler fIFOScheduler28 = new org.apache.zeppelin.scheduler.FIFOScheduler("hi!", executorService24, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory25);
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler30 = new org.apache.zeppelin.scheduler.RemoteScheduler("InterpreterGroup_1497134410092_-1974466412", executorService8, "InterpreterGroup_1497134376850_-1874169858", (org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess18, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory25, (int)(short)0);
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory32 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService35 = executorFactory32.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess37 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory38 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler40 = new org.apache.zeppelin.scheduler.RemoteScheduler("zeppelin.interpreter.host", executorService35, "pre_exec_dev", remoteInterpreterProcess37, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory38, (int)(short)1);
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler42 = new org.apache.zeppelin.scheduler.RemoteScheduler("InterpreterGroup_1497134377883_708078564", executorService3, "InterpreterGroup_1497134410739_-1534144333", (org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess18, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory38, (int)'#');
    org.apache.zeppelin.scheduler.Scheduler scheduler45 = schedulerFactory38.createOrGetParallelScheduler("InterpreterGroup_1497134408397_554648092", 999);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler45);

  }

  @Test
  public void test339() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test339"); }

    org.apache.zeppelin.dep.DependencyContext dependencyContext1 = new org.apache.zeppelin.dep.DependencyContext("InterpreterGroup_1497134393145_-2056563636");

  }

  @Test
  public void test340() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test340"); }

    org.apache.zeppelin.resource.Resource[] resource_array1 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource2 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b3 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource2, resource_array1);
    org.apache.zeppelin.resource.Resource[] resource_array4 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource5 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource5, resource_array4);
    boolean b7 = arraylist_resource5.isEmpty();
    boolean b8 = linkedlist_resource2.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource5);
    org.apache.zeppelin.display.ui.OptionInput.ParamOption paramOption9 = null;
    org.apache.zeppelin.display.ui.OptionInput.ParamOption[] paramOption_array10 = new org.apache.zeppelin.display.ui.OptionInput.ParamOption[] { paramOption9 };
    org.apache.zeppelin.display.ui.Select select11 = org.apache.zeppelin.display.Input.select("post_exec_dev", (java.lang.Object)linkedlist_resource2, paramOption_array10);
    select11.setDisplayName("[null]");
    java.lang.String str14 = select11.getName();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(paramOption_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(select11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "post_exec_dev"+ "'", str14.equals("post_exec_dev"));

  }

  @Test
  public void test341() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test341"); }

    org.apache.zeppelin.interpreter.InterpreterException interpreterException1 = new org.apache.zeppelin.interpreter.InterpreterException("");
    org.apache.zeppelin.helium.ApplicationException applicationException2 = new org.apache.zeppelin.helium.ApplicationException((java.lang.Exception)interpreterException1);
    org.apache.zeppelin.interpreter.InterpreterException interpreterException4 = new org.apache.zeppelin.interpreter.InterpreterException("");
    org.apache.zeppelin.interpreter.InterpreterException interpreterException5 = new org.apache.zeppelin.interpreter.InterpreterException((java.lang.Throwable)interpreterException4);
    java.lang.String str6 = org.apache.zeppelin.interpreter.InterpreterUtils.getMostRelevantMessage((java.lang.Exception)interpreterException5);
    org.apache.zeppelin.helium.ApplicationException applicationException7 = new org.apache.zeppelin.helium.ApplicationException((java.lang.Exception)interpreterException5);
    org.apache.zeppelin.interpreter.InterpreterException interpreterException9 = new org.apache.zeppelin.interpreter.InterpreterException("InterpreterGroup_1497134377064_955397632");
    org.apache.zeppelin.interpreter.InterpreterException interpreterException10 = new org.apache.zeppelin.interpreter.InterpreterException((java.lang.Throwable)interpreterException9);
    interpreterException5.addSuppressed((java.lang.Throwable)interpreterException10);
    interpreterException1.addSuppressed((java.lang.Throwable)interpreterException10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str6.equals("org.apache.zeppelin.interpreter.InterpreterException: "));

  }

  @Test
  public void test342() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test342"); }

    org.apache.zeppelin.user.CredentialsInfoSaving credentialsInfoSaving0 = new org.apache.zeppelin.user.CredentialsInfoSaving();
    java.util.Map<java.lang.String,org.apache.zeppelin.user.UserCredentials> map_str_userCredentials1 = null;
    credentialsInfoSaving0.credentialsMap = map_str_userCredentials1;
    java.util.Map<java.lang.String,org.apache.zeppelin.user.UserCredentials> map_str_userCredentials3 = credentialsInfoSaving0.credentialsMap;
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(map_str_userCredentials3);

  }

  @Test
  public void test343() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test343"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Code code0 = org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR;
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult1 = new org.apache.zeppelin.interpreter.InterpreterResult(code0);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type2 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener3 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput4 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type2, interpreterResultMessageOutputListener3);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type5 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput4.setType(type5);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult8 = new org.apache.zeppelin.interpreter.InterpreterResult(code0, type5, "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}");
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener9 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener10 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput11 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener9, interpreterOutputChangeListener10);
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener13 = interpreterOutput11.createInterpreterResultMessageOutputListener(5);
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener14 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput15 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type5, interpreterResultMessageOutputListener13, interpreterOutputChangeListener14);
    java.net.URL uRL16 = null;
    interpreterResultMessageOutput15.write(uRL16);
    java.lang.String str18 = interpreterResultMessageOutput15.toString();
    org.junit.Assert.assertTrue("'" + code0 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR + "'", code0.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR));
    org.junit.Assert.assertTrue("'" + type5 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type5.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutputListener13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "%svg "+ "'", str18.equals("%svg "));

  }

  @Test
  public void test344() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test344"); }

    org.apache.zeppelin.interpreter.remote.AppendOutputBuffer appendOutputBuffer4 = new org.apache.zeppelin.interpreter.remote.AppendOutputBuffer("<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>", "<div class=\"result-alert alert-warning\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>%s</div>", (int)(byte)10, "pre_exec");
    java.lang.String str5 = appendOutputBuffer4.getData();
    java.lang.String str6 = appendOutputBuffer4.getNoteId();
    java.lang.String str7 = appendOutputBuffer4.getData();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "pre_exec"+ "'", str5.equals("pre_exec"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>"+ "'", str6.equals("<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "pre_exec"+ "'", str7.equals("pre_exec"));

  }

  @Test
  public void test345() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test345"); }

    org.apache.zeppelin.display.GUI gUI0 = new org.apache.zeppelin.display.GUI();
    java.util.LinkedHashMap<java.lang.String,org.apache.zeppelin.display.Input> linkedhashmap_str_input1 = gUI0.getForms();
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj2 = gUI0.getParams();
    gUI0.clear();
    gUI0.convertOldInput();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(linkedhashmap_str_input1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(map_str_obj2);

  }

  @Test
  public void test346() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test346"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup9 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool10 = interpreterGroup9.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry12 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup9.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.shutdown();
    java.lang.String str16 = interpreterGroup0.toString();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener19 = null;
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup22 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry23 = interpreterGroup22.getInterpreterHookRegistry();
    java.lang.String str24 = interpreterGroup22.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry25 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener21, interpreterGroup22);
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry26 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("", angularObjectRegistryListener19, interpreterGroup22);
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry28 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("{}");
    interpreterGroup22.setInterpreterHookRegistry(interpreterHookRegistry28);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup31 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry32 = interpreterGroup31.getInterpreterHookRegistry();
    java.lang.String str33 = interpreterGroup31.toString();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup35 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str36 = interpreterGroup35.getId();
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array38 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter39 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b40 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter39, interpreter_array38);
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter41 = interpreterGroup35.putIfAbsent("pre_exec_dev", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter39);
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array42 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter43 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b44 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter43, interpreter_array42);
    boolean b45 = interpreterGroup31.replace("InterpreterGroup_1497134350790_986318210", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter39, (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter43);
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter46 = interpreterGroup22.put("InterpreterGroup_1497134376922_-128746751", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter39);
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter47 = interpreterGroup0.putIfAbsent("InterpreterGroup_1497134377636_1315933403", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "{}"+ "'", str16.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "{}"+ "'", str24.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "{}"+ "'", str33.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "InterpreterGroup_1497134430233_523742514"+ "'", str36.equals("InterpreterGroup_1497134430233_523742514"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter47);

  }

  @Test
  public void test347() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test347"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener7 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry8 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener7);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry11 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry8, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject13 = heliumAppAngularObjectRegistry11.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput14 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext15 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry11, interpreterOutput14);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener16 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener17 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput18 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener16, interpreterOutputChangeListener17);
    org.apache.zeppelin.helium.ApplicationContext applicationContext19 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry11, interpreterOutput18);
    interpreterOutput18.flush();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject13);

  }

  @Test
  public void test348() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test348"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str1 = interpreterGroup0.getId();
    boolean b3 = interpreterGroup0.equals((java.lang.Object)0L);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry7 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup4.setInterpreterHookRegistry(interpreterHookRegistry7);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry9 = interpreterGroup4.getAngularObjectRegistry();
    boolean b11 = interpreterGroup0.remove((java.lang.Object)interpreterGroup4, (java.lang.Object)10.0d);
    boolean b12 = interpreterGroup4.isEmpty();
    java.util.Set<java.util.Map.Entry<java.lang.String,java.util.List<org.apache.zeppelin.interpreter.Interpreter>>> set_entry_str_list_interpreter13 = interpreterGroup4.entrySet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "InterpreterGroup_1497134430354_864211773"+ "'", str1.equals("InterpreterGroup_1497134430354_864211773"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistry9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_entry_str_list_interpreter13);

  }

  @Test
  public void test349() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test349"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener0 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener1 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener0, applicationEventListener1);
    remoteInterpreterEventPoller2.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    boolean b8 = interpreterGroup4.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str9 = interpreterGroup4.getId();
    remoteInterpreterEventPoller2.setInterpreterGroup(interpreterGroup4);
    remoteInterpreterEventPoller2.run();
    java.util.Map<java.lang.String,java.lang.String> map_str_str15 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener17 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener18 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess20 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str15, 59683, remoteInterpreterProcessListener17, applicationEventListener18, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterEventPoller2.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess20);
    int i22 = remoteInterpreterManagedProcess20.dereference();
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client23 = null;
    remoteInterpreterManagedProcess20.releaseBrokenClient(client23);
    int i25 = remoteInterpreterManagedProcess20.getMaxPoolSize();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "InterpreterGroup_1497134430358_-375215469"+ "'", str9.equals("InterpreterGroup_1497134430358_-375215469"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);

  }

  @Test
  public void test350() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test350"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet2.filterByName("anonymous");
    org.apache.zeppelin.resource.ResourceSet resourceSet7 = new org.apache.zeppelin.resource.ResourceSet((java.util.Collection<org.apache.zeppelin.resource.Resource>)resourceSet6);
    org.apache.zeppelin.resource.ResourceSet resourceSet9 = resourceSet7.filterByClassname("_GLOBAL_");
    org.apache.zeppelin.resource.ResourceSet resourceSet10 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet12 = resourceSet10.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet14 = resourceSet10.filterByNoteId("_GLOBAL_");
    boolean b15 = resourceSet9.removeFirstOccurrence((java.lang.Object)"_GLOBAL_");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test351() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test351"); }

    java.nio.ByteBuffer byteBuffer0 = null;
    org.apache.zeppelin.resource.ByteBufferInputStream byteBufferInputStream1 = new org.apache.zeppelin.resource.ByteBufferInputStream(byteBuffer0);
    boolean b2 = byteBufferInputStream1.markSupported();
    byteBufferInputStream1.close();
    int i4 = byteBufferInputStream1.available();
    int i5 = byteBufferInputStream1.available();
    byteBufferInputStream1.mark(29914);
    boolean b8 = byteBufferInputStream1.markSupported();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test352() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test352"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.resource.Resource resource39 = localResourcePool29.get("<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>", "org.apache.zeppelin.interpreter.InterpreterException: ", "<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet40 = localResourcePool29.getAll();
    java.lang.String str41 = resourceSet40.toString();
    org.apache.zeppelin.resource.Resource resource42 = null;
    boolean b43 = resourceSet40.offerFirst(resource42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "[]"+ "'", str41.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);

  }

  @Test
  public void test353() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test353"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource10 = linkedlist_resource1.iterator();
    java.lang.String str11 = linkedlist_resource1.toString();
    java.lang.Object[] obj_array12 = linkedlist_resource1.toArray();
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource1.offerLast(resource13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[null]"+ "'", str11.equals("[null]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);

  }

  @Test
  public void test354() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test354"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.interpreter.InterpreterContext.set(interpreterContext35);
    java.lang.String str37 = interpreterContext35.getParagraphId();
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput38 = interpreterContext35.out();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo39 = interpreterContext35.getAuthenticationInfo();
    java.lang.String str40 = interpreterContext35.getParagraphTitle();
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController41 = null;
    interpreterContext35.setRemoteWorksController(remoteWorksController41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "InterpreterGroup_1497134353138_86992792"+ "'", str37.equals("InterpreterGroup_1497134353138_86992792"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterOutput38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "pre_exec_dev"+ "'", str40.equals("pre_exec_dev"));

  }

  @Test
  public void test355() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test355"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener1 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener2 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess remoteInterpreterRunningProcess5 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess((int)(short)-1, remoteInterpreterProcessListener1, applicationEventListener2, "InterpreterGroup_1497134393546_1288425887", 29914);

  }

  @Test
  public void test356() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test356"); }

    org.apache.zeppelin.display.GUI gUI0 = new org.apache.zeppelin.display.GUI();
    java.util.LinkedHashMap<java.lang.String,org.apache.zeppelin.display.Input> linkedhashmap_str_input1 = gUI0.getForms();
    java.lang.Object obj3 = gUI0.textbox("[null]");
    java.lang.String str4 = gUI0.toJson();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(linkedhashmap_str_input1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj3 + "' != '" + ""+ "'", obj3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{\"params\":{},\"forms\":{\"[null]\":{\"type\":\"TextBox\",\"name\":\"[null]\",\"displayName\":\"[null]\",\"defaultValue\":\"\",\"hidden\":false}}}"+ "'", str4.equals("{\"params\":{},\"forms\":{\"[null]\":{\"type\":\"TextBox\",\"name\":\"[null]\",\"displayName\":\"[null]\",\"defaultValue\":\"\",\"hidden\":false}}}"));

  }

  @Test
  public void test357() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test357"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory1 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService4 = executorFactory1.createOrGet("scoped", 2);
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory5 = org.apache.zeppelin.scheduler.SchedulerFactory.singleton();
    org.apache.zeppelin.scheduler.ParallelScheduler parallelScheduler7 = new org.apache.zeppelin.scheduler.ParallelScheduler("post_exec_dev", executorService4, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory5, (int)(byte)10);
    parallelScheduler7.stop();
    parallelScheduler7.setMaxConcurrency(1);
    java.util.Collection<org.apache.zeppelin.scheduler.Job> collection_job11 = parallelScheduler7.getJobsRunning();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(schedulerFactory5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_job11);

  }

  @Test
  public void test358() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test358"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup9 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool10 = interpreterGroup9.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry12 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup9.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.shutdown();
    java.lang.String str16 = interpreterGroup0.getId();
    java.util.Set<java.util.Map.Entry<java.lang.String,java.util.List<org.apache.zeppelin.interpreter.Interpreter>>> set_entry_str_list_interpreter17 = interpreterGroup0.entrySet();
    interpreterGroup0.close("InterpreterGroup_1497134408379_1574252163");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "InterpreterGroup_1497134430791_374459926"+ "'", str16.equals("InterpreterGroup_1497134430791_374459926"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_entry_str_list_interpreter17);

  }

  @Test
  public void test359() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test359"); }

    org.sonatype.aether.RepositorySystem repositorySystem0 = org.apache.zeppelin.dep.Booter.newRepositorySystem();
    org.sonatype.aether.RepositorySystemSession repositorySystemSession2 = org.apache.zeppelin.dep.Booter.newRepositorySystemSession(repositorySystem0, "org.apache.zeppelin.helium.ApplicationException: InterpreterGroup_1497134385808_1965526612");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repositorySystem0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repositorySystemSession2);

  }

  @Test
  public void test360() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test360"); }

    org.apache.zeppelin.display.ui.TextBox textBox2 = org.apache.zeppelin.display.Input.textbox("InterpreterGroup_1497134421473_1415416272", "InterpreterGroup_1497134377883_708078564");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(textBox2);

  }

  @Test
  public void test361() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test361"); }

    org.apache.zeppelin.helium.HeliumType heliumType0 = null;
    java.lang.String[][] str_array_array5 = new java.lang.String[][] {  };
    org.apache.zeppelin.helium.HeliumPackage heliumPackage8 = new org.apache.zeppelin.helium.HeliumPackage(heliumType0, "", "", "hi!", "hi!", str_array_array5, "post_exec_dev", "post_exec_dev");
    java.lang.String str9 = heliumPackage8.getArtifact();
    java.lang.String str10 = heliumPackage8.getGroupId();
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj11 = heliumPackage8.getConfig();
    java.lang.String str12 = heliumPackage8.getDescription();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!"+ "'", str9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(map_str_obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + ""+ "'", str12.equals(""));

  }

  @Test
  public void test362() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test362"); }

    org.apache.zeppelin.tabledata.TableDataException tableDataException1 = new org.apache.zeppelin.tabledata.TableDataException("InterpreterGroup_1497134376850_-1874169858");
    java.lang.String str2 = org.apache.zeppelin.interpreter.InterpreterUtils.getMostRelevantMessage((java.lang.Exception)tableDataException1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "InterpreterGroup_1497134376850_-1874169858"+ "'", str2.equals("InterpreterGroup_1497134376850_-1874169858"));

  }

  @Test
  public void test363() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test363"); }

    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry1 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("pre_exec_dev");

  }

  @Test
  public void test364() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test364"); }

    org.apache.zeppelin.dep.RepositoryListener repositoryListener0 = new org.apache.zeppelin.dep.RepositoryListener();
    org.sonatype.aether.RepositoryEvent repositoryEvent1 = null;
    repositoryListener0.metadataDownloading(repositoryEvent1);
    org.sonatype.aether.RepositoryEvent repositoryEvent3 = null;
    repositoryListener0.metadataDownloaded(repositoryEvent3);
    org.sonatype.aether.RepositoryEvent repositoryEvent5 = null;
    // The following exception was thrown during execution in test generation
    try {
    repositoryListener0.artifactDeploying(repositoryEvent5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test365() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test365"); }

    org.apache.zeppelin.dep.DependencyResolver dependencyResolver1 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134376971_-1963975868");
    dependencyResolver1.addRepo("1", "1", false);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup7 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool8 = interpreterGroup7.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry10 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup7.setInterpreterHookRegistry(interpreterHookRegistry10);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption13 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption14 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption13);
    boolean b15 = interpreterGroup7.contains((java.lang.Object)interpreterOption13);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup16 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool17 = interpreterGroup16.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry19 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup16.setInterpreterHookRegistry(interpreterHookRegistry19);
    interpreterGroup7.setInterpreterHookRegistry(interpreterHookRegistry19);
    java.lang.String str22 = interpreterGroup7.toString();
    java.util.Map<java.lang.String,org.apache.zeppelin.interpreter.InterpreterGroup> map_str_interpreterGroup23 = null;
    interpreterGroup7.close(map_str_interpreterGroup23, "{}", "InterpreterGroup_1497134350938_711831855");
    java.util.Set<java.lang.String> set_str27 = interpreterGroup7.keySet();
    java.util.List<java.io.File> list_file28 = dependencyResolver1.load("InterpreterGroup_1497134369176_-1878842789", (java.util.Collection<java.lang.String>)set_str27);
    java.util.List<org.sonatype.aether.repository.RemoteRepository> list_remoteRepository29 = dependencyResolver1.getRepos();
    java.net.URL uRL30 = null;
    // The following exception was thrown during execution in test generation
    try {
    dependencyResolver1.setProxy(uRL30, "InterpreterGroup_1497134379015_-1012113726", "InterpreterGroup_1497134408026_-794939986");
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "{}"+ "'", str22.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_remoteRepository29);

  }

  @Test
  public void test366() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test366"); }

    org.slf4j.Logger logger0 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream1 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger0);
    interpreterOutputStream1.ignoreLeadingNewLinesFromScalaReporter();
    interpreterOutputStream1.write((-1));

  }

  @Test
  public void test367() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test367"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool3 = interpreterGroup2.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry5 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup2.setInterpreterHookRegistry(interpreterHookRegistry5);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption8 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption9 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption8);
    boolean b10 = interpreterGroup2.contains((java.lang.Object)interpreterOption8);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup11 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool12 = interpreterGroup11.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry14 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup11.setInterpreterHookRegistry(interpreterHookRegistry14);
    interpreterGroup2.setInterpreterHookRegistry(interpreterHookRegistry14);
    java.lang.String str17 = interpreterGroup2.toString();
    java.util.Map<java.lang.String,org.apache.zeppelin.interpreter.InterpreterGroup> map_str_interpreterGroup18 = null;
    interpreterGroup2.close(map_str_interpreterGroup18, "{}", "InterpreterGroup_1497134350938_711831855");
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry22 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("InterpreterGroup_1497134421659_488496160", angularObjectRegistryListener1, interpreterGroup2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "{}"+ "'", str17.equals("{}"));

  }

  @Test
  public void test368() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test368"); }

    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry1 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("InterpreterGroup_1497134350938_711831855");
    java.lang.String str5 = interpreterHookRegistry1.get("{envName=zeppelin.interpreter.port, propertyName=<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>, defaultValue={}, description=           anonymous}", "InterpreterGroup_1497134376971_-1963975868", "UsernamePassword{username='existing_process', password='post_exec_dev'}");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str5);

  }

  @Test
  public void test369() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test369"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource1 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource1, resource_array0);
    boolean b3 = arraylist_resource1.isEmpty();
    org.apache.zeppelin.dep.DependencyContext dependencyContext5 = new org.apache.zeppelin.dep.DependencyContext("hi!");
    boolean b6 = arraylist_resource1.equals((java.lang.Object)"hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test370() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test370"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory1 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService3 = executorFactory1.createOrGet("{}");
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory6 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService8 = executorFactory6.createOrGet("{}");
    java.util.Map<java.lang.String,java.lang.String> map_str_str13 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener15 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener16 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess18 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str13, 59683, remoteInterpreterProcessListener15, applicationEventListener16, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterManagedProcess18.stop();
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory21 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService24 = executorFactory21.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory25 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.Scheduler scheduler27 = schedulerFactory25.createOrGetFIFOScheduler("InterpreterGroup_1497134361189_-653890590");
    org.apache.zeppelin.scheduler.FIFOScheduler fIFOScheduler28 = new org.apache.zeppelin.scheduler.FIFOScheduler("hi!", executorService24, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory25);
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler30 = new org.apache.zeppelin.scheduler.RemoteScheduler("InterpreterGroup_1497134410092_-1974466412", executorService8, "InterpreterGroup_1497134376850_-1874169858", (org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess18, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory25, (int)(short)0);
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory32 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService35 = executorFactory32.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess37 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory38 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler40 = new org.apache.zeppelin.scheduler.RemoteScheduler("zeppelin.interpreter.host", executorService35, "pre_exec_dev", remoteInterpreterProcess37, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory38, (int)(short)1);
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler42 = new org.apache.zeppelin.scheduler.RemoteScheduler("InterpreterGroup_1497134377883_708078564", executorService3, "InterpreterGroup_1497134410739_-1534144333", (org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess18, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory38, (int)'#');
    org.apache.zeppelin.scheduler.Job job43 = null;
    // The following exception was thrown during execution in test generation
    try {
    remoteScheduler42.submit(job43);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService35);

  }

  @Test
  public void test371() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test371"); }

    org.apache.zeppelin.dep.RepositoryListener repositoryListener0 = new org.apache.zeppelin.dep.RepositoryListener();
    org.sonatype.aether.RepositoryEvent repositoryEvent1 = null;
    repositoryListener0.metadataDownloaded(repositoryEvent1);
    org.sonatype.aether.RepositoryEvent repositoryEvent3 = null;
    // The following exception was thrown during execution in test generation
    try {
    repositoryListener0.artifactDeployed(repositoryEvent3);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test372() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test372"); }

    org.apache.zeppelin.helium.HeliumType heliumType0 = null;
    java.lang.String[][] str_array_array5 = new java.lang.String[][] {  };
    org.apache.zeppelin.helium.HeliumPackage heliumPackage8 = new org.apache.zeppelin.helium.HeliumPackage(heliumType0, "", "", "hi!", "hi!", str_array_array5, "post_exec_dev", "post_exec_dev");
    java.lang.String str9 = heliumPackage8.getArtifact();
    java.lang.String str10 = heliumPackage8.getGroupId();
    java.lang.String str11 = heliumPackage8.getPublishedDate();
    java.lang.String str12 = heliumPackage8.getDescription();
    java.lang.String str13 = heliumPackage8.getLicense();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!"+ "'", str9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + ""+ "'", str12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "post_exec_dev"+ "'", str13.equals("post_exec_dev"));

  }

  @Test
  public void test373() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test373"); }

    org.apache.zeppelin.dep.DependencyResolver dependencyResolver1 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134376971_-1963975868");
    dependencyResolver1.addRepo("1", "1", false);
    java.net.URL uRL6 = null;
    // The following exception was thrown during execution in test generation
    try {
    dependencyResolver1.setProxy(uRL6, "InterpreterGroup_1497134379015_-1012113726", "InterpreterGroup_1497134410025_-620513103");
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test374() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test374"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet4.filterByName("InterpreterGroup_1497134350938_711831855");
    org.apache.zeppelin.resource.ResourceSet resourceSet8 = resourceSet4.filterByName("InterpreterGroup_1497134350938_711831855");
    org.apache.zeppelin.resource.ResourceSet resourceSet10 = resourceSet4.filterByName("AngularObject{noteId='null', paragraphId='null', object=null, name='null'}");
    java.lang.Object[] obj_array11 = resourceSet4.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);

  }

  @Test
  public void test375() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test375"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet4.filterByName("InterpreterGroup_1497134350938_711831855");
    // The following exception was thrown during execution in test generation
    try {
    java.util.List<org.apache.zeppelin.resource.Resource> list_resource9 = resourceSet6.subList(1, 3);
      org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException");
    } catch (java.lang.IndexOutOfBoundsException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);

  }

  @Test
  public void test376() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test376"); }

    java.lang.String[] str_array1 = org.apache.zeppelin.display.Input.splitPipe("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array1);

  }

  @Test
  public void test377() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test377"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener4 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry5 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener4);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry8 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry5, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject10 = heliumAppAngularObjectRegistry8.get("");
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener18 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry19 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener18);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry22 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry19, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject24 = heliumAppAngularObjectRegistry22.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput25 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext26 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry22, interpreterOutput25);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener27 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener28 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput29 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener27, interpreterOutputChangeListener28);
    org.apache.zeppelin.helium.ApplicationContext applicationContext30 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry22, interpreterOutput29);
    org.apache.zeppelin.helium.ApplicationContext applicationContext31 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134386032_1263213569", "InterpreterGroup_1497134387007_1195822394", heliumAppAngularObjectRegistry8, interpreterOutput29);
    java.net.URL uRL32 = null;
    interpreterOutput29.write(uRL32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject24);

  }

  @Test
  public void test378() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test378"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    boolean b6 = resourceSet2.contains((java.lang.Object)"zeppelin.interpreter.port");
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.resource.Resource resource7 = resourceSet2.getFirst();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test379() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test379"); }

    org.apache.zeppelin.scheduler.Job job0 = null;
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.scheduler.JobProgressPoller jobProgressPoller2 = new org.apache.zeppelin.scheduler.JobProgressPoller(job0, (long)3);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test380() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test380"); }

    org.apache.zeppelin.helium.HeliumType heliumType0 = null;
    java.lang.String[][] str_array_array5 = new java.lang.String[][] {  };
    org.apache.zeppelin.helium.HeliumPackage heliumPackage8 = new org.apache.zeppelin.helium.HeliumPackage(heliumType0, "", "", "hi!", "hi!", str_array_array5, "post_exec_dev", "post_exec_dev");
    java.lang.String str9 = heliumPackage8.getGroupId();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str9);

  }

  @Test
  public void test381() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test381"); }

    org.apache.zeppelin.resource.LocalResourcePool localResourcePool1 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.resource.Resource resource5 = localResourcePool1.get("hi!", "zeppelin.interpreter.host", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.Resource resource9 = localResourcePool1.get("", "", "InterpreterGroup_1497134428211_-136380945");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource9);

  }

  @Test
  public void test382() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test382"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.resource.Resource resource39 = localResourcePool29.get("<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>", "org.apache.zeppelin.interpreter.InterpreterException: ", "<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.dep.RepositoryListener repositoryListener43 = new org.apache.zeppelin.dep.RepositoryListener();
    org.sonatype.aether.RepositoryEvent repositoryEvent44 = null;
    repositoryListener43.metadataDownloading(repositoryEvent44);
    org.sonatype.aether.RepositoryEvent repositoryEvent46 = null;
    repositoryListener43.metadataDownloaded(repositoryEvent46);
    localResourcePool29.put("InterpreterGroup_1497134361094_1261121192", "InterpreterGroup_1497134419879_18384985", "<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>", (java.lang.Object)repositoryListener43);
    org.sonatype.aether.RepositoryEvent repositoryEvent49 = null;
    // The following exception was thrown during execution in test generation
    try {
    repositoryListener43.artifactDownloading(repositoryEvent49);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource39);

  }

  @Test
  public void test383() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test383"); }

    java.nio.ByteBuffer byteBuffer0 = null;
    org.apache.zeppelin.resource.ByteBufferInputStream byteBufferInputStream1 = new org.apache.zeppelin.resource.ByteBufferInputStream(byteBuffer0);
    int i2 = byteBufferInputStream1.available();
    boolean b3 = byteBufferInputStream1.markSupported();
    long long5 = byteBufferInputStream1.skip((long)(byte)-1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(long5 == 0L);

  }

  @Test
  public void test384() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test384"); }

    org.apache.zeppelin.resource.Resource[] resource_array6 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource7 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource7, resource_array6);
    org.apache.zeppelin.resource.Resource[] resource_array9 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource10 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b11 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource10, resource_array9);
    boolean b12 = arraylist_resource10.isEmpty();
    boolean b13 = linkedlist_resource7.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource10);
    org.apache.zeppelin.resource.Resource resource14 = null;
    boolean b15 = linkedlist_resource7.add(resource14);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource16 = linkedlist_resource7.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo17 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i18 = linkedlist_resource7.indexOf((java.lang.Object)authenticationInfo17);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj19 = null;
    org.apache.zeppelin.display.GUI gUI20 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener22 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry23 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener22);
    org.apache.zeppelin.display.AngularObject angularObject28 = angularObjectRegistry23.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool30 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array31 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner32 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner32, interpreterContextRunner_array31);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput34 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController35 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext36 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo17, map_str_obj19, gUI20, angularObjectRegistry23, (org.apache.zeppelin.resource.ResourcePool)localResourcePool30, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner32, interpreterOutput34, remoteWorksController35);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry37 = interpreterContext36.getAngularObjectRegistry();
    java.lang.String str38 = interpreterContext36.getParagraphTitle();
    org.apache.zeppelin.display.GUI gUI39 = interpreterContext36.getGui();
    java.lang.String str40 = interpreterContext36.getParagraphText();
    org.apache.zeppelin.resource.Resource[] resource_array42 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource43 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b44 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource43, resource_array42);
    org.apache.zeppelin.resource.Resource[] resource_array45 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource46 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b47 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource46, resource_array45);
    boolean b48 = arraylist_resource46.isEmpty();
    boolean b49 = linkedlist_resource43.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource46);
    org.apache.zeppelin.display.ui.OptionInput.ParamOption paramOption50 = null;
    org.apache.zeppelin.display.ui.OptionInput.ParamOption[] paramOption_array51 = new org.apache.zeppelin.display.ui.OptionInput.ParamOption[] { paramOption50 };
    org.apache.zeppelin.display.ui.Select select52 = org.apache.zeppelin.display.Input.select("post_exec_dev", (java.lang.Object)linkedlist_resource43, paramOption_array51);
    org.apache.zeppelin.display.ui.Select select53 = org.apache.zeppelin.display.Input.select("InterpreterGroup_1497134371990_1999798592", (java.lang.Object)str40, paramOption_array51);
    java.lang.String str54 = select53.getArgument();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObjectRegistry37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "pre_exec_dev"+ "'", str38.equals("pre_exec_dev"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(gUI39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "[null]"+ "'", str40.equals("[null]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(paramOption_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(select52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(select53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str54);

  }

  @Test
  public void test385() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test385"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    linkedlist_resource1.clear();
    java.lang.Object obj9 = linkedlist_resource1.clone();
    org.apache.zeppelin.resource.ResourceSet resourceSet10 = new org.apache.zeppelin.resource.ResourceSet((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj9);

  }

  @Test
  public void test386() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test386"); }

    org.apache.zeppelin.user.UsernamePassword usernamePassword2 = new org.apache.zeppelin.user.UsernamePassword("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    usernamePassword2.setPassword("post_exec_dev");
    usernamePassword2.setUsername("hi!");
    usernamePassword2.setPassword("pre_exec_dev");
    java.lang.String str9 = usernamePassword2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "UsernamePassword{username='hi!', password='pre_exec_dev'}"+ "'", str9.equals("UsernamePassword{username='hi!', password='pre_exec_dev'}"));

  }

  @Test
  public void test387() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test387"); }

    org.apache.zeppelin.dep.DependencyResolver dependencyResolver1 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134376971_-1963975868");
    dependencyResolver1.addRepo("1", "1", false);
    dependencyResolver1.addRepo("InterpreterGroup_1497134373781_-855626841", "scoped", false);
    org.sonatype.aether.repository.Authentication authentication13 = null;
    org.sonatype.aether.repository.Proxy proxy14 = null;
    dependencyResolver1.addRepo("InterpreterGroup_1497134385425_-1840284417", "zeppelin.repl.result", false, authentication13, proxy14);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup17 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool18 = interpreterGroup17.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry20 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup17.setInterpreterHookRegistry(interpreterHookRegistry20);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption23 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption24 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption23);
    boolean b25 = interpreterGroup17.contains((java.lang.Object)interpreterOption23);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup26 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool27 = interpreterGroup26.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry29 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup26.setInterpreterHookRegistry(interpreterHookRegistry29);
    interpreterGroup17.setInterpreterHookRegistry(interpreterHookRegistry29);
    java.util.Set<java.lang.String> set_str32 = interpreterGroup17.keySet();
    // The following exception was thrown during execution in test generation
    try {
    java.util.List<org.sonatype.aether.resolution.ArtifactResult> list_artifactResult33 = dependencyResolver1.getArtifactsWithDep("InterpreterGroup_1497134421662_940144173", (java.util.Collection<java.lang.String>)set_str32);
      org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_str32);

  }

  @Test
  public void test388() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test388"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory0 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService2 = executorFactory0.createOrGet("hi!");
    executorFactory0.shutdown("InterpreterGroup_1497134371990_1999798592");
    // The following exception was thrown during execution in test generation
    try {
    executorFactory0.shutdownAll();
      org.junit.Assert.fail("Expected exception of type java.util.ConcurrentModificationException");
    } catch (java.util.ConcurrentModificationException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService2);

  }

  @Test
  public void test389() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test389"); }

    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.display.GUI gUI1 = org.apache.zeppelin.display.GUI.fromJson("InterpreterGroup_1497134367518_-1467696533");
      org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException");
    } catch (com.google.gson.JsonSyntaxException e) {
      // Expected exception.
    }

  }

  @Test
  public void test390() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test390"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource10 = linkedlist_resource1.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo11 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i12 = linkedlist_resource1.indexOf((java.lang.Object)authenticationInfo11);
    boolean b13 = authenticationInfo11.isAnonymous();
    authenticationInfo11.setTicket("InterpreterGroup_1497134419879_-322357118");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);

  }

  @Test
  public void test391() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test391"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterContextRunner remoteInterpreterContextRunner2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterContextRunner("InterpreterGroup_1497134410397_-259667388", "InterpreterGroup_1497134371990_1999798592");

  }

  @Test
  public void test392() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test392"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener0 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener1 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener0, applicationEventListener1);
    remoteInterpreterEventPoller2.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    boolean b8 = interpreterGroup4.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str9 = interpreterGroup4.getId();
    remoteInterpreterEventPoller2.setInterpreterGroup(interpreterGroup4);
    remoteInterpreterEventPoller2.run();
    java.util.Map<java.lang.String,java.lang.String> map_str_str15 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener17 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener18 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess20 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str15, 59683, remoteInterpreterProcessListener17, applicationEventListener18, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterEventPoller2.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess20);
    int i22 = remoteInterpreterManagedProcess20.getConnectTimeout();
    org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool interpreterContextRunnerPool23 = remoteInterpreterManagedProcess20.getInterpreterContextRunnerPool();
    interpreterContextRunnerPool23.clear("InterpreterGroup_1497134411957_9600749");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "InterpreterGroup_1497134431334_-763290912"+ "'", str9.equals("InterpreterGroup_1497134431334_-763290912"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 59683);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunnerPool23);

  }

  @Test
  public void test393() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test393"); }

    org.apache.zeppelin.helium.ApplicationException applicationException1 = new org.apache.zeppelin.helium.ApplicationException("InterpreterGroup_1497134410556_1275540258");
    java.lang.String str2 = applicationException1.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "org.apache.zeppelin.helium.ApplicationException: InterpreterGroup_1497134410556_1275540258"+ "'", str2.equals("org.apache.zeppelin.helium.ApplicationException: InterpreterGroup_1497134410556_1275540258"));

  }

  @Test
  public void test394() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test394"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry1 = interpreterGroup0.getInterpreterHookRegistry();
    java.util.Enumeration<java.util.List<org.apache.zeppelin.interpreter.Interpreter>> enumeration_list_interpreter2 = interpreterGroup0.elements();
    boolean b3 = interpreterGroup0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(enumeration_list_interpreter2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);

  }

  @Test
  public void test395() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test395"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener7 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry8 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener7);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry11 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry8, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject13 = heliumAppAngularObjectRegistry11.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput14 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext15 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry11, interpreterOutput14);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener16 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener17 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput18 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener16, interpreterOutputChangeListener17);
    org.apache.zeppelin.helium.ApplicationContext applicationContext19 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry11, interpreterOutput18);
    org.apache.zeppelin.display.AngularObject angularObject21 = heliumAppAngularObjectRegistry11.remove("InterpreterGroup_1497134421659_488496160");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject21);

  }

  @Test
  public void test396() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test396"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    interpreterOption6.setUserImpersonate(false);
    boolean b11 = interpreterOption6.perUserShared();
    interpreterOption6.setRemote(false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);

  }

  @Test
  public void test397() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test397"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory1 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService4 = executorFactory1.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess6 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory7 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler9 = new org.apache.zeppelin.scheduler.RemoteScheduler("zeppelin.interpreter.host", executorService4, "pre_exec_dev", remoteInterpreterProcess6, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory7, (int)(short)1);
    remoteScheduler9.stop();
    java.util.Collection<org.apache.zeppelin.scheduler.Job> collection_job11 = remoteScheduler9.getJobsRunning();
    remoteScheduler9.run();
    java.util.Collection<org.apache.zeppelin.scheduler.Job> collection_job13 = remoteScheduler9.getJobsRunning();
    org.apache.zeppelin.scheduler.Job job15 = remoteScheduler9.removeFromWaitingQueue("InterpreterGroup_1497134428361_-2114379874");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_job11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_job13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(job15);

  }

  @Test
  public void test398() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test398"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup9 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool10 = interpreterGroup9.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry12 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup9.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry12);
    java.lang.String str15 = interpreterGroup0.toString();
    boolean b16 = interpreterGroup0.isEmpty();
    java.util.Properties properties17 = interpreterGroup0.getProperty();
    boolean b18 = interpreterGroup0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "{}"+ "'", str15.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(properties17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);

  }

  @Test
  public void test399() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test399"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory2 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService4 = executorFactory2.createOrGet("hi!");
    java.util.concurrent.ExecutorService executorService6 = executorFactory2.createOrGet("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory7 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.FIFOScheduler fIFOScheduler8 = new org.apache.zeppelin.scheduler.FIFOScheduler("InterpreterGroup_1497134374771_373499119", executorService6, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory7);
    java.util.Map<java.lang.String,java.lang.String> map_str_str13 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener15 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener16 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess18 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str13, 59683, remoteInterpreterProcessListener15, applicationEventListener16, "InterpreterGroup_1497134377064_955397632");
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory21 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService24 = executorFactory21.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess26 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory27 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler29 = new org.apache.zeppelin.scheduler.RemoteScheduler("zeppelin.interpreter.host", executorService24, "pre_exec_dev", remoteInterpreterProcess26, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory27, (int)(short)1);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess31 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory32 = org.apache.zeppelin.scheduler.SchedulerFactory.singleton();
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess35 = null;
    org.apache.zeppelin.scheduler.Scheduler scheduler37 = schedulerFactory32.createOrGetRemoteScheduler("{}", "_GLOBAL_", remoteInterpreterProcess35, (int)(short)1);
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler39 = new org.apache.zeppelin.scheduler.RemoteScheduler("1", executorService24, "hi!", remoteInterpreterProcess31, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory32, 100);
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler41 = new org.apache.zeppelin.scheduler.RemoteScheduler("InterpreterGroup_1497134404697_-764373822", executorService6, "InterpreterGroup_1497134377883_708078564", (org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess18, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory32, (-1));
    schedulerFactory32.destroy();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(schedulerFactory32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler37);

  }

  @Test
  public void test400() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test400"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    interpreterResultMessageOutput2.flush();
    boolean b4 = interpreterResultMessageOutput2.isAppendSupported();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type5 = org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener6 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput7 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type5, interpreterResultMessageOutputListener6);
    interpreterResultMessageOutput2.setType(type5);
    boolean b9 = interpreterResultMessageOutput2.isAppendSupported();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code10 = org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup11 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry12 = interpreterGroup11.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array13 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource14 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource14, resource_array13);
    org.apache.zeppelin.resource.Resource[] resource_array16 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource17 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource17, resource_array16);
    boolean b19 = arraylist_resource17.isEmpty();
    boolean b20 = linkedlist_resource14.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource17);
    linkedlist_resource14.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter22 = interpreterGroup11.get((java.lang.Object)linkedlist_resource14);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type23 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter24 = interpreterGroup11.get((java.lang.Object)type23);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult26 = new org.apache.zeppelin.interpreter.InterpreterResult(code10, type23, "shared");
    interpreterResultMessageOutput2.setType(type23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    org.junit.Assert.assertTrue("'" + type5 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR + "'", type5.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    org.junit.Assert.assertTrue("'" + code10 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE + "'", code10.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter22);
    org.junit.Assert.assertTrue("'" + type23 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type23.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter24);

  }

  @Test
  public void test401() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test401"); }

    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource remoteZeppelinServerResource0 = new org.apache.zeppelin.interpreter.RemoteZeppelinServerResource();
    java.lang.String str1 = remoteZeppelinServerResource0.getOwnerKey();
    remoteZeppelinServerResource0.setOwnerKey("InterpreterGroup_1497134410556_1275540258");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str1);

  }

  @Test
  public void test402() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test402"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.resource.Resource resource39 = localResourcePool29.get("<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>", "org.apache.zeppelin.interpreter.InterpreterException: ", "<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.dep.RepositoryListener repositoryListener43 = new org.apache.zeppelin.dep.RepositoryListener();
    org.sonatype.aether.RepositoryEvent repositoryEvent44 = null;
    repositoryListener43.metadataDownloading(repositoryEvent44);
    org.sonatype.aether.RepositoryEvent repositoryEvent46 = null;
    repositoryListener43.metadataDownloaded(repositoryEvent46);
    localResourcePool29.put("InterpreterGroup_1497134361094_1261121192", "InterpreterGroup_1497134419879_18384985", "<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>", (java.lang.Object)repositoryListener43);
    org.sonatype.aether.RepositoryEvent repositoryEvent49 = null;
    // The following exception was thrown during execution in test generation
    try {
    repositoryListener43.metadataInvalid(repositoryEvent49);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource39);

  }

  @Test
  public void test403() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test403"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage3 = interpreterResultMessageOutput2.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage4 = interpreterResultMessageOutput2.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage5 = interpreterResultMessageOutput2.toInterpreterResultMessage();
    java.io.File file6 = null;
    interpreterResultMessageOutput2.write(file6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage5);

  }

  @Test
  public void test404() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test404"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = interpreterGroup2.getInterpreterHookRegistry();
    java.lang.String str4 = interpreterGroup2.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener1, interpreterGroup2);
    remoteAngularObjectRegistry5.removeAllAndNotifyRemoteProcess("shared", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}");
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry11 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry((org.apache.zeppelin.display.AngularObjectRegistry)remoteAngularObjectRegistry5, "InterpreterGroup_1497134384931_-1968252549", "pre_exec_dev");
    java.util.List<org.apache.zeppelin.display.AngularObject> list_angularObject13 = remoteAngularObjectRegistry5.getAllWithGlobal("InterpreterGroup_1497134408853_-1621173162");
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener15 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener16 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller17 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener15, applicationEventListener16);
    remoteInterpreterEventPoller17.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup19 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool20 = interpreterGroup19.getResourcePool();
    boolean b23 = interpreterGroup19.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str24 = interpreterGroup19.getId();
    remoteInterpreterEventPoller17.setInterpreterGroup(interpreterGroup19);
    org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage invokeResourceMethodEventMessage26 = null;
    java.lang.Object obj27 = null;
    remoteInterpreterEventPoller17.sendInvokeMethodResult(invokeResourceMethodEventMessage26, obj27);
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.display.AngularObject angularObject31 = remoteAngularObjectRegistry5.addAndNotifyRemoteProcess("InterpreterGroup_1497134423638_1902175415", obj27, "{\"params\":{},\"forms\":{\"[null]\":{\"type\":\"TextBox\",\"name\":\"[null]\",\"displayName\":\"[null]\",\"defaultValue\":\"\",\"hidden\":false}}}", "InterpreterGroup_1497134429772_87627380");
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}"+ "'", str4.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_angularObject13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "InterpreterGroup_1497134431491_111136190"+ "'", str24.equals("InterpreterGroup_1497134431491_111136190"));

  }

  @Test
  public void test405() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test405"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.interpreter.InterpreterContext.set(interpreterContext35);
    org.apache.zeppelin.interpreter.InterpreterContext.set(interpreterContext35);
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo38 = interpreterContext35.getAuthenticationInfo();
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj39 = interpreterContext35.getConfig();
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput40 = interpreterContext35.out();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(map_str_obj39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterOutput40);

  }

  @Test
  public void test406() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test406"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    interpreterResultMessageOutput2.flush();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type4 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener5 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput6 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type4, interpreterResultMessageOutputListener5);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type7 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput6.setType(type7);
    interpreterResultMessageOutput6.clear();
    interpreterResultMessageOutput6.close();
    interpreterResultMessageOutput6.close();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup12 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str13 = interpreterGroup12.getId();
    boolean b15 = interpreterGroup12.equals((java.lang.Object)0L);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup16 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool17 = interpreterGroup16.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry19 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup16.setInterpreterHookRegistry(interpreterHookRegistry19);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry21 = interpreterGroup16.getAngularObjectRegistry();
    boolean b23 = interpreterGroup12.remove((java.lang.Object)interpreterGroup16, (java.lang.Object)10.0d);
    boolean b24 = interpreterGroup16.isEmpty();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type25 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener26 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput27 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type25, interpreterResultMessageOutputListener26);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage28 = interpreterResultMessageOutput27.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage29 = interpreterResultMessageOutput27.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener30 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput31 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener30);
    interpreterOutput31.addResourceSearchPath("isolated");
    byte[] byte_array34 = interpreterOutput31.toByteArray();
    interpreterResultMessageOutput27.write(byte_array34);
    boolean b36 = interpreterGroup16.containsKey((java.lang.Object)interpreterResultMessageOutput27);
    byte[] byte_array37 = interpreterResultMessageOutput27.toByteArray();
    interpreterResultMessageOutput6.write(byte_array37);
    interpreterResultMessageOutput2.write(byte_array37, 59683, (int)'#');
    interpreterResultMessageOutput2.close();
    org.junit.Assert.assertTrue("'" + type7 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type7.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "InterpreterGroup_1497134431690_-921036455"+ "'", str13.equals("InterpreterGroup_1497134431690_-921036455"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistry21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array37);

  }

  @Test
  public void test407() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test407"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = interpreterGroup2.getInterpreterHookRegistry();
    java.lang.String str4 = interpreterGroup2.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener1, interpreterGroup2);
    org.apache.zeppelin.display.AngularObject angularObject10 = remoteAngularObjectRegistry5.remove("org.apache.zeppelin.interpreter.InterpreterException: ", "", "post_exec_dev", true);
    org.apache.zeppelin.display.AngularObject angularObject15 = remoteAngularObjectRegistry5.remove("[null]", "shared", "post_exec_dev", true);
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener16 = remoteAngularObjectRegistry5.getListener();
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool19 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.resource.Resource resource21 = localResourcePool19.remove("InterpreterGroup_1497134350790_986318210");
    org.apache.zeppelin.display.AngularObject angularObject24 = remoteAngularObjectRegistry5.add("InterpreterGroup_1497134404697_-764373822", (java.lang.Object)"InterpreterGroup_1497134350790_986318210", "InterpreterGroup_1497134420494_1077107902", "");
    java.util.List<org.apache.zeppelin.display.AngularObject> list_angularObject26 = remoteAngularObjectRegistry5.getAllWithGlobal("InterpreterGroup_1497134404697_-764373822");
    org.apache.zeppelin.display.AngularObject angularObject30 = remoteAngularObjectRegistry5.removeAndNotifyRemoteProcess("InterpreterGroup_1497134379015_-1012113726", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "InterpreterGroup_1497134425413_1534169025");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}"+ "'", str4.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistryListener16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_angularObject26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject30);

  }

  @Test
  public void test408() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test408"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = interpreterGroup2.getInterpreterHookRegistry();
    java.lang.String str4 = interpreterGroup2.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener1, interpreterGroup2);
    org.apache.zeppelin.display.AngularObject angularObject10 = remoteAngularObjectRegistry5.remove("_GLOBAL_", "post_exec_dev", "_GLOBAL_", false);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry13 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry((org.apache.zeppelin.display.AngularObjectRegistry)remoteAngularObjectRegistry5, "InterpreterGroup_1497134350790_986318210", "InterpreterGroup_1497134367518_-1467696533");
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption16 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption17 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption16);
    interpreterOption17.setHost("[null]");
    interpreterOption17.setExistingProcess(false);
    org.apache.zeppelin.display.AngularObject angularObject22 = heliumAppAngularObjectRegistry13.add("pre_exec_dev", (java.lang.Object)interpreterOption17);
    boolean b23 = interpreterOption17.perNoteScoped();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}"+ "'", str4.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);

  }

  @Test
  public void test409() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test409"); }

    org.apache.zeppelin.dep.DependencyResolver dependencyResolver1 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134376971_-1963975868");
    dependencyResolver1.addRepo("1", "1", false);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup7 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool8 = interpreterGroup7.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry10 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup7.setInterpreterHookRegistry(interpreterHookRegistry10);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption13 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption14 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption13);
    boolean b15 = interpreterGroup7.contains((java.lang.Object)interpreterOption13);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup16 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool17 = interpreterGroup16.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry19 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup16.setInterpreterHookRegistry(interpreterHookRegistry19);
    interpreterGroup7.setInterpreterHookRegistry(interpreterHookRegistry19);
    java.lang.String str22 = interpreterGroup7.toString();
    java.util.Map<java.lang.String,org.apache.zeppelin.interpreter.InterpreterGroup> map_str_interpreterGroup23 = null;
    interpreterGroup7.close(map_str_interpreterGroup23, "{}", "InterpreterGroup_1497134350938_711831855");
    java.util.Set<java.lang.String> set_str27 = interpreterGroup7.keySet();
    java.util.List<java.io.File> list_file28 = dependencyResolver1.load("InterpreterGroup_1497134369176_-1878842789", (java.util.Collection<java.lang.String>)set_str27);
    java.util.List<org.sonatype.aether.repository.RemoteRepository> list_remoteRepository29 = dependencyResolver1.getRepos();
    dependencyResolver1.addRepo("{envName=InterpreterGroup_1497134367518_-1467696533, propertyName=AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}, defaultValue=pre_exec, description=InterpreterGroup_1497134393145_-2056563636}", "InterpreterGroup_1497134361094_1261121192", true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "{}"+ "'", str22.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_str27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_remoteRepository29);

  }

  @Test
  public void test410() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test410"); }

    org.apache.zeppelin.resource.ResourcePoolConnector resourcePoolConnector1 = null;
    org.apache.zeppelin.resource.DistributedResourcePool distributedResourcePool2 = new org.apache.zeppelin.resource.DistributedResourcePool("InterpreterGroup_1497134410556_1275540258", resourcePoolConnector1);
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.resource.Resource resource4 = distributedResourcePool2.get("InterpreterGroup_1497134408379_1574252163");
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test411() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test411"); }

    org.apache.zeppelin.interpreter.InterpreterProperty interpreterProperty4 = new org.apache.zeppelin.interpreter.InterpreterProperty("zeppelin.interpreter.port", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "{}", "anonymous");
    interpreterProperty4.setDescription("{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}");
    interpreterProperty4.setPropertyName("scoped");
    interpreterProperty4.setEnvName("shared");

  }

  @Test
  public void test412() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test412"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener0 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener1 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener0, applicationEventListener1);
    remoteInterpreterEventPoller2.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    boolean b8 = interpreterGroup4.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str9 = interpreterGroup4.getId();
    remoteInterpreterEventPoller2.setInterpreterGroup(interpreterGroup4);
    remoteInterpreterEventPoller2.run();
    java.util.Map<java.lang.String,java.lang.String> map_str_str15 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener17 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener18 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess20 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str15, 59683, remoteInterpreterProcessListener17, applicationEventListener18, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterEventPoller2.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess20);
    int i22 = remoteInterpreterManagedProcess20.dereference();
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client23 = null;
    remoteInterpreterManagedProcess20.releaseClient(client23);
    java.lang.String str25 = remoteInterpreterManagedProcess20.getHost();
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client26 = remoteInterpreterManagedProcess20.getClient();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "InterpreterGroup_1497134431801_1749375222"+ "'", str9.equals("InterpreterGroup_1497134431801_1749375222"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "localhost"+ "'", str25.equals("localhost"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(client26);

  }

  @Test
  public void test413() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test413"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet2.filterByName("anonymous");
    org.apache.zeppelin.resource.ResourceSet resourceSet7 = new org.apache.zeppelin.resource.ResourceSet((java.util.Collection<org.apache.zeppelin.resource.Resource>)resourceSet6);
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.resource.Resource resource8 = resourceSet6.getFirst();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);

  }

  @Test
  public void test414() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test414"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = interpreterGroup2.getInterpreterHookRegistry();
    java.lang.String str4 = interpreterGroup2.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener1, interpreterGroup2);
    org.apache.zeppelin.display.AngularObject angularObject10 = remoteAngularObjectRegistry5.remove("org.apache.zeppelin.interpreter.InterpreterException: ", "", "post_exec_dev", true);
    org.apache.zeppelin.display.AngularObject angularObject14 = remoteAngularObjectRegistry5.get("InterpreterGroup_1497134371990_1999798592", "InterpreterGroup_1497134374771_373499119", "[null]");
    org.apache.zeppelin.display.AngularObject angularObject18 = remoteAngularObjectRegistry5.remove("scoped", "InterpreterGroup_1497134386032_1263213569", "AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}");
    org.apache.zeppelin.display.AngularObject angularObject22 = remoteAngularObjectRegistry5.remove("InterpreterGroup_1497134405350_1754624058", "InterpreterGroup_1497134393545_537212119", "InterpreterGroup_1497134376971_-1963975868");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}"+ "'", str4.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject22);

  }

  @Test
  public void test415() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test415"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.interpreter.InterpreterContext.set(interpreterContext35);
    java.lang.String str37 = interpreterContext35.getReplName();
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput38 = interpreterContext35.out;
    org.apache.zeppelin.interpreter.remote.RemoteEventClientWrapper remoteEventClientWrapper39 = interpreterContext35.getClient();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str37.equals("org.apache.zeppelin.interpreter.InterpreterException: "));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterOutput38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(remoteEventClientWrapper39);

  }

  @Test
  public void test416() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test416"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener1);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry5 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry2, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject7 = heliumAppAngularObjectRegistry5.get("_GLOBAL_");
    java.util.List<org.apache.zeppelin.display.AngularObject> list_angularObject8 = heliumAppAngularObjectRegistry5.getAll();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_angularObject8);

  }

  @Test
  public void test417() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test417"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory1 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService3 = executorFactory1.createOrGet("{}");
    java.util.Map<java.lang.String,java.lang.String> map_str_str8 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener10 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener11 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess13 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str8, 59683, remoteInterpreterProcessListener10, applicationEventListener11, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterManagedProcess13.stop();
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory16 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService19 = executorFactory16.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory20 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.Scheduler scheduler22 = schedulerFactory20.createOrGetFIFOScheduler("InterpreterGroup_1497134361189_-653890590");
    org.apache.zeppelin.scheduler.FIFOScheduler fIFOScheduler23 = new org.apache.zeppelin.scheduler.FIFOScheduler("hi!", executorService19, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory20);
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler25 = new org.apache.zeppelin.scheduler.RemoteScheduler("InterpreterGroup_1497134410092_-1974466412", executorService3, "InterpreterGroup_1497134376850_-1874169858", (org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess13, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory20, (int)(short)0);
    java.util.Map<java.lang.String,java.lang.String> map_str_str31 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener33 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener34 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess36 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str31, 59683, remoteInterpreterProcessListener33, applicationEventListener34, "InterpreterGroup_1497134377064_955397632");
    org.apache.zeppelin.scheduler.Scheduler scheduler38 = schedulerFactory20.createOrGetRemoteScheduler("InterpreterGroup_1497134405331_2118921226", "InterpreterGroup_1497134377064_955397632", (org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess36, (int)(short)1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler38);

  }

  @Test
  public void test418() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test418"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource10 = linkedlist_resource1.iterator();
    org.apache.zeppelin.resource.Resource resource11 = linkedlist_resource1.pop();
    int i12 = linkedlist_resource1.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);

  }

  @Test
  public void test419() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test419"); }

    java.util.Map<java.lang.String,java.lang.String> map_str_str3 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener5 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener6 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess8 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str3, 59683, remoteInterpreterProcessListener5, applicationEventListener6, "InterpreterGroup_1497134377064_955397632");
    int i9 = remoteInterpreterManagedProcess8.getNumActiveClient();
    int i10 = remoteInterpreterManagedProcess8.dereference();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == (-1));

  }

  @Test
  public void test420() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test420"); }

    java.nio.ByteBuffer byteBuffer0 = null;
    org.apache.zeppelin.resource.ByteBufferInputStream byteBufferInputStream1 = new org.apache.zeppelin.resource.ByteBufferInputStream(byteBuffer0);
    int i2 = byteBufferInputStream1.available();
    boolean b3 = byteBufferInputStream1.markSupported();
    byteBufferInputStream1.close();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);

  }

  @Test
  public void test421() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test421"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup9 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool10 = interpreterGroup9.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry12 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup9.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.shutdown();
    java.lang.String str16 = interpreterGroup0.getId();
    interpreterGroup0.shutdown();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "InterpreterGroup_1497134431967_-148002840"+ "'", str16.equals("InterpreterGroup_1497134431967_-148002840"));

  }

  @Test
  public void test422() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test422"); }

    java.nio.ByteBuffer byteBuffer0 = null;
    org.apache.zeppelin.resource.ByteBufferInputStream byteBufferInputStream1 = new org.apache.zeppelin.resource.ByteBufferInputStream(byteBuffer0);
    boolean b2 = byteBufferInputStream1.markSupported();
    byteBufferInputStream1.close();
    int i4 = byteBufferInputStream1.available();
    byteBufferInputStream1.close();
    byteBufferInputStream1.close();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);

  }

  @Test
  public void test423() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test423"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup1 = org.apache.zeppelin.interpreter.InterpreterGroup.getByInterpreterGroupId("anonymous");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterGroup1);

  }

  @Test
  public void test424() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test424"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage3 = interpreterResultMessageOutput2.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage4 = interpreterResultMessageOutput2.toInterpreterResultMessage();
    java.net.URL uRL5 = null;
    interpreterResultMessageOutput2.write(uRL5);
    byte[] byte_array7 = interpreterResultMessageOutput2.toByteArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array7);

  }

  @Test
  public void test425() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test425"); }

    org.slf4j.Logger logger0 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream1 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger0);
    byte[] byte_array5 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream1.write(byte_array5, (int)'a', 3);
    int i9 = interpreterOutputStream1.getMessageLevel();
    interpreterOutputStream1.flush();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 999);

  }

  @Test
  public void test426() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test426"); }

    org.apache.zeppelin.interpreter.remote.ClientFactory clientFactory2 = new org.apache.zeppelin.interpreter.remote.ClientFactory("", 59683);
    org.apache.zeppelin.interpreter.remote.ClientFactory clientFactory5 = new org.apache.zeppelin.interpreter.remote.ClientFactory("post_exec_dev", (int)(short)1);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client6 = null;
    clientFactory5.passivateObject(pooledobject_client6);
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client8 = null;
    clientFactory5.passivateObject(pooledobject_client8);
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client10 = null;
    org.apache.commons.pool2.PooledObject<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client> pooledobject_client11 = clientFactory5.wrap(client10);
    clientFactory2.destroyObject(pooledobject_client11);
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client13 = clientFactory2.create();
      org.junit.Assert.fail("Expected exception of type org.apache.zeppelin.interpreter.InterpreterException");
    } catch (org.apache.zeppelin.interpreter.InterpreterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(pooledobject_client11);

  }

  @Test
  public void test427() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test427"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = interpreterGroup2.getInterpreterHookRegistry();
    java.lang.String str4 = interpreterGroup2.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener1, interpreterGroup2);
    org.apache.zeppelin.display.AngularObject angularObject10 = remoteAngularObjectRegistry5.remove("org.apache.zeppelin.interpreter.InterpreterException: ", "", "post_exec_dev", true);
    org.apache.zeppelin.display.AngularObject angularObject14 = remoteAngularObjectRegistry5.get("InterpreterGroup_1497134371990_1999798592", "InterpreterGroup_1497134374771_373499119", "[null]");
    org.apache.zeppelin.display.AngularObject angularObject18 = remoteAngularObjectRegistry5.remove("scoped", "InterpreterGroup_1497134386032_1263213569", "AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}");
    org.apache.zeppelin.display.AngularObject angularObject22 = remoteAngularObjectRegistry5.get("InterpreterGroup_1497134384931_-1968252549", "InterpreterGroup_1497134431801_1749375222", "InterpreterGroup_1497134384512_-890338748");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}"+ "'", str4.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject22);

  }

  @Test
  public void test428() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test428"); }

    org.apache.zeppelin.scheduler.Job job0 = null;
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.scheduler.JobProgressPoller jobProgressPoller2 = new org.apache.zeppelin.scheduler.JobProgressPoller(job0, (long)2);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test429() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test429"); }

    java.nio.ByteBuffer byteBuffer0 = null;
    org.apache.zeppelin.resource.ByteBufferInputStream byteBufferInputStream1 = new org.apache.zeppelin.resource.ByteBufferInputStream(byteBuffer0);
    boolean b2 = byteBufferInputStream1.markSupported();
    byteBufferInputStream1.close();
    int i4 = byteBufferInputStream1.available();
    boolean b5 = byteBufferInputStream1.markSupported();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);

  }

  @Test
  public void test430() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test430"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    boolean b11 = linkedlist_resource1.contains((java.lang.Object)(-1));
    java.lang.Object obj12 = linkedlist_resource1.clone();
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array13 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter14 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter14, interpreter_array13);
    boolean b16 = linkedlist_resource1.removeAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter14);
    java.lang.String str17 = linkedlist_resource1.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "[null]"+ "'", str17.equals("[null]"));

  }

  @Test
  public void test431() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test431"); }

    org.apache.zeppelin.resource.LocalResourcePool localResourcePool1 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject<java.io.OutputStream> angularobject_outputStream3 = new org.apache.zeppelin.display.AngularObject<java.io.OutputStream>();
    java.lang.String str4 = angularobject_outputStream3.getParagraphId();
    org.apache.zeppelin.display.AngularObjectWatcher angularObjectWatcher5 = null;
    angularobject_outputStream3.removeWatcher(angularObjectWatcher5);
    localResourcePool1.put("InterpreterGroup_1497134410138_-585552671", (java.lang.Object)angularobject_outputStream3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);

  }

  @Test
  public void test432() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test432"); }

    org.apache.zeppelin.dep.DependencyContext dependencyContext1 = new org.apache.zeppelin.dep.DependencyContext("1");
    dependencyContext1.reset();
    org.apache.zeppelin.dep.Repository repository4 = dependencyContext1.addRepo("hi!");
    boolean b5 = repository4.isSnapshot();
    org.apache.zeppelin.dep.Repository repository6 = repository4.snapshot();
    org.apache.zeppelin.dep.Repository repository8 = repository4.url("InterpreterGroup_1497134384931_-1968252549");
    java.lang.String str9 = repository8.getUrl();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "InterpreterGroup_1497134384931_-1968252549"+ "'", str9.equals("InterpreterGroup_1497134384931_-1968252549"));

  }

  @Test
  public void test433() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test433"); }

    org.apache.zeppelin.interpreter.InterpreterProperty interpreterProperty4 = new org.apache.zeppelin.interpreter.InterpreterProperty("zeppelin.interpreter.port", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "{}", "anonymous");
    org.apache.zeppelin.display.GUI gUI5 = new org.apache.zeppelin.display.GUI();
    java.util.LinkedHashMap<java.lang.String,org.apache.zeppelin.display.Input> linkedhashmap_str_input6 = gUI5.getForms();
    java.lang.Object obj9 = gUI5.input("InterpreterGroup_1497134350790_986318210", (java.lang.Object)(byte)1);
    boolean b10 = interpreterProperty4.equals(obj9);
    interpreterProperty4.setPropertyName("InterpreterGroup_1497134429035_-1128988804");
    org.apache.zeppelin.dep.DependencyContext dependencyContext14 = new org.apache.zeppelin.dep.DependencyContext("1");
    dependencyContext14.reset();
    org.apache.zeppelin.dep.Repository repository17 = dependencyContext14.addRepo("hi!");
    org.apache.zeppelin.dep.Repository repository19 = repository17.password("shared");
    org.apache.zeppelin.dep.Repository repository21 = repository17.password("{envName=zeppelin.interpreter.port, propertyName=<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>, defaultValue={}, description=           anonymous}");
    org.apache.zeppelin.dep.Repository repository22 = repository21.snapshot();
    boolean b23 = interpreterProperty4.equals((java.lang.Object)repository21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(linkedhashmap_str_input6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + "1"+ "'", obj9.equals("1"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);

  }

  @Test
  public void test434() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test434"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str1 = interpreterGroup0.getId();
    boolean b3 = interpreterGroup0.equals((java.lang.Object)0L);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry7 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup4.setInterpreterHookRegistry(interpreterHookRegistry7);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry9 = interpreterGroup4.getAngularObjectRegistry();
    boolean b11 = interpreterGroup0.remove((java.lang.Object)interpreterGroup4, (java.lang.Object)10.0d);
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener13 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry14 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener13);
    org.apache.zeppelin.resource.Resource[] resource_array16 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource17 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource17, resource_array16);
    org.apache.zeppelin.resource.Resource[] resource_array19 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource20 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource20, resource_array19);
    boolean b22 = arraylist_resource20.isEmpty();
    boolean b23 = linkedlist_resource17.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource20);
    linkedlist_resource17.clear();
    org.apache.zeppelin.display.AngularObject angularObject28 = angularObjectRegistry14.add("_GLOBAL_", (java.lang.Object)linkedlist_resource17, "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "pre_exec", false);
    org.apache.zeppelin.display.AngularObject angularObject32 = angularObjectRegistry14.remove("org.apache.zeppelin.interpreter.InterpreterException: ", "InterpreterGroup_1497134350938_711831855", "post_exec_dev");
    org.apache.zeppelin.display.AngularObject angularObject36 = angularObjectRegistry14.get("InterpreterGroup_1497134350938_711831855", "pre_exec", "zeppelin.interpreter.port");
    interpreterGroup0.setAngularObjectRegistry(angularObjectRegistry14);
    java.util.Enumeration<java.lang.String> enumeration_str38 = interpreterGroup0.keys();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup40 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool41 = interpreterGroup40.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry43 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup40.setInterpreterHookRegistry(interpreterHookRegistry43);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption46 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption47 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption46);
    boolean b48 = interpreterGroup40.contains((java.lang.Object)interpreterOption46);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup49 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool50 = interpreterGroup49.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry52 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup49.setInterpreterHookRegistry(interpreterHookRegistry52);
    interpreterGroup40.setInterpreterHookRegistry(interpreterHookRegistry52);
    java.util.Set<java.lang.String> set_str55 = interpreterGroup40.keySet();
    java.util.Enumeration<java.lang.String> enumeration_str56 = interpreterGroup40.keys();
    org.apache.zeppelin.resource.Resource[] resource_array58 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource59 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b60 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource59, resource_array58);
    org.apache.zeppelin.resource.Resource[] resource_array61 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource62 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b63 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource62, resource_array61);
    boolean b64 = arraylist_resource62.isEmpty();
    boolean b65 = linkedlist_resource59.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource62);
    org.apache.zeppelin.resource.Resource resource66 = null;
    boolean b67 = linkedlist_resource59.add(resource66);
    boolean b69 = linkedlist_resource59.contains((java.lang.Object)(-1));
    java.lang.Object obj70 = linkedlist_resource59.clone();
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array71 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter72 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b73 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter72, interpreter_array71);
    boolean b74 = linkedlist_resource59.removeAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter72);
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter75 = interpreterGroup40.replace("zeppelin.interpreter.port", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter72);
    // The following exception was thrown during execution in test generation
    try {
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter76 = interpreterGroup0.put("<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>", list_interpreter75);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "InterpreterGroup_1497134432058_496998177"+ "'", str1.equals("InterpreterGroup_1497134432058_496998177"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistry9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(enumeration_str38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_str55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(enumeration_str56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter75);

  }

  @Test
  public void test435() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test435"); }

    org.apache.zeppelin.dep.RepositoryListener repositoryListener0 = new org.apache.zeppelin.dep.RepositoryListener();
    org.sonatype.aether.RepositoryEvent repositoryEvent1 = null;
    repositoryListener0.metadataDownloading(repositoryEvent1);
    org.sonatype.aether.RepositoryEvent repositoryEvent3 = null;
    repositoryListener0.metadataDownloading(repositoryEvent3);
    org.sonatype.aether.RepositoryEvent repositoryEvent5 = null;
    // The following exception was thrown during execution in test generation
    try {
    repositoryListener0.metadataResolving(repositoryEvent5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test436() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test436"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = new org.apache.zeppelin.resource.ResourceSet();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByNoteId("InterpreterGroup_1497134378013_-178412288");
    resourceSet0.clear();
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.resource.Resource resource5 = resourceSet0.remove((int)' ');
      org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException");
    } catch (java.lang.IndexOutOfBoundsException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);

  }

  @Test
  public void test437() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test437"); }

    org.apache.zeppelin.user.UsernamePassword usernamePassword2 = new org.apache.zeppelin.user.UsernamePassword("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    usernamePassword2.setPassword("post_exec_dev");
    usernamePassword2.setUsername("existing_process");
    java.lang.String str7 = usernamePassword2.getUsername();
    usernamePassword2.setUsername("InterpreterGroup_1497134430233_523742514");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "existing_process"+ "'", str7.equals("existing_process"));

  }

  @Test
  public void test438() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test438"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    boolean b10 = interpreterGroup0.contains((java.lang.Object)"<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    interpreterGroup0.close("InterpreterGroup_1497134367518_-1467696533");
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener13 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener14 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller15 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener13, applicationEventListener14);
    remoteInterpreterEventPoller15.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup17 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool18 = interpreterGroup17.getResourcePool();
    boolean b21 = interpreterGroup17.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str22 = interpreterGroup17.getId();
    remoteInterpreterEventPoller15.setInterpreterGroup(interpreterGroup17);
    remoteInterpreterEventPoller15.run();
    java.util.Map<java.lang.String,java.lang.String> map_str_str28 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener30 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener31 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess33 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str28, 59683, remoteInterpreterProcessListener30, applicationEventListener31, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterEventPoller15.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess33);
    int i35 = remoteInterpreterManagedProcess33.dereference();
    boolean b36 = interpreterGroup0.contains((java.lang.Object)remoteInterpreterManagedProcess33);
    interpreterGroup0.setAngularRegistryPushed(true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "InterpreterGroup_1497134432360_-91303504"+ "'", str22.equals("InterpreterGroup_1497134432360_-91303504"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);

  }

  @Test
  public void test439() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test439"); }

    org.apache.zeppelin.resource.Resource[] resource_array1 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource2 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b3 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource2, resource_array1);
    org.apache.zeppelin.resource.Resource[] resource_array4 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource5 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource5, resource_array4);
    boolean b7 = arraylist_resource5.isEmpty();
    boolean b8 = linkedlist_resource2.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource5);
    org.apache.zeppelin.display.ui.OptionInput.ParamOption paramOption9 = null;
    org.apache.zeppelin.display.ui.OptionInput.ParamOption[] paramOption_array10 = new org.apache.zeppelin.display.ui.OptionInput.ParamOption[] { paramOption9 };
    org.apache.zeppelin.display.ui.Select select11 = org.apache.zeppelin.display.Input.select("post_exec_dev", (java.lang.Object)linkedlist_resource2, paramOption_array10);
    select11.setDisplayName("_GLOBAL_");
    java.lang.String str14 = select11.getDisplayName();
    java.lang.Object obj15 = select11.getDefaultValue();
    java.lang.String str16 = select11.getDisplayName();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(paramOption_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(select11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "_GLOBAL_"+ "'", str14.equals("_GLOBAL_"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "_GLOBAL_"+ "'", str16.equals("_GLOBAL_"));

  }

  @Test
  public void test440() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test440"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory0 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService3 = executorFactory0.createOrGet("scoped", 2);
    java.util.concurrent.ExecutorService executorService6 = executorFactory0.createOrGet("InterpreterGroup_1497134431967_-148002840", (int)(short)1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService6);

  }

  @Test
  public void test441() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test441"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup9 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool10 = interpreterGroup9.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry12 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup9.setInterpreterHookRegistry(interpreterHookRegistry12);
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry12);
    java.lang.String str15 = interpreterGroup0.toString();
    java.util.Collection<java.util.List<org.apache.zeppelin.interpreter.Interpreter>> collection_list_interpreter16 = interpreterGroup0.values();
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory19 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService21 = executorFactory19.createOrGet("hi!");
    java.util.concurrent.ExecutorService executorService23 = executorFactory19.createOrGet("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory24 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.FIFOScheduler fIFOScheduler25 = new org.apache.zeppelin.scheduler.FIFOScheduler("InterpreterGroup_1497134374771_373499119", executorService23, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory24);
    java.util.Map<java.lang.String,java.lang.String> map_str_str30 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener32 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener33 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess35 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str30, 59683, remoteInterpreterProcessListener32, applicationEventListener33, "InterpreterGroup_1497134377064_955397632");
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory38 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService41 = executorFactory38.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess43 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory44 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler46 = new org.apache.zeppelin.scheduler.RemoteScheduler("zeppelin.interpreter.host", executorService41, "pre_exec_dev", remoteInterpreterProcess43, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory44, (int)(short)1);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess48 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory49 = org.apache.zeppelin.scheduler.SchedulerFactory.singleton();
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess52 = null;
    org.apache.zeppelin.scheduler.Scheduler scheduler54 = schedulerFactory49.createOrGetRemoteScheduler("{}", "_GLOBAL_", remoteInterpreterProcess52, (int)(short)1);
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler56 = new org.apache.zeppelin.scheduler.RemoteScheduler("1", executorService41, "hi!", remoteInterpreterProcess48, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory49, 100);
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler58 = new org.apache.zeppelin.scheduler.RemoteScheduler("InterpreterGroup_1497134404697_-764373822", executorService23, "InterpreterGroup_1497134377883_708078564", (org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess35, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory49, (-1));
    interpreterGroup0.setRemoteInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess35);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup60 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool61 = interpreterGroup60.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry63 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup60.setInterpreterHookRegistry(interpreterHookRegistry63);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption66 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption67 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption66);
    boolean b68 = interpreterGroup60.contains((java.lang.Object)interpreterOption66);
    boolean b70 = interpreterGroup60.contains((java.lang.Object)"<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    interpreterGroup60.close("InterpreterGroup_1497134367518_-1467696533");
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener73 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener74 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller75 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener73, applicationEventListener74);
    remoteInterpreterEventPoller75.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup77 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool78 = interpreterGroup77.getResourcePool();
    boolean b81 = interpreterGroup77.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str82 = interpreterGroup77.getId();
    remoteInterpreterEventPoller75.setInterpreterGroup(interpreterGroup77);
    remoteInterpreterEventPoller75.run();
    java.util.Map<java.lang.String,java.lang.String> map_str_str88 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener90 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener91 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess93 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str88, 59683, remoteInterpreterProcessListener90, applicationEventListener91, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterEventPoller75.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess93);
    int i95 = remoteInterpreterManagedProcess93.dereference();
    boolean b96 = interpreterGroup60.contains((java.lang.Object)remoteInterpreterManagedProcess93);
    interpreterGroup0.putAll((java.util.Map<java.lang.String,java.util.List<org.apache.zeppelin.interpreter.Interpreter>>)interpreterGroup60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "{}"+ "'", str15.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_list_interpreter16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(schedulerFactory49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str82 + "' != '" + "InterpreterGroup_1497134432396_1967072818"+ "'", str82.equals("InterpreterGroup_1497134432396_1967072818"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i95 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b96 == false);

  }

  @Test
  public void test442() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test442"); }

    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption1 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    boolean b2 = interpreterOption1.perNoteShared();
    boolean b3 = interpreterOption1.perUserIsolated();
    interpreterOption1.setHost("{}");
    boolean b6 = interpreterOption1.perUserScoped();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test443() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test443"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.resource.Resource[] resource_array10 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource11 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource11, resource_array10);
    org.apache.zeppelin.resource.Resource[] resource_array13 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource14 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource14, resource_array13);
    boolean b16 = arraylist_resource14.isEmpty();
    boolean b17 = linkedlist_resource11.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource14);
    org.apache.zeppelin.resource.Resource resource18 = null;
    boolean b19 = linkedlist_resource11.add(resource18);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource20 = linkedlist_resource11.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo21 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i22 = linkedlist_resource11.indexOf((java.lang.Object)authenticationInfo21);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj23 = null;
    org.apache.zeppelin.display.GUI gUI24 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener26 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry27 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener26);
    org.apache.zeppelin.display.AngularObject angularObject32 = angularObjectRegistry27.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool34 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array35 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner36 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner36, interpreterContextRunner_array35);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput38 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController39 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext40 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo21, map_str_obj23, gUI24, angularObjectRegistry27, (org.apache.zeppelin.resource.ResourcePool)localResourcePool34, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner36, interpreterOutput38, remoteWorksController39);
    interpreterGroup0.setAngularObjectRegistry(angularObjectRegistry27);
    org.apache.zeppelin.resource.Resource[] resource_array47 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource48 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b49 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource48, resource_array47);
    org.apache.zeppelin.resource.Resource[] resource_array50 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource51 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b52 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource51, resource_array50);
    boolean b53 = arraylist_resource51.isEmpty();
    boolean b54 = linkedlist_resource48.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource51);
    org.apache.zeppelin.resource.Resource resource55 = null;
    boolean b56 = linkedlist_resource48.add(resource55);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource57 = linkedlist_resource48.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo58 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i59 = linkedlist_resource48.indexOf((java.lang.Object)authenticationInfo58);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj60 = null;
    org.apache.zeppelin.display.GUI gUI61 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener63 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry64 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener63);
    org.apache.zeppelin.display.AngularObject angularObject69 = angularObjectRegistry64.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool71 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array72 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner73 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b74 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner73, interpreterContextRunner_array72);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput75 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController76 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext77 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo58, map_str_obj60, gUI61, angularObjectRegistry64, (org.apache.zeppelin.resource.ResourcePool)localResourcePool71, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner73, interpreterOutput75, remoteWorksController76);
    org.apache.zeppelin.interpreter.InterpreterContext.set(interpreterContext77);
    java.lang.String str79 = interpreterContext77.getReplName();
    java.lang.String str80 = interpreterContext77.getReplName();
    java.lang.String str81 = interpreterContext77.getParagraphId();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter82 = interpreterGroup0.get((java.lang.Object)interpreterContext77);
    java.lang.String str83 = interpreterContext77.getClassName();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str79 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str79.equals("org.apache.zeppelin.interpreter.InterpreterException: "));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str80 + "' != '" + "org.apache.zeppelin.interpreter.InterpreterException: "+ "'", str80.equals("org.apache.zeppelin.interpreter.InterpreterException: "));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str81 + "' != '" + "InterpreterGroup_1497134353138_86992792"+ "'", str81.equals("InterpreterGroup_1497134353138_86992792"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str83);

  }

  @Test
  public void test444() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test444"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    java.lang.String[] str_array25 = new java.lang.String[] { "anonymous", "hi!", "zeppelin.interpreter.port", "InterpreterGroup_1497134350790_986318210", "post_exec_dev", "_GLOBAL_", "existing_process", "existing_process", "zeppelin.interpreter.host", "pre_exec_dev", "InterpreterGroup_1497134350790_986318210", "pre_exec_dev", "pre_exec", "pre_exec_dev", "isolated", "pre_exec", "shared", "_GLOBAL_", "[null]", "existing_process" };
    java.util.ArrayList<java.lang.String> arraylist_str26 = new java.util.ArrayList<java.lang.String>();
    boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str26, str_array25);
    boolean b28 = resourceSet4.removeAll((java.util.Collection<java.lang.String>)arraylist_str26);
    org.apache.zeppelin.completer.StringsCompleter stringsCompleter29 = new org.apache.zeppelin.completer.StringsCompleter((java.util.Collection<java.lang.String>)arraylist_str26);
    java.util.Collection<java.lang.String> collection_str30 = stringsCompleter29.getStrings();
    java.lang.CharSequence[] charSequence_array56 = new java.lang.CharSequence[] { "<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>", "pre_exec", "zeppelin.interpreter.port", "zeppelin.interpreter.port", "1", "<div class=\"result-alert alert-warning\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>%s</div>", "<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>", "<strong>Output is truncated</strong> to %s rows. Learn more about <strong>%s</strong>", "zeppelin.repl.result", "InterpreterGroup_1497134361189_-653890590", "zeppelin.interpreter.host", "org.apache.zeppelin.interpreter.InterpreterException: ", "isolated", "InterpreterGroup_1497134369176_-1878842789", "hi!", "InterpreterGroup_1497134350938_711831855", "", "isolated", "zeppelin.interpreter.host", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "InterpreterGroup_1497134353138_86992792", "existing_process", "[]" };
    java.util.ArrayList<java.lang.CharSequence> arraylist_charSequence57 = new java.util.ArrayList<java.lang.CharSequence>();
    boolean b58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>)arraylist_charSequence57, charSequence_array56);
    int i59 = stringsCompleter29.complete("InterpreterGroup_1497134350938_711831855", (int)(byte)100, (java.util.List<java.lang.CharSequence>)arraylist_charSequence57);
    java.util.Collection<java.lang.String> collection_str60 = stringsCompleter29.getStrings();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_str30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(charSequence_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_str60);

  }

  @Test
  public void test445() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test445"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry1 = interpreterGroup0.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array2 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource3 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b4 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource3, resource_array2);
    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource6 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource6, resource_array5);
    boolean b8 = arraylist_resource6.isEmpty();
    boolean b9 = linkedlist_resource3.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource6);
    linkedlist_resource3.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter11 = interpreterGroup0.get((java.lang.Object)linkedlist_resource3);
    interpreterGroup0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter11);

  }

  @Test
  public void test446() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test446"); }

    org.apache.zeppelin.display.GUI gUI0 = new org.apache.zeppelin.display.GUI();
    java.util.LinkedHashMap<java.lang.String,org.apache.zeppelin.display.Input> linkedhashmap_str_input1 = gUI0.getForms();
    java.lang.Object obj4 = gUI0.input("InterpreterGroup_1497134350790_986318210", (java.lang.Object)(byte)1);
    java.lang.String str5 = gUI0.toJson();
    org.apache.zeppelin.resource.Resource[] resource_array11 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource12 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource12, resource_array11);
    org.apache.zeppelin.resource.Resource[] resource_array14 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource15 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource15, resource_array14);
    boolean b17 = arraylist_resource15.isEmpty();
    boolean b18 = linkedlist_resource12.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource15);
    org.apache.zeppelin.resource.Resource resource19 = null;
    boolean b20 = linkedlist_resource12.add(resource19);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource21 = linkedlist_resource12.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo22 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i23 = linkedlist_resource12.indexOf((java.lang.Object)authenticationInfo22);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj24 = null;
    org.apache.zeppelin.display.GUI gUI25 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener27 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry28 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener27);
    org.apache.zeppelin.display.AngularObject angularObject33 = angularObjectRegistry28.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool35 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array36 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner37 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b38 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner37, interpreterContextRunner_array36);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput39 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController40 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext41 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo22, map_str_obj24, gUI25, angularObjectRegistry28, (org.apache.zeppelin.resource.ResourcePool)localResourcePool35, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner37, interpreterOutput39, remoteWorksController40);
    java.lang.Object obj44 = gUI25.textbox("", "zeppelin.interpreter.host");
    gUI25.convertOldInput();
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj46 = gUI25.getParams();
    gUI0.setParams(map_str_obj46);
    java.util.LinkedHashMap<java.lang.String,org.apache.zeppelin.display.Input> linkedhashmap_str_input49 = org.apache.zeppelin.display.Input.extractSimpleQueryForm("InterpreterGroup_1497134369176_-1878842789");
    gUI0.setForms(linkedhashmap_str_input49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(linkedhashmap_str_input1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "1"+ "'", obj4.equals("1"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}"+ "'", str5.equals("{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj44 + "' != '" + "zeppelin.interpreter.host"+ "'", obj44.equals("zeppelin.interpreter.host"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(map_str_obj46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(linkedhashmap_str_input49);

  }

  @Test
  public void test447() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test447"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet1 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet3 = resourceSet1.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet5 = resourceSet3.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet7 = resourceSet5.filterByName("InterpreterGroup_1497134350938_711831855");
    java.lang.Object[] obj_array8 = resourceSet7.toArray();
    org.apache.zeppelin.resource.ResourceSet resourceSet10 = resourceSet7.filterByClassnameRegex("org.apache.zeppelin.interpreter.InterpreterException: ");
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory11 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService13 = executorFactory11.createOrGet("hi!");
    java.util.concurrent.ExecutorService executorService15 = executorFactory11.createOrGet("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    executorFactory11.shutdown("InterpreterGroup_1497134361189_-653890590");
    java.util.concurrent.ExecutorService executorService20 = executorFactory11.createOrGet("org.apache.zeppelin.tabledata.TableDataException: <strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", 102400);
    int i21 = resourceSet10.indexOf((java.lang.Object)executorFactory11);
    org.apache.zeppelin.resource.Resource[] resource_array23 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource24 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource24, resource_array23);
    org.apache.zeppelin.resource.Resource[] resource_array26 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource27 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b28 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource27, resource_array26);
    boolean b29 = arraylist_resource27.isEmpty();
    boolean b30 = linkedlist_resource24.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource27);
    org.apache.zeppelin.display.ui.OptionInput.ParamOption paramOption31 = null;
    org.apache.zeppelin.display.ui.OptionInput.ParamOption[] paramOption_array32 = new org.apache.zeppelin.display.ui.OptionInput.ParamOption[] { paramOption31 };
    org.apache.zeppelin.display.ui.Select select33 = org.apache.zeppelin.display.Input.select("post_exec_dev", (java.lang.Object)linkedlist_resource24, paramOption_array32);
    org.apache.zeppelin.display.ui.Select select34 = new org.apache.zeppelin.display.ui.Select("InterpreterGroup_1497134408026_-794939986", (java.lang.Object)resourceSet10, paramOption_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(paramOption_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(select33);

  }

  @Test
  public void test448() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test448"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener0 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener1 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener0, applicationEventListener1);
    remoteInterpreterEventPoller2.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    boolean b8 = interpreterGroup4.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str9 = interpreterGroup4.getId();
    remoteInterpreterEventPoller2.setInterpreterGroup(interpreterGroup4);
    remoteInterpreterEventPoller2.run();
    java.util.Map<java.lang.String,java.lang.String> map_str_str15 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener17 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener18 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess20 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str15, 59683, remoteInterpreterProcessListener17, applicationEventListener18, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterEventPoller2.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess20);
    int i22 = remoteInterpreterManagedProcess20.getConnectTimeout();
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client23 = null;
    remoteInterpreterManagedProcess20.releaseBrokenClient(client23);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup26 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry27 = interpreterGroup26.getInterpreterHookRegistry();
    java.lang.String str28 = interpreterGroup26.toString();
    interpreterGroup26.close();
    org.apache.zeppelin.resource.ResourceSet resourceSet31 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet33 = resourceSet31.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet35 = resourceSet33.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.interpreter.InterpreterResult.Code code36 = null;
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult37 = new org.apache.zeppelin.interpreter.InterpreterResult(code36);
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage38 = interpreterResult37.message();
    boolean b39 = resourceSet33.removeAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)list_interpreterResultMessage38);
    org.apache.zeppelin.resource.Resource[] resource_array41 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource42 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b43 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource42, resource_array41);
    org.apache.zeppelin.resource.Resource[] resource_array44 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource45 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b46 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource45, resource_array44);
    boolean b47 = arraylist_resource45.isEmpty();
    boolean b48 = linkedlist_resource42.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource45);
    org.apache.zeppelin.display.ui.OptionInput.ParamOption paramOption49 = null;
    org.apache.zeppelin.display.ui.OptionInput.ParamOption[] paramOption_array50 = new org.apache.zeppelin.display.ui.OptionInput.ParamOption[] { paramOption49 };
    org.apache.zeppelin.display.ui.Select select51 = org.apache.zeppelin.display.Input.select("post_exec_dev", (java.lang.Object)linkedlist_resource42, paramOption_array50);
    org.apache.zeppelin.display.ui.Select select52 = new org.apache.zeppelin.display.ui.Select("post_exec_dev", (java.lang.Object)list_interpreterResultMessage38, paramOption_array50);
    org.apache.zeppelin.display.ui.Select select53 = new org.apache.zeppelin.display.ui.Select("_GLOBAL_", (java.lang.Object)interpreterGroup26, paramOption_array50);
    // The following exception was thrown during execution in test generation
    try {
    int i56 = remoteInterpreterManagedProcess20.reference(interpreterGroup26, "anonymous", (java.lang.Boolean)true);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "InterpreterGroup_1497134433204_-32467083"+ "'", str9.equals("InterpreterGroup_1497134433204_-32467083"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 59683);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "{}"+ "'", str28.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(paramOption_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(select51);

  }

  @Test
  public void test449() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test449"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener3 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry5 = interpreterGroup4.getInterpreterHookRegistry();
    java.lang.String str6 = interpreterGroup4.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry7 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener3, interpreterGroup4);
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry8 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("", angularObjectRegistryListener1, interpreterGroup4);
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry10 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("{}");
    interpreterGroup4.setInterpreterHookRegistry(interpreterHookRegistry10);
    java.util.Collection<java.util.List<org.apache.zeppelin.interpreter.Interpreter>> collection_list_interpreter12 = interpreterGroup4.values();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}"+ "'", str6.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_list_interpreter12);

  }

  @Test
  public void test450() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test450"); }

    org.slf4j.Logger logger0 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream1 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger0);
    byte[] byte_array5 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream1.write(byte_array5, (int)'a', 3);
    interpreterOutputStream1.ignoreLeadingNewLinesFromScalaReporter();
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput10 = interpreterOutputStream1.getInterpreterOutput();
    interpreterOutputStream1.write((int)(short)1);
    interpreterOutputStream1.write(100);
    int i15 = interpreterOutputStream1.getMessageLevel();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterOutput10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 999);

  }

  @Test
  public void test451() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test451"); }

    org.apache.zeppelin.dep.Dependency dependency1 = new org.apache.zeppelin.dep.Dependency("InterpreterGroup_1497134379014_-1019571993");

  }

  @Test
  public void test452() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test452"); }

    org.apache.zeppelin.user.Credentials credentials2 = new org.apache.zeppelin.user.Credentials((java.lang.Boolean)true, "InterpreterGroup_1497134374528_1509866041");

  }

  @Test
  public void test453() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test453"); }

    org.apache.zeppelin.display.AngularObject<java.io.OutputStream> angularobject_outputStream0 = new org.apache.zeppelin.display.AngularObject<java.io.OutputStream>();
    java.lang.String str1 = angularobject_outputStream0.getParagraphId();
    java.lang.Object obj2 = angularobject_outputStream0.get();
    java.lang.String str3 = angularobject_outputStream0.getParagraphId();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str3);

  }

  @Test
  public void test454() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test454"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Code code0 = org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR;
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult1 = new org.apache.zeppelin.interpreter.InterpreterResult(code0);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type2 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener3 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput4 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type2, interpreterResultMessageOutputListener3);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type5 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput4.setType(type5);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult8 = new org.apache.zeppelin.interpreter.InterpreterResult(code0, type5, "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}");
    org.apache.zeppelin.interpreter.InterpreterResult.Code code9 = org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup10 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry11 = interpreterGroup10.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array12 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource13 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b14 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource13, resource_array12);
    org.apache.zeppelin.resource.Resource[] resource_array15 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource16 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b17 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource16, resource_array15);
    boolean b18 = arraylist_resource16.isEmpty();
    boolean b19 = linkedlist_resource13.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource16);
    linkedlist_resource13.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter21 = interpreterGroup10.get((java.lang.Object)linkedlist_resource13);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type22 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter23 = interpreterGroup10.get((java.lang.Object)type22);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult25 = new org.apache.zeppelin.interpreter.InterpreterResult(code9, type22, "shared");
    org.apache.zeppelin.interpreter.InterpreterResult.Code code26 = org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup27 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry28 = interpreterGroup27.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array29 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource30 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource30, resource_array29);
    org.apache.zeppelin.resource.Resource[] resource_array32 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource33 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b34 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource33, resource_array32);
    boolean b35 = arraylist_resource33.isEmpty();
    boolean b36 = linkedlist_resource30.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource33);
    linkedlist_resource30.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter38 = interpreterGroup27.get((java.lang.Object)linkedlist_resource30);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type39 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter40 = interpreterGroup27.get((java.lang.Object)type39);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult42 = new org.apache.zeppelin.interpreter.InterpreterResult(code26, type39, "shared");
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult44 = new org.apache.zeppelin.interpreter.InterpreterResult(code9, type39, "InterpreterGroup_1497134367518_-1467696533");
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener52 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry53 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener52);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry56 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry53, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject58 = heliumAppAngularObjectRegistry56.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput59 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext60 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry56, interpreterOutput59);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener61 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener62 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput63 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener61, interpreterOutputChangeListener62);
    org.apache.zeppelin.helium.ApplicationContext applicationContext64 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry56, interpreterOutput63);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput65 = applicationContext64.out;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener67 = interpreterOutput65.createInterpreterResultMessageOutputListener((int)(byte)100);
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener68 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput69 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type39, interpreterResultMessageOutputListener67, interpreterOutputChangeListener68);
    interpreterResult8.add(type39, "pre_exec_dev");
    org.apache.zeppelin.interpreter.InterpreterResult.Code code72 = org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR;
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult73 = new org.apache.zeppelin.interpreter.InterpreterResult(code72);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type74 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener75 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput76 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type74, interpreterResultMessageOutputListener75);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type77 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput76.setType(type77);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult80 = new org.apache.zeppelin.interpreter.InterpreterResult(code72, type77, "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}");
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener81 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener82 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput83 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener81, interpreterOutputChangeListener82);
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener85 = interpreterOutput83.createInterpreterResultMessageOutputListener(5);
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener86 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput87 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type77, interpreterResultMessageOutputListener85, interpreterOutputChangeListener86);
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener88 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput89 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type39, interpreterResultMessageOutputListener85, interpreterOutputChangeListener88);
    org.junit.Assert.assertTrue("'" + code0 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR + "'", code0.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR));
    org.junit.Assert.assertTrue("'" + type5 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type5.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    org.junit.Assert.assertTrue("'" + code9 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE + "'", code9.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter21);
    org.junit.Assert.assertTrue("'" + type22 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type22.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter23);
    org.junit.Assert.assertTrue("'" + code26 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE + "'", code26.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter38);
    org.junit.Assert.assertTrue("'" + type39 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type39.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOutput65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutputListener67);
    org.junit.Assert.assertTrue("'" + code72 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR + "'", code72.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.ERROR));
    org.junit.Assert.assertTrue("'" + type77 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type77.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessageOutputListener85);

  }

  @Test
  public void test455() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test455"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener1);
    org.apache.zeppelin.resource.Resource[] resource_array4 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource5 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource5, resource_array4);
    org.apache.zeppelin.resource.Resource[] resource_array7 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource8 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8, resource_array7);
    boolean b10 = arraylist_resource8.isEmpty();
    boolean b11 = linkedlist_resource5.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource8);
    linkedlist_resource5.clear();
    org.apache.zeppelin.display.AngularObject angularObject16 = angularObjectRegistry2.add("_GLOBAL_", (java.lang.Object)linkedlist_resource5, "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "pre_exec", false);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource17 = linkedlist_resource5.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObject16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource17);

  }

  @Test
  public void test456() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test456"); }

    org.apache.zeppelin.dep.DependencyResolver dependencyResolver1 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134376971_-1963975868");
    dependencyResolver1.addRepo("1", "1", false);
    dependencyResolver1.addRepo("InterpreterGroup_1497134373781_-855626841", "scoped", false);
    dependencyResolver1.addRepo("InterpreterGroup_1497134419263_1893234849", "zeppelin.interpreter.port", false);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup15 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool16 = interpreterGroup15.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry18 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup15.setInterpreterHookRegistry(interpreterHookRegistry18);
    java.util.Map<java.lang.String,org.apache.zeppelin.interpreter.InterpreterGroup> map_str_interpreterGroup20 = null;
    interpreterGroup15.close(map_str_interpreterGroup20, "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "zeppelin.interpreter.port");
    java.util.Set<java.lang.String> set_str24 = interpreterGroup15.keySet();
    java.util.List<java.io.File> list_file25 = dependencyResolver1.load("InterpreterGroup_1497134419879_18384985", (java.util.Collection<java.lang.String>)set_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_str24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file25);

  }

  @Test
  public void test457() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test457"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool1 = interpreterGroup0.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry3 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup0.setInterpreterHookRegistry(interpreterHookRegistry3);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption6 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption7 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption6);
    boolean b8 = interpreterGroup0.contains((java.lang.Object)interpreterOption6);
    interpreterOption6.setUserImpersonate(false);
    boolean b11 = interpreterOption6.perNoteIsolated();
    interpreterOption6.setRemote(false);
    boolean b14 = interpreterOption6.permissionIsSet();
    boolean b15 = interpreterOption6.isUserImpersonate();
    interpreterOption6.setExistingProcess(true);
    int i18 = interpreterOption6.getPort();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == (-1));

  }

  @Test
  public void test458() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test458"); }

    org.apache.zeppelin.interpreter.InterpreterPropertyBuilder interpreterPropertyBuilder0 = new org.apache.zeppelin.interpreter.InterpreterPropertyBuilder();
    org.apache.zeppelin.interpreter.InterpreterPropertyBuilder interpreterPropertyBuilder6 = interpreterPropertyBuilder0.add("InterpreterGroup_1497134408026_-794939986", "InterpreterGroup_1497134373781_-855626841", "InterpreterGroup_1497134384512_-890338748", "", "{}");
    java.util.Map<java.lang.String,org.apache.zeppelin.interpreter.InterpreterProperty> map_str_interpreterProperty7 = interpreterPropertyBuilder0.build();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterPropertyBuilder6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(map_str_interpreterProperty7);

  }

  @Test
  public void test459() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test459"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry1 = interpreterGroup0.getInterpreterHookRegistry();
    java.lang.String str2 = interpreterGroup0.toString();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str5 = interpreterGroup4.getId();
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array7 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter8 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter8, interpreter_array7);
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter10 = interpreterGroup4.putIfAbsent("pre_exec_dev", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter8);
    org.apache.zeppelin.interpreter.Interpreter[] interpreter_array11 = new org.apache.zeppelin.interpreter.Interpreter[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter> arraylist_interpreter12 = new java.util.ArrayList<org.apache.zeppelin.interpreter.Interpreter>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter12, interpreter_array11);
    boolean b14 = interpreterGroup0.replace("InterpreterGroup_1497134350790_986318210", (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter8, (java.util.List<org.apache.zeppelin.interpreter.Interpreter>)arraylist_interpreter12);
    java.lang.String str15 = interpreterGroup0.getId();
    java.lang.String str16 = interpreterGroup0.toString();
    java.util.Enumeration<java.util.List<org.apache.zeppelin.interpreter.Interpreter>> enumeration_list_interpreter17 = interpreterGroup0.elements();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "{}"+ "'", str2.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "InterpreterGroup_1497134434291_-513636368"+ "'", str5.equals("InterpreterGroup_1497134434291_-513636368"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreter_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "InterpreterGroup_1497134434291_1383719455"+ "'", str15.equals("InterpreterGroup_1497134434291_1383719455"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "{}"+ "'", str16.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(enumeration_list_interpreter17);

  }

  @Test
  public void test460() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test460"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource10 = linkedlist_resource1.iterator();
    java.lang.String str11 = linkedlist_resource1.toString();
    java.lang.Object[] obj_array12 = linkedlist_resource1.toArray();
    org.apache.zeppelin.resource.Resource resource13 = linkedlist_resource1.getLast();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener15 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup16 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry17 = interpreterGroup16.getInterpreterHookRegistry();
    java.lang.String str18 = interpreterGroup16.toString();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry19 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("zeppelin.interpreter.port", angularObjectRegistryListener15, interpreterGroup16);
    org.apache.zeppelin.display.AngularObject angularObject24 = remoteAngularObjectRegistry19.remove("org.apache.zeppelin.interpreter.InterpreterException: ", "", "post_exec_dev", true);
    org.apache.zeppelin.display.AngularObject angularObject29 = remoteAngularObjectRegistry19.remove("[null]", "shared", "post_exec_dev", true);
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener30 = remoteAngularObjectRegistry19.getListener();
    org.apache.zeppelin.display.AngularObject angularObject34 = remoteAngularObjectRegistry19.removeAndNotifyRemoteProcess("InterpreterGroup_1497134378013_-178412288", "InterpreterGroup_1497134376850_-1874169858", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    boolean b35 = linkedlist_resource1.removeLastOccurrence((java.lang.Object)"<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[null]"+ "'", str11.equals("[null]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "{}"+ "'", str18.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistryListener30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);

  }

  @Test
  public void test461() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test461"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.Resource resource5 = resourceSet2.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource5);

  }

  @Test
  public void test462() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test462"); }

    org.apache.zeppelin.helium.HeliumType heliumType0 = null;
    java.lang.String[][] str_array_array5 = new java.lang.String[][] {  };
    org.apache.zeppelin.helium.HeliumPackage heliumPackage8 = new org.apache.zeppelin.helium.HeliumPackage(heliumType0, "", "", "hi!", "hi!", str_array_array5, "post_exec_dev", "post_exec_dev");
    java.lang.String str9 = heliumPackage8.getArtifact();
    java.lang.String str10 = heliumPackage8.getPublishedDate();
    java.lang.String str11 = heliumPackage8.getName();
    java.lang.String[][] str_array_array12 = heliumPackage8.getResources();
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj13 = heliumPackage8.getConfig();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!"+ "'", str9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + ""+ "'", str11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(map_str_obj13);

  }

  @Test
  public void test463() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test463"); }

    org.apache.zeppelin.resource.Resource[] resource_array0 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource1 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource1, resource_array0);
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource4 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4, resource_array3);
    boolean b6 = arraylist_resource4.isEmpty();
    boolean b7 = linkedlist_resource1.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource4);
    org.apache.zeppelin.resource.Resource resource8 = null;
    boolean b9 = linkedlist_resource1.add(resource8);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code10 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array11 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage12 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b13 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage12, interpreterResultMessage_array11);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult14 = new org.apache.zeppelin.interpreter.InterpreterResult(code10, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage12);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code15 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array16 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage17 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage17, interpreterResultMessage_array16);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult19 = new org.apache.zeppelin.interpreter.InterpreterResult(code15, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage17);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code20 = interpreterResult19.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage21 = interpreterResult19.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code22 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array23 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage24 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage24, interpreterResultMessage_array23);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult26 = new org.apache.zeppelin.interpreter.InterpreterResult(code22, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage24);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code27 = interpreterResult26.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage28 = interpreterResult26.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code29 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array30 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage31, interpreterResultMessage_array30);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult33 = new org.apache.zeppelin.interpreter.InterpreterResult(code29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage31);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code34 = interpreterResult33.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage35 = interpreterResult33.message();
    org.apache.zeppelin.interpreter.InterpreterResult.Code code36 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessage[] interpreterResultMessage_array37 = new org.apache.zeppelin.interpreter.InterpreterResultMessage[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage> arraylist_interpreterResultMessage38 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterResultMessage>();
    boolean b39 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage38, interpreterResultMessage_array37);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult40 = new org.apache.zeppelin.interpreter.InterpreterResult(code36, (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>)arraylist_interpreterResultMessage38);
    org.apache.zeppelin.interpreter.InterpreterResult.Code code41 = interpreterResult40.code();
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage> list_interpreterResultMessage42 = interpreterResult40.message();
    java.util.List[] list_array44 = new java.util.List[ 5 ];
    @SuppressWarnings("unchecked")
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[] list_interpreterResultMessage_array45 = (java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[])list_array44;
    list_interpreterResultMessage_array45[0] = arraylist_interpreterResultMessage12;
    list_interpreterResultMessage_array45[1] = list_interpreterResultMessage21;
    list_interpreterResultMessage_array45[2] = list_interpreterResultMessage28;
    list_interpreterResultMessage_array45[3] = list_interpreterResultMessage35;
    list_interpreterResultMessage_array45[4] = list_interpreterResultMessage42;
    java.util.List<org.apache.zeppelin.interpreter.InterpreterResultMessage>[] list_interpreterResultMessage_array56 = linkedlist_resource1.toArray(list_interpreterResultMessage_array45);
    org.apache.zeppelin.resource.Resource resource57 = null;
    boolean b58 = linkedlist_resource1.offerFirst(resource57);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource59 = linkedlist_resource1.iterator();
    boolean b60 = linkedlist_resource1.isEmpty();
    org.apache.zeppelin.resource.Resource resource62 = null;
    // The following exception was thrown during execution in test generation
    try {
    linkedlist_resource1.add((int)(short)100, resource62);
      org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException");
    } catch (java.lang.IndexOutOfBoundsException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(code41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_interpreterResultMessage_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);

  }

  @Test
  public void test464() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test464"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory1 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService4 = executorFactory1.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory5 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.Scheduler scheduler7 = schedulerFactory5.createOrGetFIFOScheduler("InterpreterGroup_1497134361189_-653890590");
    org.apache.zeppelin.scheduler.FIFOScheduler fIFOScheduler8 = new org.apache.zeppelin.scheduler.FIFOScheduler("hi!", executorService4, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory5);
    org.apache.zeppelin.scheduler.Job job10 = fIFOScheduler8.removeFromWaitingQueue("InterpreterGroup_1497134419879_18384985");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(job10);

  }

  @Test
  public void test465() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test465"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    interpreterResultMessageOutput2.flush();
    org.junit.Assert.assertTrue("'" + type0 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR + "'", type0.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.ANGULAR));

  }

  @Test
  public void test466() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test466"); }

    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource remoteZeppelinServerResource0 = new org.apache.zeppelin.interpreter.RemoteZeppelinServerResource();
    java.lang.String str1 = remoteZeppelinServerResource0.getOwnerKey();
    org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type type2 = org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS;
    remoteZeppelinServerResource0.setResourceType(type2);
    java.lang.String str4 = remoteZeppelinServerResource0.getOwnerKey();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str1);
    org.junit.Assert.assertTrue("'" + type2 + "' != '" + org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS + "'", type2.equals(org.apache.zeppelin.interpreter.RemoteZeppelinServerResource.Type.PARAGRAPH_RUNNERS));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str4);

  }

  @Test
  public void test467() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test467"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    java.lang.String str36 = authenticationInfo16.getTicket();
    org.apache.zeppelin.user.UserCredentials userCredentials37 = authenticationInfo16.getUserCredentials();
    boolean b38 = authenticationInfo16.isAnonymous();
    java.lang.String str39 = authenticationInfo16.getUser();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "InterpreterGroup_1497134419879_-322357118"+ "'", str36.equals("InterpreterGroup_1497134419879_-322357118"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(userCredentials37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "{envName=InterpreterGroup_1497134367518_-1467696533, propertyName=AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}, defaultValue=pre_exec, description=InterpreterGroup_1497134393145_-2056563636}"+ "'", str39.equals("{envName=InterpreterGroup_1497134367518_-1467696533, propertyName=AngularObject{noteId='null', paragraphId='null', object=%svg , name='null'}, defaultValue=pre_exec, description=InterpreterGroup_1497134393145_-2056563636}"));

  }

  @Test
  public void test468() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test468"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.ResourceSet resourceSet4 = resourceSet2.filterByClassnameRegex("pre_exec");
    org.apache.zeppelin.resource.ResourceSet resourceSet6 = resourceSet4.filterByName("InterpreterGroup_1497134350938_711831855");
    java.lang.Object[] obj_array7 = resourceSet6.toArray();
    org.apache.zeppelin.resource.ResourceSet resourceSet9 = resourceSet6.filterByClassnameRegex("org.apache.zeppelin.interpreter.InterpreterException: ");
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource10 = resourceSet6.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource10);

  }

  @Test
  public void test469() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test469"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry2 = new org.apache.zeppelin.display.AngularObjectRegistry("{\"params\":{},\"forms\":{\"InterpreterGroup_1497134350790_986318210\":{\"type\":\"TextBox\",\"name\":\"InterpreterGroup_1497134350790_986318210\",\"displayName\":\"InterpreterGroup_1497134350790_986318210\",\"defaultValue\":\"1\",\"hidden\":false}}}", angularObjectRegistryListener1);
    java.util.Map<java.lang.String,java.util.Map<java.lang.String,org.apache.zeppelin.display.AngularObject>> map_str_map_str_angularObject3 = angularObjectRegistry2.getRegistry();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(map_str_map_str_angularObject3);

  }

  @Test
  public void test470() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test470"); }

    org.apache.zeppelin.dep.DependencyContext dependencyContext1 = new org.apache.zeppelin.dep.DependencyContext("1");
    dependencyContext1.reset();
    org.apache.zeppelin.dep.Repository repository4 = dependencyContext1.addRepo("hi!");
    org.apache.zeppelin.dep.Repository repository6 = repository4.password("shared");
    org.apache.zeppelin.dep.Repository repository8 = repository4.password("InterpreterGroup_1497134369176_-1878842789");
    org.apache.zeppelin.dep.Repository repository10 = repository4.username("InterpreterGroup_1497134385808_1965526612");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository10);

  }

  @Test
  public void test471() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test471"); }

    org.slf4j.Logger logger0 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream1 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger0);
    interpreterOutputStream1.ignoreLeadingNewLinesFromScalaReporter();
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener3 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput4 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener3);
    interpreterOutput4.flush();
    interpreterOutput4.write((int)(short)-1);
    int i8 = interpreterOutput4.size();
    java.net.URL uRL9 = null;
    interpreterOutput4.write(uRL9);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener11 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput12 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener11);
    interpreterOutput12.addResourceSearchPath("isolated");
    byte[] byte_array15 = interpreterOutput12.toByteArray();
    interpreterOutput4.write(byte_array15, (int)'#', (int)(byte)0);
    interpreterOutputStream1.write(byte_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array15);

  }

  @Test
  public void test472() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test472"); }

    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry1 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("scoped");
    interpreterHookRegistry1.addNote("InterpreterGroup_1497134421473_1415416272");

  }

  @Test
  public void test473() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test473"); }

    org.apache.zeppelin.user.UsernamePassword usernamePassword2 = new org.apache.zeppelin.user.UsernamePassword("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    usernamePassword2.setPassword("InterpreterGroup_1497134376971_-1963975868");
    usernamePassword2.setUsername("InterpreterGroup_1497134432360_-91303504");

  }

  @Test
  public void test474() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test474"); }

    org.apache.zeppelin.display.AngularObject<java.io.OutputStream> angularobject_outputStream0 = new org.apache.zeppelin.display.AngularObject<java.io.OutputStream>();
    java.lang.String str1 = angularobject_outputStream0.getParagraphId();
    java.lang.Object obj2 = angularobject_outputStream0.get();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener10 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry11 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener10);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry14 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry11, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject16 = heliumAppAngularObjectRegistry14.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput17 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext18 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry14, interpreterOutput17);
    org.apache.zeppelin.display.AngularObject angularObject20 = heliumAppAngularObjectRegistry14.remove("InterpreterGroup_1497134353138_86992792");
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener28 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry29 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener28);
    org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry heliumAppAngularObjectRegistry32 = new org.apache.zeppelin.helium.HeliumAppAngularObjectRegistry(angularObjectRegistry29, "zeppelin.interpreter.port", "zeppelin.interpreter.port");
    org.apache.zeppelin.display.AngularObject angularObject34 = heliumAppAngularObjectRegistry32.get("_GLOBAL_");
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput35 = null;
    org.apache.zeppelin.helium.ApplicationContext applicationContext36 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134353138_86992792", "post_exec_dev", "pre_exec_dev", heliumAppAngularObjectRegistry32, interpreterOutput35);
    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener37 = null;
    org.apache.zeppelin.interpreter.InterpreterOutputChangeListener interpreterOutputChangeListener38 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput39 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener37, interpreterOutputChangeListener38);
    org.apache.zeppelin.helium.ApplicationContext applicationContext40 = new org.apache.zeppelin.helium.ApplicationContext("", "InterpreterGroup_1497134350938_711831855", "{}", heliumAppAngularObjectRegistry32, interpreterOutput39);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput41 = applicationContext40.out;
    org.apache.zeppelin.helium.ApplicationContext applicationContext42 = new org.apache.zeppelin.helium.ApplicationContext("InterpreterGroup_1497134374771_373499119", "InterpreterGroup_1497134367518_-1467696533", "isolated", heliumAppAngularObjectRegistry14, interpreterOutput41);
    org.apache.zeppelin.display.AngularObject<java.io.OutputStream> angularobject_outputStream43 = new org.apache.zeppelin.display.AngularObject<java.io.OutputStream>();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type44 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener45 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput46 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type44, interpreterResultMessageOutputListener45);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type47 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput46.setType(type47);
    angularobject_outputStream43.set((java.io.OutputStream)interpreterResultMessageOutput46);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type50 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener51 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput52 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type50, interpreterResultMessageOutputListener51);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage53 = interpreterResultMessageOutput52.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage54 = interpreterResultMessageOutput52.toInterpreterResultMessage();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup55 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry56 = interpreterGroup55.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array57 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource58 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b59 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource58, resource_array57);
    org.apache.zeppelin.resource.Resource[] resource_array60 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource61 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b62 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource61, resource_array60);
    boolean b63 = arraylist_resource61.isEmpty();
    boolean b64 = linkedlist_resource58.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource61);
    linkedlist_resource58.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter66 = interpreterGroup55.get((java.lang.Object)linkedlist_resource58);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type67 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter68 = interpreterGroup55.get((java.lang.Object)type67);
    interpreterResultMessageOutput52.setType(type67);
    interpreterResultMessageOutput46.setType(type67);
    org.slf4j.Logger logger71 = null;
    org.apache.zeppelin.interpreter.util.InterpreterOutputStream interpreterOutputStream72 = new org.apache.zeppelin.interpreter.util.InterpreterOutputStream(logger71);
    byte[] byte_array76 = new byte[] { (byte)10, (byte)-1, (byte)100 };
    interpreterOutputStream72.write(byte_array76, (int)'a', 3);
    interpreterResultMessageOutput46.write(byte_array76, (int)'#', 2);
    interpreterOutput41.write(byte_array76);
    angularobject_outputStream0.set((java.io.OutputStream)interpreterOutput41);
    boolean b85 = angularobject_outputStream0.isGlobal();
    angularobject_outputStream0.clearAllWatchers();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOutput41);
    org.junit.Assert.assertTrue("'" + type47 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type47.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter66);
    org.junit.Assert.assertTrue("'" + type67 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type67.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(byte_array76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == true);

  }

  @Test
  public void test475() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test475"); }

    org.apache.zeppelin.interpreter.InterpreterOutputListener interpreterOutputListener0 = null;
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput1 = new org.apache.zeppelin.interpreter.InterpreterOutput(interpreterOutputListener0);
    interpreterOutput1.flush();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type3 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener4 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput5 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type3, interpreterResultMessageOutputListener4);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type6 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput5.setType(type6);
    interpreterOutput1.setType(type6);
    interpreterOutput1.close();
    org.junit.Assert.assertTrue("'" + type6 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type6.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));

  }

  @Test
  public void test476() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test476"); }

    org.apache.zeppelin.user.UsernamePassword usernamePassword2 = new org.apache.zeppelin.user.UsernamePassword("1", "{}");
    usernamePassword2.setPassword("InterpreterGroup_1497134429035_-1128988804");
    usernamePassword2.setPassword("InterpreterGroup_1497134419879_18384985");

  }

  @Test
  public void test477() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test477"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet0 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResources();
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = resourceSet0.filterByClassname("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource4 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource4, resource_array3);
    org.apache.zeppelin.helium.HeliumType heliumType6 = org.apache.zeppelin.helium.HeliumType.INTERPRETER;
    boolean b7 = linkedlist_resource4.contains((java.lang.Object)heliumType6);
    int i8 = resourceSet0.indexOf((java.lang.Object)linkedlist_resource4);
    org.apache.zeppelin.resource.ResourceSet resourceSet10 = resourceSet0.filterByParagraphId("org.apache.zeppelin.helium.ApplicationException: InterpreterGroup_1497134385808_1965526612");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    org.junit.Assert.assertTrue("'" + heliumType6 + "' != '" + org.apache.zeppelin.helium.HeliumType.INTERPRETER + "'", heliumType6.equals(org.apache.zeppelin.helium.HeliumType.INTERPRETER));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet10);

  }

  @Test
  public void test478() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test478"); }

    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory2 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService4 = executorFactory2.createOrGet("hi!");
    java.util.concurrent.ExecutorService executorService6 = executorFactory2.createOrGet("<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory7 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.FIFOScheduler fIFOScheduler8 = new org.apache.zeppelin.scheduler.FIFOScheduler("InterpreterGroup_1497134374771_373499119", executorService6, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory7);
    java.util.Map<java.lang.String,java.lang.String> map_str_str13 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener15 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener16 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess18 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str13, 59683, remoteInterpreterProcessListener15, applicationEventListener16, "InterpreterGroup_1497134377064_955397632");
    org.apache.zeppelin.scheduler.ExecutorFactory executorFactory21 = org.apache.zeppelin.scheduler.ExecutorFactory.singleton();
    java.util.concurrent.ExecutorService executorService24 = executorFactory21.createOrGet("pre_exec_dev", 0);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess26 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory27 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler29 = new org.apache.zeppelin.scheduler.RemoteScheduler("zeppelin.interpreter.host", executorService24, "pre_exec_dev", remoteInterpreterProcess26, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory27, (int)(short)1);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess31 = null;
    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory32 = org.apache.zeppelin.scheduler.SchedulerFactory.singleton();
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess35 = null;
    org.apache.zeppelin.scheduler.Scheduler scheduler37 = schedulerFactory32.createOrGetRemoteScheduler("{}", "_GLOBAL_", remoteInterpreterProcess35, (int)(short)1);
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler39 = new org.apache.zeppelin.scheduler.RemoteScheduler("1", executorService24, "hi!", remoteInterpreterProcess31, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory32, 100);
    org.apache.zeppelin.scheduler.RemoteScheduler remoteScheduler41 = new org.apache.zeppelin.scheduler.RemoteScheduler("InterpreterGroup_1497134404697_-764373822", executorService6, "InterpreterGroup_1497134377883_708078564", (org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess18, (org.apache.zeppelin.scheduler.SchedulerListener)schedulerFactory32, (-1));
    // The following exception was thrown during execution in test generation
    try {
    org.apache.zeppelin.scheduler.Scheduler scheduler44 = schedulerFactory32.createOrGetParallelScheduler("org.apache.zeppelin.interpreter.InterpreterException: InterpreterGroup_1497134377064_955397632", 0);
      org.junit.Assert.fail("Expected exception of type java.util.concurrent.RejectedExecutionException");
    } catch (java.util.concurrent.RejectedExecutionException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorFactory21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(executorService24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(schedulerFactory32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler37);

  }

  @Test
  public void test479() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test479"); }

    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup2 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool3 = interpreterGroup2.getResourcePool();
    org.apache.zeppelin.resource.ResourcePool resourcePool4 = interpreterGroup2.getResourcePool();
    org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry remoteAngularObjectRegistry5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry("InterpreterGroup_1497134404697_-764373822", angularObjectRegistryListener1, interpreterGroup2);
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry7 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    java.lang.String str11 = interpreterHookRegistry7.get("", "post_exec_dev", "hi!");
    interpreterGroup2.setInterpreterHookRegistry(interpreterHookRegistry7);
    boolean b13 = interpreterGroup2.isAngularRegistryPushed();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test480() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test480"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry36 = interpreterContext35.getAngularObjectRegistry();
    java.lang.String str37 = interpreterContext35.getParagraphTitle();
    org.apache.zeppelin.display.GUI gUI38 = interpreterContext35.getGui();
    java.lang.String str39 = interpreterContext35.getParagraphText();
    java.lang.String str40 = interpreterContext35.getNoteId();
    java.lang.String str41 = interpreterContext35.getClassName();
    org.apache.zeppelin.display.GUI gUI42 = interpreterContext35.getGui();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(angularObjectRegistry36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "pre_exec_dev"+ "'", str37.equals("pre_exec_dev"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(gUI38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[null]"+ "'", str39.equals("[null]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "InterpreterGroup_1497134350938_711831855"+ "'", str40.equals("InterpreterGroup_1497134350938_711831855"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(str41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(gUI42);

  }

  @Test
  public void test481() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test481"); }

    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption1 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption2 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption1);
    boolean b3 = interpreterOption2.perNoteShared();
    boolean b4 = interpreterOption2.perUserScoped();
    interpreterOption2.setExistingProcess(false);
    interpreterOption2.setHost("[null]");
    interpreterOption2.setPerNote("_GLOBAL_");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);

  }

  @Test
  public void test482() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test482"); }

    org.apache.zeppelin.dep.DependencyContext dependencyContext1 = new org.apache.zeppelin.dep.DependencyContext("1");
    java.util.List<java.io.File> list_file2 = dependencyContext1.getFiles();
    org.apache.zeppelin.dep.Dependency dependency4 = dependencyContext1.load("InterpreterGroup_1497134387892_-1132206419");
    java.util.List<java.lang.String> list_str5 = dependency4.getExclusions();
    org.apache.zeppelin.dep.DependencyResolver dependencyResolver7 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134376971_-1963975868");
    dependencyResolver7.addRepo("1", "1", false);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup13 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool14 = interpreterGroup13.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry16 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup13.setInterpreterHookRegistry(interpreterHookRegistry16);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption19 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption20 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption19);
    boolean b21 = interpreterGroup13.contains((java.lang.Object)interpreterOption19);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup22 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool23 = interpreterGroup22.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry25 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup22.setInterpreterHookRegistry(interpreterHookRegistry25);
    interpreterGroup13.setInterpreterHookRegistry(interpreterHookRegistry25);
    java.lang.String str28 = interpreterGroup13.toString();
    java.util.Map<java.lang.String,org.apache.zeppelin.interpreter.InterpreterGroup> map_str_interpreterGroup29 = null;
    interpreterGroup13.close(map_str_interpreterGroup29, "{}", "InterpreterGroup_1497134350938_711831855");
    java.util.Set<java.lang.String> set_str33 = interpreterGroup13.keySet();
    java.util.List<java.io.File> list_file34 = dependencyResolver7.load("InterpreterGroup_1497134369176_-1878842789", (java.util.Collection<java.lang.String>)set_str33);
    boolean b35 = dependency4.equals((java.lang.Object)dependencyResolver7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(dependency4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_str5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "{}"+ "'", str28.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_str33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);

  }

  @Test
  public void test483() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test483"); }

    java.util.concurrent.ExecutorService executorService1 = null;
    org.apache.zeppelin.scheduler.SchedulerListener schedulerListener2 = null;
    org.apache.zeppelin.scheduler.FIFOScheduler fIFOScheduler3 = new org.apache.zeppelin.scheduler.FIFOScheduler("org.apache.zeppelin.interpreter.InterpreterException: ", executorService1, schedulerListener2);
    org.apache.zeppelin.scheduler.Job job5 = fIFOScheduler3.removeFromWaitingQueue("shared");
    java.util.Collection<org.apache.zeppelin.scheduler.Job> collection_job6 = fIFOScheduler3.getJobsRunning();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(job5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_job6);

  }

  @Test
  public void test484() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test484"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Code code0 = org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE;
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup1 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry2 = interpreterGroup1.getInterpreterHookRegistry();
    org.apache.zeppelin.resource.Resource[] resource_array3 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource4 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource4, resource_array3);
    org.apache.zeppelin.resource.Resource[] resource_array6 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource7 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource7, resource_array6);
    boolean b9 = arraylist_resource7.isEmpty();
    boolean b10 = linkedlist_resource4.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource7);
    linkedlist_resource4.clear();
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter12 = interpreterGroup1.get((java.lang.Object)linkedlist_resource4);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type13 = org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL;
    java.util.List<org.apache.zeppelin.interpreter.Interpreter> list_interpreter14 = interpreterGroup1.get((java.lang.Object)type13);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult16 = new org.apache.zeppelin.interpreter.InterpreterResult(code0, type13, "shared");
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult17 = new org.apache.zeppelin.interpreter.InterpreterResult(code0);
    org.apache.zeppelin.interpreter.InterpreterResult interpreterResult18 = new org.apache.zeppelin.interpreter.InterpreterResult(code0);
    org.junit.Assert.assertTrue("'" + code0 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE + "'", code0.equals(org.apache.zeppelin.interpreter.InterpreterResult.Code.INCOMPLETE));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(interpreterHookRegistry2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter12);
    org.junit.Assert.assertTrue("'" + type13 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL + "'", type13.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.NULL));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(list_interpreter14);

  }

  @Test
  public void test485() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test485"); }

    org.apache.zeppelin.scheduler.SchedulerFactory schedulerFactory0 = new org.apache.zeppelin.scheduler.SchedulerFactory();
    org.apache.zeppelin.scheduler.Scheduler scheduler3 = schedulerFactory0.createOrGetParallelScheduler("shared", (int)(short)0);
    java.util.Collection<org.apache.zeppelin.scheduler.Scheduler> collection_scheduler5 = schedulerFactory0.listScheduler("zeppelin.interpreter.host");
    org.apache.zeppelin.scheduler.Scheduler scheduler7 = schedulerFactory0.removeScheduler("InterpreterGroup_1497134410025_-620513103");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(scheduler3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_scheduler5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(scheduler7);

  }

  @Test
  public void test486() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test486"); }

    org.apache.zeppelin.user.UserCredentials userCredentials0 = new org.apache.zeppelin.user.UserCredentials();
    org.apache.zeppelin.user.UsernamePassword usernamePassword2 = userCredentials0.getUsernamePassword("org.apache.zeppelin.tabledata.TableDataException: <strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(usernamePassword2);

  }

  @Test
  public void test487() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test487"); }

    org.apache.zeppelin.user.UsernamePassword usernamePassword2 = new org.apache.zeppelin.user.UsernamePassword("InterpreterGroup_1497134353138_86992792", "zeppelin.interpreter.host");
    java.lang.String str3 = usernamePassword2.getPassword();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "zeppelin.interpreter.host"+ "'", str3.equals("zeppelin.interpreter.host"));

  }

  @Test
  public void test488() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test488"); }

    org.apache.zeppelin.resource.ResourceSet resourceSet1 = org.apache.zeppelin.resource.ResourcePoolUtils.getAllResourcesExcept("InterpreterGroup_1497134421659_488496160");
    org.apache.zeppelin.resource.Resource resource2 = resourceSet1.peekLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource2);

  }

  @Test
  public void test489() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test489"); }

    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup0 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    java.lang.String str1 = interpreterGroup0.getId();
    boolean b3 = interpreterGroup0.equals((java.lang.Object)0L);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup4 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool5 = interpreterGroup4.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry7 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup4.setInterpreterHookRegistry(interpreterHookRegistry7);
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry9 = interpreterGroup4.getAngularObjectRegistry();
    boolean b11 = interpreterGroup0.remove((java.lang.Object)interpreterGroup4, (java.lang.Object)10.0d);
    java.util.Collection<java.util.List<org.apache.zeppelin.interpreter.Interpreter>> collection_list_interpreter12 = interpreterGroup4.values();
    interpreterGroup4.setAngularRegistryPushed(false);
    java.lang.String str15 = interpreterGroup4.getId();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "InterpreterGroup_1497134434934_11930346"+ "'", str1.equals("InterpreterGroup_1497134434934_11930346"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObjectRegistry9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(collection_list_interpreter12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "InterpreterGroup_1497134434934_1635403849"+ "'", str15.equals("InterpreterGroup_1497134434934_1635403849"));

  }

  @Test
  public void test490() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test490"); }

    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage2 = org.apache.zeppelin.interpreter.ResultMessages.getExceedsLimitSizeMessage((int)(short)1, "InterpreterGroup_1497134350790_986318210");
    org.apache.zeppelin.interpreter.InterpreterResult.Type type3 = interpreterResultMessage2.getType();
    org.apache.zeppelin.tabledata.InterpreterResultTableData interpreterResultTableData4 = new org.apache.zeppelin.tabledata.InterpreterResultTableData(interpreterResultMessage2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage2);
    org.junit.Assert.assertTrue("'" + type3 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.HTML + "'", type3.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.HTML));

  }

  @Test
  public void test491() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test491"); }

    org.apache.zeppelin.dep.DependencyResolver dependencyResolver1 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134428213_281380730");

  }

  @Test
  public void test492() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test492"); }

    org.apache.zeppelin.resource.LocalResourcePool localResourcePool1 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.resource.ResourceSet resourceSet2 = localResourcePool1.getAll();
    org.apache.zeppelin.resource.Resource resource3 = resourceSet2.poll();
    org.apache.zeppelin.resource.Resource resource4 = null;
    boolean b5 = resourceSet2.offerFirst(resource4);
    org.apache.zeppelin.resource.Resource resource6 = resourceSet2.remove();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resourceSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource6);

  }

  @Test
  public void test493() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test493"); }

    org.apache.zeppelin.resource.LocalResourcePool localResourcePool1 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.resource.Resource resource3 = localResourcePool1.remove("InterpreterGroup_1497134393545_537212119");
    org.apache.zeppelin.dep.DependencyResolver dependencyResolver5 = new org.apache.zeppelin.dep.DependencyResolver("InterpreterGroup_1497134376971_-1963975868");
    dependencyResolver5.addRepo("1", "1", false);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup11 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool12 = interpreterGroup11.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry14 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup11.setInterpreterHookRegistry(interpreterHookRegistry14);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption17 = new org.apache.zeppelin.interpreter.InterpreterOption(true);
    org.apache.zeppelin.interpreter.InterpreterOption interpreterOption18 = org.apache.zeppelin.interpreter.InterpreterOption.fromInterpreterOption(interpreterOption17);
    boolean b19 = interpreterGroup11.contains((java.lang.Object)interpreterOption17);
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup20 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool21 = interpreterGroup20.getResourcePool();
    org.apache.zeppelin.interpreter.InterpreterHookRegistry interpreterHookRegistry23 = new org.apache.zeppelin.interpreter.InterpreterHookRegistry("[null]");
    interpreterGroup20.setInterpreterHookRegistry(interpreterHookRegistry23);
    interpreterGroup11.setInterpreterHookRegistry(interpreterHookRegistry23);
    java.lang.String str26 = interpreterGroup11.toString();
    java.util.Map<java.lang.String,org.apache.zeppelin.interpreter.InterpreterGroup> map_str_interpreterGroup27 = null;
    interpreterGroup11.close(map_str_interpreterGroup27, "{}", "InterpreterGroup_1497134350938_711831855");
    java.util.Set<java.lang.String> set_str31 = interpreterGroup11.keySet();
    java.util.List<java.io.File> list_file32 = dependencyResolver5.load("InterpreterGroup_1497134369176_-1878842789", (java.util.Collection<java.lang.String>)set_str31);
    org.apache.zeppelin.helium.ApplicationLoader applicationLoader33 = new org.apache.zeppelin.helium.ApplicationLoader((org.apache.zeppelin.resource.ResourcePool)localResourcePool1, dependencyResolver5);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type35 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener36 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput37 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type35, interpreterResultMessageOutputListener36);
    org.apache.zeppelin.interpreter.InterpreterResultMessage interpreterResultMessage38 = interpreterResultMessageOutput37.toInterpreterResultMessage();
    org.apache.zeppelin.tabledata.InterpreterResultTableData interpreterResultTableData39 = new org.apache.zeppelin.tabledata.InterpreterResultTableData(interpreterResultMessage38);
    localResourcePool1.put("InterpreterGroup_1497134393545_537212119", (java.lang.Object)interpreterResultTableData39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resource3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterOption18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "{}"+ "'", str26.equals("{}"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(set_str31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_file32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterResultMessage38);

  }

  @Test
  public void test494() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test494"); }

    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener0 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener1 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller2 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener0, applicationEventListener1);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener3 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener4 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller5 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener3, applicationEventListener4);
    remoteInterpreterEventPoller5.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup7 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool8 = interpreterGroup7.getResourcePool();
    boolean b11 = interpreterGroup7.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str12 = interpreterGroup7.getId();
    remoteInterpreterEventPoller5.setInterpreterGroup(interpreterGroup7);
    remoteInterpreterEventPoller5.run();
    java.util.Map<java.lang.String,java.lang.String> map_str_str18 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener20 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener21 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess23 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str18, 59683, remoteInterpreterProcessListener20, applicationEventListener21, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterEventPoller5.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess23);
    int i25 = remoteInterpreterManagedProcess23.dereference();
    remoteInterpreterEventPoller2.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess23);
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener27 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener28 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller29 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller(remoteInterpreterProcessListener27, applicationEventListener28);
    remoteInterpreterEventPoller29.shutdown();
    org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup31 = new org.apache.zeppelin.interpreter.InterpreterGroup();
    org.apache.zeppelin.resource.ResourcePool resourcePool32 = interpreterGroup31.getResourcePool();
    boolean b35 = interpreterGroup31.remove((java.lang.Object)0L, (java.lang.Object)'a');
    java.lang.String str36 = interpreterGroup31.getId();
    remoteInterpreterEventPoller29.setInterpreterGroup(interpreterGroup31);
    remoteInterpreterEventPoller29.run();
    java.util.Map<java.lang.String,java.lang.String> map_str_str42 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener44 = null;
    org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener45 = null;
    org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess remoteInterpreterManagedProcess47 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess("%angular [null]", "InterpreterGroup_1497134384512_-890338748", "AngularObject{noteId='null', paragraphId='null', object=null, name='null'}", map_str_str42, 59683, remoteInterpreterProcessListener44, applicationEventListener45, "InterpreterGroup_1497134377064_955397632");
    remoteInterpreterEventPoller29.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess47);
    int i49 = remoteInterpreterManagedProcess47.dereference();
    org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService.Client client50 = null;
    remoteInterpreterManagedProcess47.releaseClient(client50);
    java.lang.String str52 = remoteInterpreterManagedProcess47.getHost();
    remoteInterpreterEventPoller2.setInterpreterProcess((org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)remoteInterpreterManagedProcess47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "InterpreterGroup_1497134435043_1726587049"+ "'", str12.equals("InterpreterGroup_1497134435043_1726587049"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(resourcePool32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "InterpreterGroup_1497134435045_-1316082174"+ "'", str36.equals("InterpreterGroup_1497134435045_-1316082174"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "localhost"+ "'", str52.equals("localhost"));

  }

  @Test
  public void test495() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test495"); }

    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo2 = new org.apache.zeppelin.user.AuthenticationInfo("InterpreterGroup_1497134420494_1077107902", "InterpreterGroup_1497134374528_1509866041");

  }

  @Test
  public void test496() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test496"); }

    org.apache.zeppelin.interpreter.InterpreterResult.Type type0 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener1 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput2 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type0, interpreterResultMessageOutputListener1);
    org.apache.zeppelin.interpreter.InterpreterResult.Type type3 = org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG;
    interpreterResultMessageOutput2.setType(type3);
    interpreterResultMessageOutput2.clear();
    interpreterResultMessageOutput2.close();
    interpreterResultMessageOutput2.close();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type8 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener9 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput10 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type8, interpreterResultMessageOutputListener9);
    interpreterResultMessageOutput10.flush();
    org.apache.zeppelin.interpreter.InterpreterResult.Type type12 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutputListener interpreterResultMessageOutputListener13 = null;
    org.apache.zeppelin.interpreter.InterpreterResultMessageOutput interpreterResultMessageOutput14 = new org.apache.zeppelin.interpreter.InterpreterResultMessageOutput(type12, interpreterResultMessageOutputListener13);
    java.lang.String[] str_array17 = new java.lang.String[] { "zeppelin.interpreter.port", "_GLOBAL_" };
    java.util.ArrayList<java.lang.String> arraylist_str18 = new java.util.ArrayList<java.lang.String>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)arraylist_str18, str_array17);
    interpreterResultMessageOutput14.setResourceSearchPaths((java.util.List<java.lang.String>)arraylist_str18);
    interpreterResultMessageOutput10.setResourceSearchPaths((java.util.List<java.lang.String>)arraylist_str18);
    interpreterResultMessageOutput2.setResourceSearchPaths((java.util.List<java.lang.String>)arraylist_str18);
    boolean b23 = interpreterResultMessageOutput2.isAppendSupported();
    org.junit.Assert.assertTrue("'" + type3 + "' != '" + org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG + "'", type3.equals(org.apache.zeppelin.interpreter.InterpreterResult.Type.SVG));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);

  }

  @Test
  public void test497() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test497"); }

    org.apache.zeppelin.dep.DependencyContext dependencyContext1 = new org.apache.zeppelin.dep.DependencyContext("1");
    dependencyContext1.reset();
    org.apache.zeppelin.dep.Repository repository4 = dependencyContext1.addRepo("hi!");
    org.apache.zeppelin.dep.Repository repository6 = repository4.password("shared");
    org.sonatype.aether.repository.Authentication authentication7 = repository6.getAuthentication();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(authentication7);

  }

  @Test
  public void test498() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test498"); }

    org.apache.zeppelin.resource.Resource[] resource_array5 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.LinkedList<org.apache.zeppelin.resource.Resource> linkedlist_resource6 = new java.util.LinkedList<org.apache.zeppelin.resource.Resource>();
    boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)linkedlist_resource6, resource_array5);
    org.apache.zeppelin.resource.Resource[] resource_array8 = new org.apache.zeppelin.resource.Resource[] {  };
    java.util.ArrayList<org.apache.zeppelin.resource.Resource> arraylist_resource9 = new java.util.ArrayList<org.apache.zeppelin.resource.Resource>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9, resource_array8);
    boolean b11 = arraylist_resource9.isEmpty();
    boolean b12 = linkedlist_resource6.addAll((java.util.Collection<org.apache.zeppelin.resource.Resource>)arraylist_resource9);
    org.apache.zeppelin.resource.Resource resource13 = null;
    boolean b14 = linkedlist_resource6.add(resource13);
    java.util.Iterator<org.apache.zeppelin.resource.Resource> iterator_resource15 = linkedlist_resource6.iterator();
    org.apache.zeppelin.user.AuthenticationInfo authenticationInfo16 = org.apache.zeppelin.user.AuthenticationInfo.ANONYMOUS;
    int i17 = linkedlist_resource6.indexOf((java.lang.Object)authenticationInfo16);
    java.util.Map<java.lang.String,java.lang.Object> map_str_obj18 = null;
    org.apache.zeppelin.display.GUI gUI19 = new org.apache.zeppelin.display.GUI();
    org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener21 = null;
    org.apache.zeppelin.display.AngularObjectRegistry angularObjectRegistry22 = new org.apache.zeppelin.display.AngularObjectRegistry("post_exec_dev", angularObjectRegistryListener21);
    org.apache.zeppelin.display.AngularObject angularObject27 = angularObjectRegistry22.remove("InterpreterGroup_1497134350938_711831855", "<strong>Output is truncated</strong> to %s bytes. Learn more about <strong>%s</strong>", "_GLOBAL_", false);
    org.apache.zeppelin.resource.LocalResourcePool localResourcePool29 = new org.apache.zeppelin.resource.LocalResourcePool("zeppelin.interpreter.port");
    org.apache.zeppelin.interpreter.InterpreterContextRunner[] interpreterContextRunner_array30 = new org.apache.zeppelin.interpreter.InterpreterContextRunner[] {  };
    java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner> arraylist_interpreterContextRunner31 = new java.util.ArrayList<org.apache.zeppelin.interpreter.InterpreterContextRunner>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterContextRunner_array30);
    org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput33 = null;
    org.apache.zeppelin.interpreter.RemoteWorksController remoteWorksController34 = null;
    org.apache.zeppelin.interpreter.InterpreterContext interpreterContext35 = new org.apache.zeppelin.interpreter.InterpreterContext("InterpreterGroup_1497134350938_711831855", "InterpreterGroup_1497134353138_86992792", "org.apache.zeppelin.interpreter.InterpreterException: ", "pre_exec_dev", "[null]", authenticationInfo16, map_str_obj18, gUI19, angularObjectRegistry22, (org.apache.zeppelin.resource.ResourcePool)localResourcePool29, (java.util.List<org.apache.zeppelin.interpreter.InterpreterContextRunner>)arraylist_interpreterContextRunner31, interpreterOutput33, remoteWorksController34);
    java.util.List<org.apache.zeppelin.display.AngularObject> list_angularObject37 = angularObjectRegistry22.getAllWithGlobal("1");
    java.util.Map<java.lang.String,java.util.Map<java.lang.String,org.apache.zeppelin.display.AngularObject>> map_str_map_str_angularObject38 = angularObjectRegistry22.getRegistry();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(resource_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator_resource15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(authenticationInfo16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(angularObject27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(interpreterContextRunner_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list_angularObject37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(map_str_map_str_angularObject38);

  }

  @Test
  public void test499() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test499"); }

    org.apache.zeppelin.dep.DependencyContext dependencyContext1 = new org.apache.zeppelin.dep.DependencyContext("pre_exec");
    org.apache.zeppelin.dep.Repository repository3 = dependencyContext1.addRepo("InterpreterGroup_1497134387007_1195822394");
    org.sonatype.aether.repository.Proxy proxy4 = repository3.getProxy();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(repository3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(proxy4);

  }

  @Test
  public void test500() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test500"); }

    java.nio.ByteBuffer byteBuffer0 = null;
    org.apache.zeppelin.resource.ByteBufferInputStream byteBufferInputStream1 = new org.apache.zeppelin.resource.ByteBufferInputStream(byteBuffer0);
    boolean b2 = byteBufferInputStream1.markSupported();
    byteBufferInputStream1.close();
    int i4 = byteBufferInputStream1.available();
    int i5 = byteBufferInputStream1.available();
    byteBufferInputStream1.mark(29914);
    byteBufferInputStream1.mark(4);
    // The following exception was thrown during execution in test generation
    try {
    long long11 = byteBufferInputStream1.skip((long)(short)10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);

  }

}
