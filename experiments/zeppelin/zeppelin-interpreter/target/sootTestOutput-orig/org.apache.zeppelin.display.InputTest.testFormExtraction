org.apache.zeppelin.display.Input.setHidden : r0.<org.apache.zeppelin.display.Input: boolean hidden> = z0
org.apache.zeppelin.display.Input.getNameAndDisplayName : $r4 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.display.Input.getNameAndDisplayName : return r3
org.apache.zeppelin.display.Input.getNameAndDisplayName : return null
org.apache.zeppelin.display.Input.getNameAndDisplayName : if r2 == null goto return null
org.apache.zeppelin.display.Input.getNameAndDisplayName : r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([^(]*)\\s*[(]([^)]*)[)]")
org.apache.zeppelin.display.Input.getNameAndDisplayName : $r6 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.zeppelin.display.Input.getNameAndDisplayName : r3 = newarray (java.lang.String)[2]
org.apache.zeppelin.display.Input.getNameAndDisplayName : $r5 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.zeppelin.display.ui.OptionInput$ParamOption.equals : $r9 = r0.<org.apache.zeppelin.display.ui.OptionInput$ParamOption: java.lang.String displayName>
org.apache.zeppelin.display.ui.OptionInput$ParamOption.equals : if r0 != r1 goto (branch)
org.apache.zeppelin.display.ui.OptionInput$ParamOption.equals : $r5 = r0.<org.apache.zeppelin.display.ui.OptionInput$ParamOption: java.lang.Object value>
org.apache.zeppelin.display.ui.OptionInput$ParamOption.equals : r2 = (org.apache.zeppelin.display.ui.OptionInput$ParamOption) r1
org.apache.zeppelin.display.ui.OptionInput$ParamOption.equals : if r1 == null goto return 0
org.apache.zeppelin.display.Input.getType : $r4 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.display.Input.getType : return r3
org.apache.zeppelin.display.Input.getType : return null
org.apache.zeppelin.display.Input.getType : if r2 == null goto return null
org.apache.zeppelin.display.Input.getType : $r11 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(3)
org.apache.zeppelin.display.Input.getType : $r5 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.zeppelin.display.Input.getType : r3 = newarray (java.lang.String)[3]
org.apache.zeppelin.display.Input.getType : $r7 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.zeppelin.display.Input.getType : r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([^:()]*)\\s*([(][^()]*[)])?\\s*:(.*)")
org.apache.zeppelin.display.Input.getInputForm : r8 = ""
org.apache.zeppelin.display.Input.getInputForm : $z3 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("checkbox")
org.apache.zeppelin.display.Input.getInputForm : r13 = r12[0]
org.apache.zeppelin.display.Input.getInputForm : if i0 <= 0 goto r3 = r2
org.apache.zeppelin.display.Input.getInputForm : n0 = null
org.apache.zeppelin.display.Input.getInputForm : $i3 = i0 + 1
org.apache.zeppelin.display.Input.getInputForm : if r4 == null goto n0 = null
org.apache.zeppelin.display.Input.getInputForm : r11 = r3
org.apache.zeppelin.display.Input.getInputForm : r6 = r10[0]
org.apache.zeppelin.display.Input.getInputForm : r6 = null
org.apache.zeppelin.display.Input.getInputForm : $i5 = lengthof r15
org.apache.zeppelin.display.Input.getInputForm : $r29 = new org.apache.zeppelin.display.ui.CheckBox
org.apache.zeppelin.display.Input.getInputForm : if r12 == null goto r13 = virtualinvoke r11.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.display.Input.getInputForm : virtualinvoke r27.<org.apache.zeppelin.display.Input: void setDisplayName(java.lang.String)>(r5)
org.apache.zeppelin.display.Input.getInputForm : r8 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i1)
org.apache.zeppelin.display.Input.getInputForm : r9 = null
org.apache.zeppelin.display.Input.getInputForm : r12 = staticinvoke <org.apache.zeppelin.display.Input: java.lang.String[] getNameAndDisplayName(java.lang.String)>(r11)
org.apache.zeppelin.display.Input.getInputForm : return r27
org.apache.zeppelin.display.Input.getInputForm : r1 = virtualinvoke r0.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.zeppelin.display.Input.getInputForm : $r19 = r15[i2]
org.apache.zeppelin.display.Input.getInputForm : if r9 != null goto $r28 = new org.apache.zeppelin.display.ui.Select
org.apache.zeppelin.display.Input.getInputForm : if r16 == null goto $r23 = new org.apache.zeppelin.display.ui.OptionInput$ParamOption
org.apache.zeppelin.display.Input.getInputForm : goto [?= n0 = null]
org.apache.zeppelin.display.Input.getInputForm : r2 = virtualinvoke r0.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.zeppelin.display.Input.getInputForm : z0 = 0
org.apache.zeppelin.display.Input.getInputForm : i2 = 0
org.apache.zeppelin.display.Input.getInputForm : r10 = staticinvoke <org.apache.zeppelin.display.Input: java.lang.String[] getType(java.lang.String)>(r3)
org.apache.zeppelin.display.Input.getInputForm : r7 = null
org.apache.zeppelin.display.Input.getInputForm : virtualinvoke r27.<org.apache.zeppelin.display.Input: void setArgument(java.lang.String)>(r7)
org.apache.zeppelin.display.Input.getInputForm : $r17 = "_"
org.apache.zeppelin.display.Input.getInputForm : if r6 == null goto $i4 = i1 + 1
org.apache.zeppelin.display.Input.getInputForm : r7 = r10[1]
org.apache.zeppelin.display.Input.getInputForm : if i1 < 0 goto r8 = r4
org.apache.zeppelin.display.Input.getInputForm : $r25 = new org.apache.zeppelin.display.ui.TextBox
org.apache.zeppelin.display.Input.getInputForm : $r28 = new org.apache.zeppelin.display.ui.Select
org.apache.zeppelin.display.Input.getInputForm : r8 = r4
org.apache.zeppelin.display.Input.getInputForm : virtualinvoke r27.<org.apache.zeppelin.display.Input: void setHidden(boolean)>(z0)
org.apache.zeppelin.display.Input.getInputForm : r11 = r10[2]
org.apache.zeppelin.display.Input.getInputForm : $r18 = (java.lang.String) r8
org.apache.zeppelin.display.Input.getInputForm : if r10 == null goto r11 = r3
org.apache.zeppelin.display.Input.getInputForm : r5 = r12[1]
org.apache.zeppelin.display.Input.getInputForm : r15 = staticinvoke <org.apache.zeppelin.display.Input: java.lang.String[] splitPipe(java.lang.String)>(r14)
org.apache.zeppelin.display.Input.getInputForm : r13 = virtualinvoke r11.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.display.Input.getInputForm : $r20 = new org.apache.zeppelin.display.ui.OptionInput$ParamOption
org.apache.zeppelin.display.Input.getInputForm : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(61)
org.apache.zeppelin.display.Input.getInputForm : r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.zeppelin.display.Input.getInputForm : if r6 != null goto $z3 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("checkbox")
org.apache.zeppelin.display.Input.getInputForm : $i4 = i1 + 1
org.apache.zeppelin.display.Input.getInputForm : i1 = virtualinvoke r4.<java.lang.String: int indexOf(java.lang.String)>(",")
org.apache.zeppelin.display.Input.getInputForm : $r23 = new org.apache.zeppelin.display.ui.OptionInput$ParamOption
org.apache.zeppelin.display.Input.getInputForm : r5 = null
org.apache.zeppelin.display.Input.getBlockStr : $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("N_")
org.apache.zeppelin.display.Input.getBlockStr : return r0
org.apache.zeppelin.display.Input.getBlockStr : $r1 = "N_"
org.apache.zeppelin.display.Input.setArgument : r0.<org.apache.zeppelin.display.Input: java.lang.String argument> = r1
org.apache.zeppelin.display.Input.extractSimpleQueryForm : return r2
org.apache.zeppelin.display.Input.extractSimpleQueryForm : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = virtualinvoke r4.<java.util.regex.Matcher: boolean find()>()", "org.apache.zeppelin.display.Input.extractSimpleQueryForm")]
org.apache.zeppelin.display.Input.extractSimpleQueryForm : r5 = staticinvoke <org.apache.zeppelin.display.Input: org.apache.zeppelin.display.Input getInputForm(java.util.regex.Matcher)>(r4)
org.apache.zeppelin.display.Input.extractSimpleQueryForm : $r6 = <org.apache.zeppelin.display.Input: java.util.regex.Pattern VAR_PTN>
org.apache.zeppelin.display.Input.extractSimpleQueryForm : r3 = r0
org.apache.zeppelin.display.Input.extractSimpleQueryForm : $r1 = new java.util.LinkedHashMap
org.apache.zeppelin.display.Input.extractSimpleQueryForm : if r0 != null goto r3 = r0
org.apache.zeppelin.display.Input.extractSimpleQueryForm : $r7 = r5.<org.apache.zeppelin.display.Input: java.lang.String name>
org.apache.zeppelin.display.Input.extractSimpleQueryForm : $z0 = virtualinvoke r4.<java.util.regex.Matcher: boolean find()>()
org.apache.zeppelin.display.Input.extractSimpleQueryForm : virtualinvoke r2.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>("pql")
org.apache.zeppelin.display.Input.splitPipe : $r1 = staticinvoke <org.apache.zeppelin.display.Input: java.lang.String[] split(java.lang.String,char)>(r0, 124)
org.apache.zeppelin.display.Input.setDisplayName : r0.<org.apache.zeppelin.display.Input: java.lang.String displayName> = r1
org.apache.zeppelin.display.Input.split : if z0 != 1 goto virtualinvoke r7.<java.lang.StringBuilder: void setLength(int)>(0)
org.apache.zeppelin.display.Input.split : $i32 = i1 + 1
org.apache.zeppelin.display.Input.split : $i25 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.zeppelin.display.Input.split : $r5 = newarray (java.lang.String)[5]
org.apache.zeppelin.display.Input.split : $r30 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0)
org.apache.zeppelin.display.Input.split : $r10 = new java.lang.StringBuilder
org.apache.zeppelin.display.Input.split : i30 = 0
org.apache.zeppelin.display.Input.split : i3 = 0
org.apache.zeppelin.display.Input.split : $r34 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0)
org.apache.zeppelin.display.Input.split : if z9 != 1 goto virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4)
org.apache.zeppelin.display.Input.split : $i33 = virtualinvoke r7.<java.lang.StringBuilder: int length()>()
org.apache.zeppelin.display.Input.split : i1 = -1
org.apache.zeppelin.display.Input.split : c0 = 92
org.apache.zeppelin.display.Input.split : $r20 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0)
org.apache.zeppelin.display.Input.split : goto [?= i3 = i3 + 1]
org.apache.zeppelin.display.Input.split : i2 = i3
org.apache.zeppelin.display.Input.split : $r1 = newarray (java.lang.String)[1]
org.apache.zeppelin.display.Input.split : if c4 != c0 goto (branch)
org.apache.zeppelin.display.Input.split : z1 = 0
org.apache.zeppelin.display.Input.split : $r7 = staticinvoke <org.apache.zeppelin.display.Input: java.lang.String[] split(java.lang.String,java.lang.String,char,java.lang.String[],java.lang.String[],java.lang.String[],boolean)>(r0, r2, c0, r3, r4, r1, z0)
org.apache.zeppelin.display.Input.split : virtualinvoke r7.<java.lang.StringBuilder: void setLength(int)>(0)
org.apache.zeppelin.display.Input.split : $i15 = i1 + 1
org.apache.zeppelin.display.Input.split : goto [?= (branch)]
org.apache.zeppelin.display.Input.split : c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3)
org.apache.zeppelin.display.Input.split : z9 = 0
org.apache.zeppelin.display.Input.split : virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4)
org.apache.zeppelin.display.Input.split : z9 = 1
org.apache.zeppelin.display.Input.split : i5 = 0
org.apache.zeppelin.display.Input.split : z2 = 1
org.apache.zeppelin.display.Input.split : $r53 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.display.Input.split : i2 = -1
org.apache.zeppelin.display.Input.split : $r6 = newarray (java.lang.String)[5]
org.apache.zeppelin.display.Input.split : z2 = 0
org.apache.zeppelin.display.Input.split : $i11 = interfaceinvoke r8.<java.util.List: int size()>()
org.apache.zeppelin.display.Input.split : interfaceinvoke r8.<java.util.List: java.lang.Object remove(int)>(0)
org.apache.zeppelin.display.Input.split : $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5)
org.apache.zeppelin.display.Input.split : $r47 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.display.Input.split : $r11 = new java.util.LinkedList
org.apache.zeppelin.display.Input.split : $r5 = new java.util.ArrayList
org.apache.zeppelin.display.Input.split : r2 = "\"\',;${}"
org.apache.zeppelin.display.Input.split : r44 = r4
org.apache.zeppelin.display.Input.split : $r55 = newarray (java.lang.String)[0]
org.apache.zeppelin.display.Input.split : if i2 < 0 goto i5 = i5 + 1
org.apache.zeppelin.display.Input.split : $i24 = virtualinvoke r45.<java.lang.String: int length()>()
org.apache.zeppelin.display.Input.split : if z1 != 1 goto $i11 = interfaceinvoke r8.<java.util.List: int size()>()
org.apache.zeppelin.display.Input.split : $r16 = staticinvoke <org.apache.zeppelin.display.Input: java.lang.String getBlockStr(java.lang.String)>($r15)
org.apache.zeppelin.display.Input.split : $i28 = virtualinvoke r45.<java.lang.String: int length()>()
org.apache.zeppelin.display.Input.split : $r51 = staticinvoke <org.apache.zeppelin.display.Input: java.lang.String getBlockStr(java.lang.String)>($r50)
org.apache.zeppelin.display.Input.split : $r24 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0)
org.apache.zeppelin.display.Input.split : if z2 != 1 goto $r20 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0)
org.apache.zeppelin.display.Input.split : $i17 = i1 + 1
org.apache.zeppelin.display.Input.split : $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i30)
org.apache.zeppelin.display.ui.OptionInput.getOptions : $r1 = r0.<org.apache.zeppelin.display.ui.OptionInput: org.apache.zeppelin.display.ui.OptionInput$ParamOption[] options>
org.apache.zeppelin.display.Input.isNestedBlock : $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("N_")
org.apache.zeppelin.display.Input.isNestedBlock : return 1
