org.apache.zeppelin.interpreter.InterpreterOption.perNoteShared : $r1 = "shared" >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOption.perNoteShared : $r2 = r0.<org.apache.zeppelin.interpreter.InterpreterOption: java.lang.String perNote>
org.apache.zeppelin.interpreter.InterpreterOption.perNoteShared : $r2 = r0.<org.apache.zeppelin.interpreter.InterpreterOption: java.lang.String perNote> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOption.perNoteShared : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2)
org.apache.zeppelin.interpreter.InterpreterOption.perNoteShared : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOption.perNoteShared : return $z0
org.apache.zeppelin.interpreter.InterpreterOption.perNoteShared : return $z0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOption.permissionIsSet : $z0 = r0.<org.apache.zeppelin.interpreter.InterpreterOption: boolean setPermission>
org.apache.zeppelin.interpreter.InterpreterOption.permissionIsSet : $z0 = r0.<org.apache.zeppelin.interpreter.InterpreterOption: boolean setPermission> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOption.permissionIsSet : return $z0
org.apache.zeppelin.interpreter.InterpreterOption.permissionIsSet : return $z0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOption.setHost : r0.<org.apache.zeppelin.interpreter.InterpreterOption: java.lang.String host> = r1
org.apache.zeppelin.interpreter.InterpreterOption.setHost : r0.<org.apache.zeppelin.interpreter.InterpreterOption: java.lang.String host> = r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOption.setRemote : r0.<org.apache.zeppelin.interpreter.InterpreterOption: boolean remote> = z0
org.apache.zeppelin.interpreter.InterpreterOption.setRemote : r0.<org.apache.zeppelin.interpreter.InterpreterOption: boolean remote> = z0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOption.perNoteScoped : $r1 = "scoped"
org.apache.zeppelin.interpreter.InterpreterOption.perNoteScoped : $r1 = "scoped" >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOption.perNoteScoped : $r2 = r0.<org.apache.zeppelin.interpreter.InterpreterOption: java.lang.String perNote>
org.apache.zeppelin.interpreter.InterpreterOption.perNoteScoped : $r2 = r0.<org.apache.zeppelin.interpreter.InterpreterOption: java.lang.String perNote> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOption.perNoteScoped : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2)
org.apache.zeppelin.interpreter.InterpreterOption.perNoteScoped : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOption.perNoteScoped : return $z0
