org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : i2 = i0 >>>>>>>> org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : if i2 >= i1
org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : if i2 >= i1 >>>>>>>> org.apache.zeppelin.interpreter.util.InterpreterOutputStream.flush : specialinvoke r0.<org.apache.zeppelin.interpreter.util.LogOutputStream: void flush()>()
org.apache.zeppelin.interpreter.util.InterpreterOutputStream.flush : specialinvoke r0.<org.apache.zeppelin.interpreter.util.LogOutputStream: void flush()>() >>>>>>>> org.apache.zeppelin.interpreter.util.LogOutputStream.flush : $r1 = r0.<org.apache.zeppelin.interpreter.util.LogOutputStream: java.io.ByteArrayOutputStream buffer>
org.apache.zeppelin.interpreter.util.LogOutputStream.flush : $r1 = r0.<org.apache.zeppelin.interpreter.util.LogOutputStream: java.io.ByteArrayOutputStream buffer> >>>>>>>> org.apache.zeppelin.interpreter.util.LogOutputStream.flush : $i0 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: int size()>()
org.apache.zeppelin.interpreter.util.LogOutputStream.flush : $i0 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: int size()>() >>>>>>>> org.apache.zeppelin.interpreter.util.LogOutputStream.flush : if $i0 <= 0
org.apache.zeppelin.interpreter.util.LogOutputStream.flush : if $i0 <= 0 >>>>>>>> org.apache.zeppelin.interpreter.util.InterpreterOutputStream.flush : $r1 = r0.<org.apache.zeppelin.interpreter.util.InterpreterOutputStream: org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput>
org.apache.zeppelin.interpreter.util.InterpreterOutputStream.flush : $r1 = r0.<org.apache.zeppelin.interpreter.util.InterpreterOutputStream: org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput> >>>>>>>> org.apache.zeppelin.interpreter.util.InterpreterOutputStream.flush : if $r1 == null
