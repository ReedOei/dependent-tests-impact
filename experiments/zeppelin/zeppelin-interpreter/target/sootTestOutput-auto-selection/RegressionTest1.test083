org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : $r2 = staticinvoke <org.apache.zeppelin.interpreter.InterpreterGroup: java.util.Collection getAll()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getAll : $r0 = new java.util.LinkedList
org.apache.zeppelin.interpreter.InterpreterGroup.getAll : $r0 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getAll : $r1 = <org.apache.zeppelin.interpreter.InterpreterGroup: java.util.Map allInterpreterGroups>
org.apache.zeppelin.interpreter.InterpreterGroup.getAll : $r1 = <org.apache.zeppelin.interpreter.InterpreterGroup: java.util.Map allInterpreterGroups> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getAll : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>()
org.apache.zeppelin.interpreter.InterpreterGroup.getAll : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getAll : specialinvoke $r0.<java.util.LinkedList: void <init>(java.util.Collection)>($r2)
org.apache.zeppelin.interpreter.InterpreterGroup.getAll : specialinvoke $r0.<java.util.LinkedList: void <init>(java.util.Collection)>($r2) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getAll : return $r0
org.apache.zeppelin.interpreter.InterpreterGroup.getAll : return $r0 >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : if $z0 == 0
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : if $z0 == 0 >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : r4 = (org.apache.zeppelin.interpreter.InterpreterGroup) $r14
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : r4 = (org.apache.zeppelin.interpreter.InterpreterGroup) $r14 >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : $r15 = new org.apache.zeppelin.resource.ResourceSet
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : $r15 = new org.apache.zeppelin.resource.ResourceSet >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : specialinvoke $r15.<org.apache.zeppelin.resource.ResourceSet: void <init>()>()
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : specialinvoke $r15.<org.apache.zeppelin.resource.ResourceSet: void <init>()>() >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : r5 = $r15
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : r5 = $r15 >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : r6 = virtualinvoke r4.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>()
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : r6 = virtualinvoke r4.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getRemoteInterpreterProcess : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess>
org.apache.zeppelin.interpreter.InterpreterGroup.getRemoteInterpreterProcess : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getRemoteInterpreterProcess : return $r1
org.apache.zeppelin.interpreter.InterpreterGroup.getRemoteInterpreterProcess : return $r1 >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : if r6 != null
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : if r6 != null >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : r7 = virtualinvoke r4.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.resource.ResourcePool getResourcePool()>()
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : r7 = virtualinvoke r4.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.resource.ResourcePool getResourcePool()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getResourcePool : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.resource.ResourcePool resourcePool>
org.apache.zeppelin.interpreter.InterpreterGroup.getResourcePool : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.resource.ResourcePool resourcePool> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getResourcePool : return $r1
org.apache.zeppelin.interpreter.InterpreterGroup.getResourcePool : return $r1 >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : if r7 == null
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : if r7 == null >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : if r0 == null
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : if r0 == null >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : r5 = virtualinvoke r5.<org.apache.zeppelin.resource.ResourceSet: org.apache.zeppelin.resource.ResourceSet filterByNoteId(java.lang.String)>(r0)
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : r5 = virtualinvoke r5.<org.apache.zeppelin.resource.ResourceSet: org.apache.zeppelin.resource.ResourceSet filterByNoteId(java.lang.String)>(r0) >>>>>>>> org.apache.zeppelin.resource.ResourceSet.filterByNoteId : $r2 = new org.apache.zeppelin.resource.ResourceSet
org.apache.zeppelin.resource.ResourceSet.filterByNoteId : $r2 = new org.apache.zeppelin.resource.ResourceSet >>>>>>>> org.apache.zeppelin.resource.ResourceSet.filterByNoteId : specialinvoke $r2.<org.apache.zeppelin.resource.ResourceSet: void <init>()>()
org.apache.zeppelin.resource.ResourceSet.filterByNoteId : specialinvoke $r2.<org.apache.zeppelin.resource.ResourceSet: void <init>()>() >>>>>>>> org.apache.zeppelin.resource.ResourceSet.filterByNoteId : r3 = $r2
org.apache.zeppelin.resource.ResourceSet.filterByNoteId : r3 = $r2 >>>>>>>> org.apache.zeppelin.resource.ResourceSet.filterByNoteId : r4 = virtualinvoke r0.<org.apache.zeppelin.resource.ResourceSet: java.util.Iterator iterator()>()
org.apache.zeppelin.resource.ResourceSet.filterByNoteId : r4 = virtualinvoke r0.<org.apache.zeppelin.resource.ResourceSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.resource.ResourceSet.filterByNoteId : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.resource.ResourceSet.filterByNoteId : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.resource.ResourceSet.filterByNoteId : if $z0 == 0
org.apache.zeppelin.resource.ResourceSet.filterByNoteId : if $z0 == 0 >>>>>>>> org.apache.zeppelin.resource.ResourceSet.filterByNoteId : return r3
org.apache.zeppelin.resource.ResourceSet.filterByNoteId : return r3 >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : if r1 == null
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : if r1 == null >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : r5 = virtualinvoke r5.<org.apache.zeppelin.resource.ResourceSet: org.apache.zeppelin.resource.ResourceSet filterByParagraphId(java.lang.String)>(r1)
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : r5 = virtualinvoke r5.<org.apache.zeppelin.resource.ResourceSet: org.apache.zeppelin.resource.ResourceSet filterByParagraphId(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : $r2 = new org.apache.zeppelin.resource.ResourceSet
org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : $r2 = new org.apache.zeppelin.resource.ResourceSet >>>>>>>> org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : specialinvoke $r2.<org.apache.zeppelin.resource.ResourceSet: void <init>()>()
org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : specialinvoke $r2.<org.apache.zeppelin.resource.ResourceSet: void <init>()>() >>>>>>>> org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : r3 = $r2
org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : r3 = $r2 >>>>>>>> org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : r4 = virtualinvoke r0.<org.apache.zeppelin.resource.ResourceSet: java.util.Iterator iterator()>()
org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : r4 = virtualinvoke r0.<org.apache.zeppelin.resource.ResourceSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : if $z0 == 0
org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : if $z0 == 0 >>>>>>>> org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : return r3
org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : return r3 >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : r8 = virtualinvoke r5.<org.apache.zeppelin.resource.ResourceSet: java.util.Iterator iterator()>()
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : r8 = virtualinvoke r5.<org.apache.zeppelin.resource.ResourceSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : if $z2 == 0
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : if $z2 == 0 >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : goto [?= (branch)]
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : $r16 = interfaceinvoke r7.<org.apache.zeppelin.resource.ResourcePool: org.apache.zeppelin.resource.ResourceSet getAll()>()
org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : $r16 = interfaceinvoke r7.<org.apache.zeppelin.resource.ResourcePool: org.apache.zeppelin.resource.ResourceSet getAll()>() >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.getAll : $r1 = new org.apache.zeppelin.resource.ResourceSet
org.apache.zeppelin.resource.LocalResourcePool.getAll : $r1 = new org.apache.zeppelin.resource.ResourceSet >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.getAll : $r2 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.util.Map resources>
org.apache.zeppelin.resource.LocalResourcePool.getAll : $r2 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.util.Map resources> >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.getAll : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>()
org.apache.zeppelin.resource.LocalResourcePool.getAll : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.getAll : specialinvoke $r1.<org.apache.zeppelin.resource.ResourceSet: void <init>(java.util.Collection)>($r3)
org.apache.zeppelin.resource.LocalResourcePool.getAll : specialinvoke $r1.<org.apache.zeppelin.resource.ResourceSet: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.getAll : return $r1
org.apache.zeppelin.resource.LocalResourcePool.getAll : return $r1 >>>>>>>> org.apache.zeppelin.resource.ResourcePoolUtils.removeResourcesBelongsToParagraph : virtualinvoke r5.<org.apache.zeppelin.resource.ResourceSet: boolean addAll(java.util.Collection)>($r16)
