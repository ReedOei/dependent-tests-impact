org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r4 = r0.<org.apache.zeppelin.interpreter.remote.ClientFactory: java.util.Map clientSocketMap> >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : r2 = $r4
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : r2 = $r4 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : entermonitor $r4
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : entermonitor $r4 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r5 = r0.<org.apache.zeppelin.interpreter.remote.ClientFactory: java.util.Map clientSocketMap>
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r5 = r0.<org.apache.zeppelin.interpreter.remote.ClientFactory: java.util.Map clientSocketMap> >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r6 = interfaceinvoke r1.<org.apache.commons.pool2.PooledObject: java.lang.Object getObject()>()
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r6 = interfaceinvoke r1.<org.apache.commons.pool2.PooledObject: java.lang.Object getObject()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : r3 = $r14
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : r3 = $r14 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : exitmonitor r2
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : exitmonitor r2 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : throw r3
