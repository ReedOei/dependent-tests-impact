org.apache.zeppelin.scheduler.ExecutorFactory.singleton : $r0 = <org.apache.zeppelin.scheduler.ExecutorFactory: org.apache.zeppelin.scheduler.ExecutorFactory _executor> >>>>>>>> org.apache.zeppelin.scheduler.ExecutorFactory.singleton : if $r0 != null
org.apache.zeppelin.scheduler.ExecutorFactory.singleton : if $r0 != null >>>>>>>> org.apache.zeppelin.scheduler.ExecutorFactory.singleton : $r7 = <org.apache.zeppelin.scheduler.ExecutorFactory: org.apache.zeppelin.scheduler.ExecutorFactory _executor>
org.apache.zeppelin.scheduler.ExecutorFactory.singleton : $r7 = <org.apache.zeppelin.scheduler.ExecutorFactory: org.apache.zeppelin.scheduler.ExecutorFactory _executor> >>>>>>>> org.apache.zeppelin.scheduler.ExecutorFactory.singleton : return $r7
org.apache.zeppelin.scheduler.ExecutorFactory.singleton : return $r7 >>>>>>>> org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : $r4 = r0.<org.apache.zeppelin.scheduler.ExecutorFactory: java.util.Map executor>
org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : $r4 = r0.<org.apache.zeppelin.scheduler.ExecutorFactory: java.util.Map executor> >>>>>>>> org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : r2 = $r4
org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : r2 = $r4 >>>>>>>> org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : entermonitor $r4
org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : entermonitor $r4 >>>>>>>> org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : $r5 = r0.<org.apache.zeppelin.scheduler.ExecutorFactory: java.util.Map executor>
org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : $r5 = r0.<org.apache.zeppelin.scheduler.ExecutorFactory: java.util.Map executor> >>>>>>>> org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : if $z0 != 0
org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : if $z0 != 0 >>>>>>>> org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : $r9 = r0.<org.apache.zeppelin.scheduler.ExecutorFactory: java.util.Map executor>
org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : $r9 = r0.<org.apache.zeppelin.scheduler.ExecutorFactory: java.util.Map executor> >>>>>>>> org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : $r11 = (java.util.concurrent.ExecutorService) $r10
org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : $r11 = (java.util.concurrent.ExecutorService) $r10 >>>>>>>> org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : exitmonitor r2
org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : exitmonitor r2 >>>>>>>> org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : return $r11
org.apache.zeppelin.scheduler.ExecutorFactory.createOrGet : return $r11 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : r0.<org.apache.zeppelin.scheduler.RemoteScheduler: boolean terminate> = 1
org.apache.zeppelin.scheduler.RemoteScheduler.stop : r0.<org.apache.zeppelin.scheduler.RemoteScheduler: boolean terminate> = 1 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : $r3 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.stop : $r3 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : r1 = $r3
org.apache.zeppelin.scheduler.RemoteScheduler.stop : r1 = $r3 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : entermonitor $r3
org.apache.zeppelin.scheduler.RemoteScheduler.stop : entermonitor $r3 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : $r4 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.stop : $r4 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : virtualinvoke $r4.<java.lang.Object: void notify()>()
org.apache.zeppelin.scheduler.RemoteScheduler.stop : virtualinvoke $r4.<java.lang.Object: void notify()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : exitmonitor r1
org.apache.zeppelin.scheduler.RemoteScheduler.stop : exitmonitor r1 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : goto [?= return]
org.apache.zeppelin.scheduler.RemoteScheduler.stop : goto [?= return] >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : $r1 = new java.util.LinkedList
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : $r1 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : specialinvoke $r1.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : specialinvoke $r1.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : r2 = $r1
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : r2 = $r1 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : $r7 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : $r7 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : r3 = $r7
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : r3 = $r7 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : entermonitor $r7
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : entermonitor $r7 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : $r8 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List running>
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : $r8 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List running> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : if $z0 == 0
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : if $z0 == 0 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : exitmonitor r3
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : exitmonitor r3 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : goto [?= return r2]
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : goto [?= return r2] >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : return r2
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : return r2 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $r6 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $r6 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : r2 = $r6
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : r2 = $r6 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : entermonitor $r6
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : entermonitor $r6 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $r7 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $r7 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : if $z0 == 0
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : if $z0 == 0 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : exitmonitor r2
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : exitmonitor r2 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : goto [?= return null]
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : goto [?= return null] >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : return null
