org.apache.zeppelin.scheduler.ParallelScheduler.run : goto [?= exitmonitor r1] >>>>>>>> org.apache.zeppelin.scheduler.ParallelScheduler.run : exitmonitor r1
org.apache.zeppelin.scheduler.ParallelScheduler.run : exitmonitor r1 >>>>>>>> org.apache.zeppelin.scheduler.ParallelScheduler.run : goto [?= $z0 = r0.<org.apache.zeppelin.scheduler.ParallelScheduler: boolean terminate>]
org.apache.zeppelin.scheduler.ParallelScheduler.run : goto [?= $z0 = r0.<org.apache.zeppelin.scheduler.ParallelScheduler: boolean terminate>] >>>>>>>> org.apache.zeppelin.scheduler.ParallelScheduler.run : $z0 = r0.<org.apache.zeppelin.scheduler.ParallelScheduler: boolean terminate>
org.apache.zeppelin.scheduler.ParallelScheduler.run : $z0 = r0.<org.apache.zeppelin.scheduler.ParallelScheduler: boolean terminate> >>>>>>>> org.apache.zeppelin.scheduler.ParallelScheduler.run : if $z0 != 0
org.apache.zeppelin.scheduler.ParallelScheduler.run : if $z0 != 0 >>>>>>>> org.apache.zeppelin.scheduler.ParallelScheduler.run : n0 = null
org.apache.zeppelin.scheduler.ParallelScheduler.run : n0 = null >>>>>>>> org.apache.zeppelin.scheduler.ParallelScheduler.run : $r4 = r0.<org.apache.zeppelin.scheduler.ParallelScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.ParallelScheduler.run : $r4 = r0.<org.apache.zeppelin.scheduler.ParallelScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.ParallelScheduler.run : r1 = $r4
org.apache.zeppelin.scheduler.ParallelScheduler.run : r1 = $r4 >>>>>>>> org.apache.zeppelin.scheduler.ParallelScheduler.run : entermonitor $r4
org.apache.zeppelin.scheduler.ParallelScheduler.run : entermonitor $r4 >>>>>>>> org.apache.zeppelin.scheduler.ParallelScheduler.run : $r5 = r0.<org.apache.zeppelin.scheduler.ParallelScheduler: java.util.List running>
org.apache.zeppelin.scheduler.ParallelScheduler.run : $r5 = r0.<org.apache.zeppelin.scheduler.ParallelScheduler: java.util.List running> >>>>>>>> org.apache.zeppelin.scheduler.ParallelScheduler.run : $i0 = interfaceinvoke $r5.<java.util.List: int size()>()
org.apache.zeppelin.scheduler.ParallelScheduler.run : $i0 = interfaceinvoke $r5.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.scheduler.ParallelScheduler.run : $i1 = r0.<org.apache.zeppelin.scheduler.ParallelScheduler: int maxConcurrency>
org.apache.zeppelin.scheduler.ParallelScheduler.run : $i1 = r0.<org.apache.zeppelin.scheduler.ParallelScheduler: int maxConcurrency> >>>>>>>> org.apache.zeppelin.scheduler.ParallelScheduler.run : if $i0 >= $i1
org.apache.zeppelin.scheduler.ParallelScheduler.run : if $i0 >= $i1 >>>>>>>> org.apache.zeppelin.scheduler.ParallelScheduler.run : $r7 = r0.<org.apache.zeppelin.scheduler.ParallelScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.ParallelScheduler.run : $r7 = r0.<org.apache.zeppelin.scheduler.ParallelScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.ParallelScheduler.run : virtualinvoke $r7.<java.lang.Object: void wait(long)>(500L)
org.apache.zeppelin.scheduler.ParallelScheduler.run : virtualinvoke $r7.<java.lang.Object: void wait(long)>(500L) >>>>>>>> org.apache.zeppelin.interpreter.Interpreter.register : staticinvoke <org.apache.zeppelin.interpreter.Interpreter: void register(java.lang.String,java.lang.String,java.lang.String,boolean,java.util.Map)>(r0, r1, r2, 0, r3)
org.apache.zeppelin.interpreter.Interpreter.register : staticinvoke <org.apache.zeppelin.interpreter.Interpreter: void register(java.lang.String,java.lang.String,java.lang.String,boolean,java.util.Map)>(r0, r1, r2, 0, r3) >>>>>>>> org.apache.zeppelin.interpreter.Interpreter.register : $r4 = <org.apache.zeppelin.interpreter.Interpreter: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.Interpreter.register : $r4 = <org.apache.zeppelin.interpreter.Interpreter: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.Interpreter.register : interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Static initialization is deprecated for interpreter {}, You should change it to use interpreter-setting.json in your jar or interpreter/{interpreter}/interpreter-setting.json", r0)
