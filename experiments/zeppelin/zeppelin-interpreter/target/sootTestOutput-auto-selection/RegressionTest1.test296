org.apache.zeppelin.resource.DistributedResourcePool.get : $r2 = virtualinvoke r0.<org.apache.zeppelin.resource.DistributedResourcePool: org.apache.zeppelin.resource.Resource get(java.lang.String,boolean)>(r1, 1) >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePool.get : r2 = specialinvoke r0.<org.apache.zeppelin.resource.LocalResourcePool: org.apache.zeppelin.resource.Resource get(java.lang.String)>(r1)
org.apache.zeppelin.resource.DistributedResourcePool.get : r2 = specialinvoke r0.<org.apache.zeppelin.resource.LocalResourcePool: org.apache.zeppelin.resource.Resource get(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : $r2 = new org.apache.zeppelin.resource.ResourceId
org.apache.zeppelin.resource.LocalResourcePool.get : $r2 = new org.apache.zeppelin.resource.ResourceId >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : $r4 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.lang.String resourcePoolId>
org.apache.zeppelin.resource.LocalResourcePool.get : $r4 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.lang.String resourcePoolId> >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : specialinvoke $r2.<org.apache.zeppelin.resource.ResourceId: void <init>(java.lang.String,java.lang.String)>($r4, r1)
org.apache.zeppelin.resource.LocalResourcePool.get : specialinvoke $r2.<org.apache.zeppelin.resource.ResourceId: void <init>(java.lang.String,java.lang.String)>($r4, r1) >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : r3 = $r2
org.apache.zeppelin.resource.LocalResourcePool.get : r3 = $r2 >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : $r5 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.util.Map resources>
org.apache.zeppelin.resource.LocalResourcePool.get : $r5 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.util.Map resources> >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.zeppelin.resource.LocalResourcePool.get : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : $r7 = (org.apache.zeppelin.resource.Resource) $r6
org.apache.zeppelin.resource.LocalResourcePool.get : $r7 = (org.apache.zeppelin.resource.Resource) $r6 >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : return $r7
org.apache.zeppelin.resource.LocalResourcePool.get : return $r7 >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePool.get : if r2 == null
org.apache.zeppelin.resource.DistributedResourcePool.get : if r2 == null >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePool.get : if z0 == 0
org.apache.zeppelin.resource.DistributedResourcePool.get : if z0 == 0 >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePool.get : $r4 = r0.<org.apache.zeppelin.resource.DistributedResourcePool: org.apache.zeppelin.resource.ResourcePoolConnector connector>
org.apache.zeppelin.resource.DistributedResourcePool.get : $r4 = r0.<org.apache.zeppelin.resource.DistributedResourcePool: org.apache.zeppelin.resource.ResourcePoolConnector connector> >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePool.get : $r5 = interfaceinvoke $r4.<org.apache.zeppelin.resource.ResourcePoolConnector: org.apache.zeppelin.resource.ResourceSet getAllResources()>()
