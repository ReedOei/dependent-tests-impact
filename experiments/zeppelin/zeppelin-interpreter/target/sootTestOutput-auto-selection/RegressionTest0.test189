org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toInterpreterResultMessage : $r1 = new org.apache.zeppelin.interpreter.InterpreterResultMessage >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toInterpreterResultMessage : $r3 = r0.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: org.apache.zeppelin.interpreter.InterpreterResult$Type type>
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toInterpreterResultMessage : $r3 = r0.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: org.apache.zeppelin.interpreter.InterpreterResult$Type type> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toInterpreterResultMessage : $r2 = new java.lang.String
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toInterpreterResultMessage : $r2 = new java.lang.String >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toInterpreterResultMessage : $r4 = virtualinvoke r0.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: byte[] toByteArray()>()
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toInterpreterResultMessage : $r4 = virtualinvoke r0.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: byte[] toByteArray()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : $r1 = new java.io.ByteArrayOutputStream
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : $r1 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : r2 = $r1
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : r2 = $r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : $r8 = new java.util.LinkedList
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : $r8 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : specialinvoke $r8.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : specialinvoke $r8.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : r3 = $r8
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : r3 = $r8 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : $r9 = r0.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: java.util.List outList>
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : $r9 = r0.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: java.util.List outList> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : r4 = $r9
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : r4 = $r9 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : entermonitor $r9
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : entermonitor $r9 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : $r10 = r0.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: java.util.List outList>
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : $r10 = r0.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: java.util.List outList> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r10)
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r10) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : exitmonitor r4
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : exitmonitor r4 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : goto [?= r12 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()]
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : goto [?= r12 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : r12 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : r12 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : if $z1 == 0
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : virtualinvoke r2.<java.io.ByteArrayOutputStream: void close()>()
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : virtualinvoke r2.<java.io.ByteArrayOutputStream: void close()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : $r20 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : $r20 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : return $r20
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toByteArray : return $r20 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toInterpreterResultMessage : specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r4)
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toInterpreterResultMessage : specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r4) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toInterpreterResultMessage : specialinvoke $r1.<org.apache.zeppelin.interpreter.InterpreterResultMessage: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Type,java.lang.String)>($r3, $r2)
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toInterpreterResultMessage : specialinvoke $r1.<org.apache.zeppelin.interpreter.InterpreterResultMessage: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Type,java.lang.String)>($r3, $r2) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toInterpreterResultMessage : return $r1
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.toInterpreterResultMessage : return $r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.write : $r2 = r0.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: java.util.List outList>
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.write : $r2 = r0.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: java.util.List outList> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.write : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.write : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.writeResource : $r6 = r0.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: java.util.List resourceSearchPaths>
org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.writeResource : $r6 = r0.<org.apache.zeppelin.interpreter.InterpreterResultMessageOutput: java.util.List resourceSearchPaths> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessageOutput.writeResource : r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
