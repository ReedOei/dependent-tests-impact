org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : $r7 = r0.<org.apache.zeppelin.interpreter.InterpreterPropertyBuilder: java.util.Map properties> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : $r6 = new org.apache.zeppelin.interpreter.InterpreterProperty
org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : $r6 = new org.apache.zeppelin.interpreter.InterpreterProperty >>>>>>>> org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : specialinvoke $r6.<org.apache.zeppelin.interpreter.InterpreterProperty: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4, r5)
org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : specialinvoke $r6.<org.apache.zeppelin.interpreter.InterpreterProperty: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4, r5) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6)
org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : return r0
org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.add : return r0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.build : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterPropertyBuilder: java.util.Map properties>
org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.build : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterPropertyBuilder: java.util.Map properties> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.build : return $r1
org.apache.zeppelin.interpreter.InterpreterPropertyBuilder.build : return $r1 >>>>>>>> org.apache.zeppelin.interpreter.Interpreter.register : staticinvoke <org.apache.zeppelin.interpreter.Interpreter: void register(java.lang.String,java.lang.String,java.lang.String,boolean,java.util.Map)>(r0, r1, r2, 0, r3)
org.apache.zeppelin.interpreter.Interpreter.register : staticinvoke <org.apache.zeppelin.interpreter.Interpreter: void register(java.lang.String,java.lang.String,java.lang.String,boolean,java.util.Map)>(r0, r1, r2, 0, r3) >>>>>>>> org.apache.zeppelin.interpreter.Interpreter.register : $r4 = <org.apache.zeppelin.interpreter.Interpreter: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.Interpreter.register : $r4 = <org.apache.zeppelin.interpreter.Interpreter: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.Interpreter.register : interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Static initialization is deprecated for interpreter {}, You should change it to use interpreter-setting.json in your jar or interpreter/{interpreter}/interpreter-setting.json", r0)
