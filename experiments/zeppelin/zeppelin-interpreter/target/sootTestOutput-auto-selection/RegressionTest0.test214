org.apache.zeppelin.interpreter.InterpreterGroup.getAll : $r0 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getAll : $r1 = <org.apache.zeppelin.interpreter.InterpreterGroup: java.util.Map allInterpreterGroups>
org.apache.zeppelin.interpreter.InterpreterGroup.getAll : $r1 = <org.apache.zeppelin.interpreter.InterpreterGroup: java.util.Map allInterpreterGroups> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getAll : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>()
org.apache.zeppelin.interpreter.InterpreterGroup.getAll : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getAll : specialinvoke $r0.<java.util.LinkedList: void <init>(java.util.Collection)>($r2)
org.apache.zeppelin.interpreter.InterpreterGroup.getAll : specialinvoke $r0.<java.util.LinkedList: void <init>(java.util.Collection)>($r2) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.getAll : return $r0
