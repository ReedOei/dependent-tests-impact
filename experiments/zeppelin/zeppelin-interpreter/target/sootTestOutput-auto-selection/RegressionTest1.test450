org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : i2 = i0 >>>>>>>> org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : if i2 >= i1
org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : if i2 >= i1 >>>>>>>> org.apache.zeppelin.interpreter.util.InterpreterOutputStream.ignoreLeadingNewLinesFromScalaReporter : r0.<org.apache.zeppelin.interpreter.util.InterpreterOutputStream: boolean ignoreLeadingNewLinesFromScalaReporter> = 1
org.apache.zeppelin.interpreter.util.InterpreterOutputStream.ignoreLeadingNewLinesFromScalaReporter : r0.<org.apache.zeppelin.interpreter.util.InterpreterOutputStream: boolean ignoreLeadingNewLinesFromScalaReporter> = 1 >>>>>>>> org.apache.zeppelin.interpreter.util.InterpreterOutputStream.getInterpreterOutput : $r1 = r0.<org.apache.zeppelin.interpreter.util.InterpreterOutputStream: org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput>
org.apache.zeppelin.interpreter.util.InterpreterOutputStream.getInterpreterOutput : $r1 = r0.<org.apache.zeppelin.interpreter.util.InterpreterOutputStream: org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput> >>>>>>>> org.apache.zeppelin.interpreter.util.InterpreterOutputStream.getInterpreterOutput : return $r1
org.apache.zeppelin.interpreter.util.InterpreterOutputStream.getInterpreterOutput : return $r1 >>>>>>>> org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : $z0 = r0.<org.apache.zeppelin.interpreter.util.InterpreterOutputStream: boolean ignoreLeadingNewLinesFromScalaReporter>
org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : $z0 = r0.<org.apache.zeppelin.interpreter.util.InterpreterOutputStream: boolean ignoreLeadingNewLinesFromScalaReporter> >>>>>>>> org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : if $z0 == 0
org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : if i0 != 10
org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : if i0 != 10 >>>>>>>> org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : r0.<org.apache.zeppelin.interpreter.util.InterpreterOutputStream: boolean ignoreLeadingNewLinesFromScalaReporter> = 0
org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : r0.<org.apache.zeppelin.interpreter.util.InterpreterOutputStream: boolean ignoreLeadingNewLinesFromScalaReporter> = 0 >>>>>>>> org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : specialinvoke r0.<org.apache.zeppelin.interpreter.util.LogOutputStream: void write(int)>(i0)
org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : specialinvoke r0.<org.apache.zeppelin.interpreter.util.LogOutputStream: void write(int)>(i0) >>>>>>>> org.apache.zeppelin.interpreter.util.LogOutputStream.write : b1 = (byte) i0
org.apache.zeppelin.interpreter.util.LogOutputStream.write : b1 = (byte) i0 >>>>>>>> org.apache.zeppelin.interpreter.util.LogOutputStream.write : if b1 == 10
org.apache.zeppelin.interpreter.util.LogOutputStream.write : if b1 == 10 >>>>>>>> org.apache.zeppelin.interpreter.util.LogOutputStream.write : if b1 == 13
org.apache.zeppelin.interpreter.util.LogOutputStream.write : if b1 == 13 >>>>>>>> org.apache.zeppelin.interpreter.util.LogOutputStream.write : $r1 = r0.<org.apache.zeppelin.interpreter.util.LogOutputStream: java.io.ByteArrayOutputStream buffer>
org.apache.zeppelin.interpreter.util.LogOutputStream.write : $r1 = r0.<org.apache.zeppelin.interpreter.util.LogOutputStream: java.io.ByteArrayOutputStream buffer> >>>>>>>> org.apache.zeppelin.interpreter.util.LogOutputStream.write : virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>(i0)
org.apache.zeppelin.interpreter.util.LogOutputStream.write : virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>(i0) >>>>>>>> org.apache.zeppelin.interpreter.util.LogOutputStream.write : goto [?= (branch)]
org.apache.zeppelin.interpreter.util.LogOutputStream.write : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.interpreter.util.LogOutputStream.write : if b1 != 13
org.apache.zeppelin.interpreter.util.LogOutputStream.write : if b1 != 13 >>>>>>>> org.apache.zeppelin.interpreter.util.LogOutputStream.write : $z1 = 0
org.apache.zeppelin.interpreter.util.LogOutputStream.write : $z1 = 0 >>>>>>>> org.apache.zeppelin.interpreter.util.LogOutputStream.write : r0.<org.apache.zeppelin.interpreter.util.LogOutputStream: boolean skip> = $z1
org.apache.zeppelin.interpreter.util.LogOutputStream.write : r0.<org.apache.zeppelin.interpreter.util.LogOutputStream: boolean skip> = $z1 >>>>>>>> org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : $r7 = r0.<org.apache.zeppelin.interpreter.util.InterpreterOutputStream: org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput>
org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : $r7 = r0.<org.apache.zeppelin.interpreter.util.InterpreterOutputStream: org.apache.zeppelin.interpreter.InterpreterOutput interpreterOutput> >>>>>>>> org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : if $r7 == null
org.apache.zeppelin.interpreter.util.InterpreterOutputStream.write : if $r7 == null >>>>>>>> org.apache.zeppelin.interpreter.util.LogOutputStream.getMessageLevel : $i0 = r0.<org.apache.zeppelin.interpreter.util.LogOutputStream: int level>
org.apache.zeppelin.interpreter.util.LogOutputStream.getMessageLevel : $i0 = r0.<org.apache.zeppelin.interpreter.util.LogOutputStream: int level> >>>>>>>> org.apache.zeppelin.interpreter.util.LogOutputStream.getMessageLevel : return $i0
