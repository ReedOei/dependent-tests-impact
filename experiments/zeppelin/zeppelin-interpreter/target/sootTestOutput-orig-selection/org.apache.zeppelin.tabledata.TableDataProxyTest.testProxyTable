org.apache.zeppelin.interpreter.InterpreterResultMessage.getData : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterResultMessage: java.lang.String data> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterResultMessage.getData : return $r1
org.apache.zeppelin.interpreter.InterpreterResultMessage.getData : return $r1 >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : $r3 = new org.apache.zeppelin.resource.ResourceId
org.apache.zeppelin.resource.LocalResourcePool.put : $r3 = new org.apache.zeppelin.resource.ResourceId >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : $r6 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.lang.String resourcePoolId>
org.apache.zeppelin.resource.LocalResourcePool.put : $r6 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.lang.String resourcePoolId> >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : specialinvoke $r3.<org.apache.zeppelin.resource.ResourceId: void <init>(java.lang.String,java.lang.String)>($r6, r1)
org.apache.zeppelin.resource.LocalResourcePool.put : specialinvoke $r3.<org.apache.zeppelin.resource.ResourceId: void <init>(java.lang.String,java.lang.String)>($r6, r1) >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : r4 = $r3
org.apache.zeppelin.resource.LocalResourcePool.put : r4 = $r3 >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : $r7 = new org.apache.zeppelin.resource.Resource
org.apache.zeppelin.resource.LocalResourcePool.put : $r7 = new org.apache.zeppelin.resource.Resource >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : specialinvoke $r7.<org.apache.zeppelin.resource.Resource: void <init>(org.apache.zeppelin.resource.LocalResourcePool,org.apache.zeppelin.resource.ResourceId,java.lang.Object)>(r0, r4, r2)
org.apache.zeppelin.resource.LocalResourcePool.put : specialinvoke $r7.<org.apache.zeppelin.resource.Resource: void <init>(org.apache.zeppelin.resource.LocalResourcePool,org.apache.zeppelin.resource.ResourceId,java.lang.Object)>(r0, r4, r2) >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : r5 = $r7
org.apache.zeppelin.resource.LocalResourcePool.put : r5 = $r7 >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : $r8 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.util.Map resources>
org.apache.zeppelin.resource.LocalResourcePool.put : $r8 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.util.Map resources> >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5)
org.apache.zeppelin.resource.LocalResourcePool.put : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5) >>>>>>>> org.apache.zeppelin.resource.ResourceId.hashCode : $r1 = new java.lang.StringBuilder
org.apache.zeppelin.resource.ResourceId.hashCode : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.resource.ResourceId.hashCode : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.resource.ResourceId.hashCode : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.resource.ResourceId.hashCode : $r2 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String resourcePoolId>
org.apache.zeppelin.resource.ResourceId.hashCode : $r2 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String resourcePoolId> >>>>>>>> org.apache.zeppelin.resource.ResourceId.hashCode : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
org.apache.zeppelin.resource.ResourceId.hashCode : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) >>>>>>>> org.apache.zeppelin.resource.ResourceId.hashCode : $r4 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String noteId>
org.apache.zeppelin.resource.ResourceId.hashCode : $r4 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String noteId> >>>>>>>> org.apache.zeppelin.resource.ResourceId.hashCode : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
org.apache.zeppelin.resource.ResourceId.hashCode : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) >>>>>>>> org.apache.zeppelin.resource.ResourceId.hashCode : $r6 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String paragraphId>
org.apache.zeppelin.resource.ResourceId.hashCode : $r6 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String paragraphId> >>>>>>>> org.apache.zeppelin.resource.ResourceId.hashCode : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.zeppelin.resource.ResourceId.hashCode : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.zeppelin.resource.ResourceId.hashCode : $r8 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String name>
org.apache.zeppelin.resource.ResourceId.hashCode : $r8 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String name> >>>>>>>> org.apache.zeppelin.resource.ResourceId.hashCode : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.zeppelin.resource.ResourceId.hashCode : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.zeppelin.resource.ResourceId.hashCode : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.resource.ResourceId.hashCode : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.resource.ResourceId.hashCode : $i0 = virtualinvoke $r10.<java.lang.String: int hashCode()>()
org.apache.zeppelin.resource.ResourceId.hashCode : $i0 = virtualinvoke $r10.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.zeppelin.resource.ResourceId.hashCode : return $i0
org.apache.zeppelin.resource.ResourceId.hashCode : return $i0 >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : $r2 = new org.apache.zeppelin.resource.ResourceId
org.apache.zeppelin.resource.LocalResourcePool.get : $r2 = new org.apache.zeppelin.resource.ResourceId >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : $r4 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.lang.String resourcePoolId>
org.apache.zeppelin.resource.LocalResourcePool.get : $r4 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.lang.String resourcePoolId> >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : specialinvoke $r2.<org.apache.zeppelin.resource.ResourceId: void <init>(java.lang.String,java.lang.String)>($r4, r1)
org.apache.zeppelin.resource.LocalResourcePool.get : specialinvoke $r2.<org.apache.zeppelin.resource.ResourceId: void <init>(java.lang.String,java.lang.String)>($r4, r1) >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : r3 = $r2
org.apache.zeppelin.resource.LocalResourcePool.get : r3 = $r2 >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : $r5 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.util.Map resources>
org.apache.zeppelin.resource.LocalResourcePool.get : $r5 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.util.Map resources> >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.zeppelin.resource.LocalResourcePool.get : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : $z0 = r1 instanceof org.apache.zeppelin.resource.ResourceId
org.apache.zeppelin.resource.ResourceId.equals : $z0 = r1 instanceof org.apache.zeppelin.resource.ResourceId >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : if $z0 == 0
org.apache.zeppelin.resource.ResourceId.equals : if $z0 == 0 >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : r2 = (org.apache.zeppelin.resource.ResourceId) r1
org.apache.zeppelin.resource.ResourceId.equals : r2 = (org.apache.zeppelin.resource.ResourceId) r1 >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : $r3 = r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String name>
org.apache.zeppelin.resource.ResourceId.equals : $r3 = r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String name> >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : $r4 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String name>
org.apache.zeppelin.resource.ResourceId.equals : $r4 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String name> >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : $z1 = specialinvoke r0.<org.apache.zeppelin.resource.ResourceId: boolean equals(java.lang.String,java.lang.String)>($r3, $r4)
org.apache.zeppelin.resource.ResourceId.equals : $z1 = specialinvoke r0.<org.apache.zeppelin.resource.ResourceId: boolean equals(java.lang.String,java.lang.String)>($r3, $r4) >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : if r1 != null
org.apache.zeppelin.resource.ResourceId.equals : if r1 != null >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : if r1 == null
org.apache.zeppelin.resource.ResourceId.equals : if r1 == null >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : if r2 == null
org.apache.zeppelin.resource.ResourceId.equals : if r2 == null >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2)
org.apache.zeppelin.resource.ResourceId.equals : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : return $z0
org.apache.zeppelin.resource.ResourceId.equals : return $z0 >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : if $z1 == 0
org.apache.zeppelin.resource.ResourceId.equals : if $z1 == 0 >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : $r5 = r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String resourcePoolId>
org.apache.zeppelin.resource.ResourceId.equals : $r5 = r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String resourcePoolId> >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : $r6 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String resourcePoolId>
org.apache.zeppelin.resource.ResourceId.equals : $r6 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String resourcePoolId> >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : $z2 = specialinvoke r0.<org.apache.zeppelin.resource.ResourceId: boolean equals(java.lang.String,java.lang.String)>($r5, $r6)
org.apache.zeppelin.resource.ResourceId.equals : $z2 = specialinvoke r0.<org.apache.zeppelin.resource.ResourceId: boolean equals(java.lang.String,java.lang.String)>($r5, $r6) >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : if $z2 == 0
org.apache.zeppelin.resource.ResourceId.equals : if $z2 == 0 >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : $r7 = r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String noteId>
org.apache.zeppelin.resource.ResourceId.equals : $r7 = r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String noteId> >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : $r8 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String noteId>
org.apache.zeppelin.resource.ResourceId.equals : $r8 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String noteId> >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : $z3 = specialinvoke r0.<org.apache.zeppelin.resource.ResourceId: boolean equals(java.lang.String,java.lang.String)>($r7, $r8)
org.apache.zeppelin.resource.ResourceId.equals : $z3 = specialinvoke r0.<org.apache.zeppelin.resource.ResourceId: boolean equals(java.lang.String,java.lang.String)>($r7, $r8) >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : if r2 != null
org.apache.zeppelin.resource.ResourceId.equals : if r2 != null >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : return 1
org.apache.zeppelin.resource.ResourceId.equals : return 1 >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : if $z3 == 0
org.apache.zeppelin.resource.ResourceId.equals : if $z3 == 0 >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : $r9 = r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String paragraphId>
org.apache.zeppelin.resource.ResourceId.equals : $r9 = r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String paragraphId> >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : $r10 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String paragraphId>
org.apache.zeppelin.resource.ResourceId.equals : $r10 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String paragraphId> >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : $z4 = specialinvoke r0.<org.apache.zeppelin.resource.ResourceId: boolean equals(java.lang.String,java.lang.String)>($r9, $r10)
org.apache.zeppelin.resource.ResourceId.equals : $z4 = specialinvoke r0.<org.apache.zeppelin.resource.ResourceId: boolean equals(java.lang.String,java.lang.String)>($r9, $r10) >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : if $z4 == 0
org.apache.zeppelin.resource.ResourceId.equals : if $z4 == 0 >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : $z5 = 1
org.apache.zeppelin.resource.ResourceId.equals : $z5 = 1 >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : goto [?= return $z5]
org.apache.zeppelin.resource.ResourceId.equals : goto [?= return $z5] >>>>>>>> org.apache.zeppelin.resource.ResourceId.equals : return $z5
org.apache.zeppelin.resource.ResourceId.equals : return $z5 >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : $r7 = (org.apache.zeppelin.resource.Resource) $r6
org.apache.zeppelin.resource.LocalResourcePool.get : $r7 = (org.apache.zeppelin.resource.Resource) $r6 >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : return $r7
org.apache.zeppelin.resource.LocalResourcePool.get : return $r7 >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.columns : $r1 = r0.<org.apache.zeppelin.tabledata.TableDataProxy: org.apache.zeppelin.resource.Resource resource>
org.apache.zeppelin.tabledata.TableDataProxy.columns : $r1 = r0.<org.apache.zeppelin.tabledata.TableDataProxy: org.apache.zeppelin.resource.Resource resource> >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.columns : $r2 = virtualinvoke $r1.<org.apache.zeppelin.resource.Resource: java.lang.Object invokeMethod(java.lang.String,java.lang.Class[],java.lang.Object[])>("columns", null, null)
org.apache.zeppelin.tabledata.TableDataProxy.columns : $r2 = virtualinvoke $r1.<org.apache.zeppelin.resource.Resource: java.lang.Object invokeMethod(java.lang.String,java.lang.Class[],java.lang.Object[])>("columns", null, null) >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r6 = r0.<org.apache.zeppelin.resource.Resource: java.lang.Object r>
org.apache.zeppelin.resource.Resource.invokeMethod : $r6 = r0.<org.apache.zeppelin.resource.Resource: java.lang.Object r> >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : if $r6 == null
org.apache.zeppelin.resource.Resource.invokeMethod : if $r6 == null >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r7 = r0.<org.apache.zeppelin.resource.Resource: java.lang.Object r>
org.apache.zeppelin.resource.Resource.invokeMethod : $r7 = r0.<org.apache.zeppelin.resource.Resource: java.lang.Object r> >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>()
org.apache.zeppelin.resource.Resource.invokeMethod : $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : r4 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, r2)
org.apache.zeppelin.resource.Resource.invokeMethod : r4 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, r2) >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : virtualinvoke r4.<java.lang.reflect.Method: void setAccessible(boolean)>(1)
org.apache.zeppelin.resource.Resource.invokeMethod : virtualinvoke r4.<java.lang.reflect.Method: void setAccessible(boolean)>(1) >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r9 = r0.<org.apache.zeppelin.resource.Resource: java.lang.Object r>
org.apache.zeppelin.resource.Resource.invokeMethod : $r9 = r0.<org.apache.zeppelin.resource.Resource: java.lang.Object r> >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : r5 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r9, r3)
org.apache.zeppelin.resource.Resource.invokeMethod : r5 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r9, r3) >>>>>>>> org.apache.zeppelin.tabledata.InterpreterResultTableData.columns : $r1 = r0.<org.apache.zeppelin.tabledata.InterpreterResultTableData: org.apache.zeppelin.tabledata.ColumnDef[] columnDef>
org.apache.zeppelin.tabledata.InterpreterResultTableData.columns : $r1 = r0.<org.apache.zeppelin.tabledata.InterpreterResultTableData: org.apache.zeppelin.tabledata.ColumnDef[] columnDef> >>>>>>>> org.apache.zeppelin.tabledata.InterpreterResultTableData.columns : return $r1
org.apache.zeppelin.tabledata.InterpreterResultTableData.columns : return $r1 >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : return r5
org.apache.zeppelin.resource.Resource.invokeMethod : return r5 >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.columns : $r3 = (org.apache.zeppelin.tabledata.ColumnDef[]) $r2
org.apache.zeppelin.tabledata.TableDataProxy.columns : $r3 = (org.apache.zeppelin.tabledata.ColumnDef[]) $r2 >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.columns : $r4 = (org.apache.zeppelin.tabledata.ColumnDef[]) $r3
org.apache.zeppelin.tabledata.TableDataProxy.columns : $r4 = (org.apache.zeppelin.tabledata.ColumnDef[]) $r3 >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.columns : return $r4
org.apache.zeppelin.tabledata.TableDataProxy.columns : return $r4 >>>>>>>> org.apache.zeppelin.tabledata.ColumnDef.name : $r1 = r0.<org.apache.zeppelin.tabledata.ColumnDef: java.lang.String name>
org.apache.zeppelin.tabledata.ColumnDef.name : $r1 = r0.<org.apache.zeppelin.tabledata.ColumnDef: java.lang.String name> >>>>>>>> org.apache.zeppelin.tabledata.ColumnDef.name : return $r1
org.apache.zeppelin.tabledata.ColumnDef.name : return $r1 >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.rows : $r1 = new java.lang.StringBuilder
org.apache.zeppelin.tabledata.TableDataProxy.rows : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.rows : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.tabledata.TableDataProxy.rows : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.rows : $r5 = r0.<org.apache.zeppelin.tabledata.TableDataProxy: org.apache.zeppelin.resource.Resource resource>
org.apache.zeppelin.tabledata.TableDataProxy.rows : $r5 = r0.<org.apache.zeppelin.tabledata.TableDataProxy: org.apache.zeppelin.resource.Resource resource> >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.rows : $r6 = virtualinvoke $r5.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.ResourceId getResourceId()>()
org.apache.zeppelin.tabledata.TableDataProxy.rows : $r6 = virtualinvoke $r5.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.ResourceId getResourceId()>() >>>>>>>> org.apache.zeppelin.resource.Resource.getResourceId : $r1 = r0.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.ResourceId resourceId>
org.apache.zeppelin.resource.Resource.getResourceId : $r1 = r0.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.ResourceId resourceId> >>>>>>>> org.apache.zeppelin.resource.Resource.getResourceId : return $r1
org.apache.zeppelin.resource.Resource.getResourceId : return $r1 >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.rows : $r7 = virtualinvoke $r6.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>()
org.apache.zeppelin.tabledata.TableDataProxy.rows : $r7 = virtualinvoke $r6.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.resource.ResourceId.getName : $r1 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String name>
org.apache.zeppelin.resource.ResourceId.getName : $r1 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String name> >>>>>>>> org.apache.zeppelin.resource.ResourceId.getName : return $r1
org.apache.zeppelin.resource.ResourceId.getName : return $r1 >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.rows : $r8 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
org.apache.zeppelin.tabledata.TableDataProxy.rows : $r8 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.rows : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".rows")
org.apache.zeppelin.tabledata.TableDataProxy.rows : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".rows") >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.rows : r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.tabledata.TableDataProxy.rows : r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.rows : $r10 = r0.<org.apache.zeppelin.tabledata.TableDataProxy: org.apache.zeppelin.resource.Resource resource>
org.apache.zeppelin.tabledata.TableDataProxy.rows : $r10 = r0.<org.apache.zeppelin.tabledata.TableDataProxy: org.apache.zeppelin.resource.Resource resource> >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.rows : r3 = virtualinvoke $r10.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.Resource invokeMethod(java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.String)>("rows", null, null, r2)
org.apache.zeppelin.tabledata.TableDataProxy.rows : r3 = virtualinvoke $r10.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.Resource invokeMethod(java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.String)>("rows", null, null, r2) >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : if $r7 == null
org.apache.zeppelin.resource.Resource.invokeMethod : if $r7 == null >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r8 = r0.<org.apache.zeppelin.resource.Resource: java.lang.Object r>
org.apache.zeppelin.resource.Resource.invokeMethod : $r8 = r0.<org.apache.zeppelin.resource.Resource: java.lang.Object r> >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>()
org.apache.zeppelin.resource.Resource.invokeMethod : $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : r5 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, r2)
org.apache.zeppelin.resource.Resource.invokeMethod : r5 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, r2) >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r10 = r0.<org.apache.zeppelin.resource.Resource: java.lang.Object r>
org.apache.zeppelin.resource.Resource.invokeMethod : $r10 = r0.<org.apache.zeppelin.resource.Resource: java.lang.Object r> >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : r6 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r10, r3)
org.apache.zeppelin.resource.Resource.invokeMethod : r6 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r10, r3) >>>>>>>> org.apache.zeppelin.tabledata.InterpreterResultTableData.rows : $r1 = r0.<org.apache.zeppelin.tabledata.InterpreterResultTableData: java.util.List rows>
org.apache.zeppelin.tabledata.InterpreterResultTableData.rows : $r1 = r0.<org.apache.zeppelin.tabledata.InterpreterResultTableData: java.util.List rows> >>>>>>>> org.apache.zeppelin.tabledata.InterpreterResultTableData.rows : $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.tabledata.InterpreterResultTableData.rows : $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.tabledata.InterpreterResultTableData.rows : return $r2
org.apache.zeppelin.tabledata.InterpreterResultTableData.rows : return $r2 >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r11 = r0.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.LocalResourcePool pool>
org.apache.zeppelin.resource.Resource.invokeMethod : $r11 = r0.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.LocalResourcePool pool> >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r12 = r0.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.ResourceId resourceId>
org.apache.zeppelin.resource.Resource.invokeMethod : $r12 = r0.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.ResourceId resourceId> >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r13 = virtualinvoke $r12.<org.apache.zeppelin.resource.ResourceId: java.lang.String getNoteId()>()
org.apache.zeppelin.resource.Resource.invokeMethod : $r13 = virtualinvoke $r12.<org.apache.zeppelin.resource.ResourceId: java.lang.String getNoteId()>() >>>>>>>> org.apache.zeppelin.resource.ResourceId.getNoteId : $r1 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String noteId>
org.apache.zeppelin.resource.ResourceId.getNoteId : $r1 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String noteId> >>>>>>>> org.apache.zeppelin.resource.ResourceId.getNoteId : return $r1
org.apache.zeppelin.resource.ResourceId.getNoteId : return $r1 >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r14 = r0.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.ResourceId resourceId>
org.apache.zeppelin.resource.Resource.invokeMethod : $r14 = r0.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.ResourceId resourceId> >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r15 = virtualinvoke $r14.<org.apache.zeppelin.resource.ResourceId: java.lang.String getParagraphId()>()
org.apache.zeppelin.resource.Resource.invokeMethod : $r15 = virtualinvoke $r14.<org.apache.zeppelin.resource.ResourceId: java.lang.String getParagraphId()>() >>>>>>>> org.apache.zeppelin.resource.ResourceId.getParagraphId : $r1 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String paragraphId>
org.apache.zeppelin.resource.ResourceId.getParagraphId : $r1 = r0.<org.apache.zeppelin.resource.ResourceId: java.lang.String paragraphId> >>>>>>>> org.apache.zeppelin.resource.ResourceId.getParagraphId : return $r1
org.apache.zeppelin.resource.ResourceId.getParagraphId : return $r1 >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : virtualinvoke $r11.<org.apache.zeppelin.resource.LocalResourcePool: void put(java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>($r13, $r15, r4, r6)
org.apache.zeppelin.resource.Resource.invokeMethod : virtualinvoke $r11.<org.apache.zeppelin.resource.LocalResourcePool: void put(java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>($r13, $r15, r4, r6) >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : $r5 = new org.apache.zeppelin.resource.ResourceId
org.apache.zeppelin.resource.LocalResourcePool.put : $r5 = new org.apache.zeppelin.resource.ResourceId >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : $r8 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.lang.String resourcePoolId>
org.apache.zeppelin.resource.LocalResourcePool.put : $r8 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.lang.String resourcePoolId> >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : specialinvoke $r5.<org.apache.zeppelin.resource.ResourceId: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r8, r1, r2, r3)
org.apache.zeppelin.resource.LocalResourcePool.put : specialinvoke $r5.<org.apache.zeppelin.resource.ResourceId: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r8, r1, r2, r3) >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : r6 = $r5
org.apache.zeppelin.resource.LocalResourcePool.put : r6 = $r5 >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : $r9 = new org.apache.zeppelin.resource.Resource
org.apache.zeppelin.resource.LocalResourcePool.put : $r9 = new org.apache.zeppelin.resource.Resource >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : specialinvoke $r9.<org.apache.zeppelin.resource.Resource: void <init>(org.apache.zeppelin.resource.LocalResourcePool,org.apache.zeppelin.resource.ResourceId,java.lang.Object)>(r0, r6, r4)
org.apache.zeppelin.resource.LocalResourcePool.put : specialinvoke $r9.<org.apache.zeppelin.resource.Resource: void <init>(org.apache.zeppelin.resource.LocalResourcePool,org.apache.zeppelin.resource.ResourceId,java.lang.Object)>(r0, r6, r4) >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : r7 = $r9
org.apache.zeppelin.resource.LocalResourcePool.put : r7 = $r9 >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : $r10 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.util.Map resources>
org.apache.zeppelin.resource.LocalResourcePool.put : $r10 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.util.Map resources> >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.put : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r7)
org.apache.zeppelin.resource.LocalResourcePool.put : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r7) >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r16 = r0.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.LocalResourcePool pool>
org.apache.zeppelin.resource.Resource.invokeMethod : $r16 = r0.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.LocalResourcePool pool> >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r17 = r0.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.ResourceId resourceId>
org.apache.zeppelin.resource.Resource.invokeMethod : $r17 = r0.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.ResourceId resourceId> >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r18 = virtualinvoke $r17.<org.apache.zeppelin.resource.ResourceId: java.lang.String getNoteId()>()
org.apache.zeppelin.resource.Resource.invokeMethod : $r18 = virtualinvoke $r17.<org.apache.zeppelin.resource.ResourceId: java.lang.String getNoteId()>() >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r19 = r0.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.ResourceId resourceId>
org.apache.zeppelin.resource.Resource.invokeMethod : $r19 = r0.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.ResourceId resourceId> >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r20 = virtualinvoke $r19.<org.apache.zeppelin.resource.ResourceId: java.lang.String getParagraphId()>()
org.apache.zeppelin.resource.Resource.invokeMethod : $r20 = virtualinvoke $r19.<org.apache.zeppelin.resource.ResourceId: java.lang.String getParagraphId()>() >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : $r21 = virtualinvoke $r16.<org.apache.zeppelin.resource.LocalResourcePool: org.apache.zeppelin.resource.Resource get(java.lang.String,java.lang.String,java.lang.String)>($r18, $r20, r4)
org.apache.zeppelin.resource.Resource.invokeMethod : $r21 = virtualinvoke $r16.<org.apache.zeppelin.resource.LocalResourcePool: org.apache.zeppelin.resource.Resource get(java.lang.String,java.lang.String,java.lang.String)>($r18, $r20, r4) >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : $r4 = new org.apache.zeppelin.resource.ResourceId
org.apache.zeppelin.resource.LocalResourcePool.get : $r4 = new org.apache.zeppelin.resource.ResourceId >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : $r6 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.lang.String resourcePoolId>
org.apache.zeppelin.resource.LocalResourcePool.get : $r6 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.lang.String resourcePoolId> >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : specialinvoke $r4.<org.apache.zeppelin.resource.ResourceId: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r6, r1, r2, r3)
org.apache.zeppelin.resource.LocalResourcePool.get : specialinvoke $r4.<org.apache.zeppelin.resource.ResourceId: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r6, r1, r2, r3) >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : r5 = $r4
org.apache.zeppelin.resource.LocalResourcePool.get : r5 = $r4 >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : $r7 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.util.Map resources>
org.apache.zeppelin.resource.LocalResourcePool.get : $r7 = r0.<org.apache.zeppelin.resource.LocalResourcePool: java.util.Map resources> >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)
org.apache.zeppelin.resource.LocalResourcePool.get : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : $r9 = (org.apache.zeppelin.resource.Resource) $r8
org.apache.zeppelin.resource.LocalResourcePool.get : $r9 = (org.apache.zeppelin.resource.Resource) $r8 >>>>>>>> org.apache.zeppelin.resource.LocalResourcePool.get : return $r9
org.apache.zeppelin.resource.LocalResourcePool.get : return $r9 >>>>>>>> org.apache.zeppelin.resource.Resource.invokeMethod : return $r21
org.apache.zeppelin.resource.Resource.invokeMethod : return $r21 >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.rows : $r11 = new org.apache.zeppelin.tabledata.ProxyRowIterator
org.apache.zeppelin.tabledata.TableDataProxy.rows : $r11 = new org.apache.zeppelin.tabledata.ProxyRowIterator >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.rows : specialinvoke $r11.<org.apache.zeppelin.tabledata.ProxyRowIterator: void <init>(org.apache.zeppelin.resource.Resource)>(r3)
org.apache.zeppelin.tabledata.TableDataProxy.rows : specialinvoke $r11.<org.apache.zeppelin.tabledata.ProxyRowIterator: void <init>(org.apache.zeppelin.resource.Resource)>(r3) >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.rows : r4 = $r11
org.apache.zeppelin.tabledata.TableDataProxy.rows : r4 = $r11 >>>>>>>> org.apache.zeppelin.tabledata.TableDataProxy.rows : return r4
org.apache.zeppelin.tabledata.TableDataProxy.rows : return r4 >>>>>>>> org.apache.zeppelin.tabledata.ProxyRowIterator.next : $r1 = virtualinvoke r0.<org.apache.zeppelin.tabledata.ProxyRowIterator: org.apache.zeppelin.tabledata.Row next()>()
org.apache.zeppelin.tabledata.ProxyRowIterator.next : $r1 = virtualinvoke r0.<org.apache.zeppelin.tabledata.ProxyRowIterator: org.apache.zeppelin.tabledata.Row next()>() >>>>>>>> org.apache.zeppelin.tabledata.ProxyRowIterator.next : $r1 = r0.<org.apache.zeppelin.tabledata.ProxyRowIterator: org.apache.zeppelin.resource.Resource rows>
org.apache.zeppelin.tabledata.ProxyRowIterator.next : $r1 = r0.<org.apache.zeppelin.tabledata.ProxyRowIterator: org.apache.zeppelin.resource.Resource rows> >>>>>>>> org.apache.zeppelin.tabledata.ProxyRowIterator.next : $r2 = virtualinvoke $r1.<org.apache.zeppelin.resource.Resource: java.lang.Object invokeMethod(java.lang.String,java.lang.Class[],java.lang.Object[])>("next", null, null)
org.apache.zeppelin.tabledata.ProxyRowIterator.next : $r2 = virtualinvoke $r1.<org.apache.zeppelin.resource.Resource: java.lang.Object invokeMethod(java.lang.String,java.lang.Class[],java.lang.Object[])>("next", null, null) >>>>>>>> org.apache.zeppelin.tabledata.ProxyRowIterator.next : $r3 = (org.apache.zeppelin.tabledata.Row) $r2
org.apache.zeppelin.tabledata.ProxyRowIterator.next : $r3 = (org.apache.zeppelin.tabledata.Row) $r2 >>>>>>>> org.apache.zeppelin.tabledata.ProxyRowIterator.next : return $r3
org.apache.zeppelin.tabledata.ProxyRowIterator.next : return $r3 >>>>>>>> org.apache.zeppelin.tabledata.ProxyRowIterator.next : return $r1
org.apache.zeppelin.tabledata.ProxyRowIterator.next : return $r1 >>>>>>>> org.apache.zeppelin.tabledata.Row.get : $r1 = r0.<org.apache.zeppelin.tabledata.Row: java.lang.Object[] data>
org.apache.zeppelin.tabledata.Row.get : $r1 = r0.<org.apache.zeppelin.tabledata.Row: java.lang.Object[] data> >>>>>>>> org.apache.zeppelin.tabledata.Row.get : return $r1
org.apache.zeppelin.tabledata.Row.get : return $r1 >>>>>>>> org.apache.zeppelin.tabledata.ProxyRowIterator.hasNext : $r1 = r0.<org.apache.zeppelin.tabledata.ProxyRowIterator: org.apache.zeppelin.resource.Resource rows>
org.apache.zeppelin.tabledata.ProxyRowIterator.hasNext : $r1 = r0.<org.apache.zeppelin.tabledata.ProxyRowIterator: org.apache.zeppelin.resource.Resource rows> >>>>>>>> org.apache.zeppelin.tabledata.ProxyRowIterator.hasNext : virtualinvoke $r1.<org.apache.zeppelin.resource.Resource: java.lang.Object invokeMethod(java.lang.String,java.lang.Class[],java.lang.Object[])>("hasNext", null, null)
org.apache.zeppelin.tabledata.ProxyRowIterator.hasNext : virtualinvoke $r1.<org.apache.zeppelin.resource.Resource: java.lang.Object invokeMethod(java.lang.String,java.lang.Class[],java.lang.Object[])>("hasNext", null, null) >>>>>>>> org.apache.zeppelin.tabledata.ProxyRowIterator.hasNext : return 0
