org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $z0 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: boolean stop> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $z0 != 0
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : n0 = null
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : n0 = null >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r12 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.nio.file.WatchService watcher>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r12 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.nio.file.WatchService watcher> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r13 = interfaceinvoke $r12.<java.nio.file.WatchService: java.nio.file.WatchKey poll(long,java.util.concurrent.TimeUnit)>(1L, $r1)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r13 = interfaceinvoke $r12.<java.nio.file.WatchService: java.nio.file.WatchKey poll(long,java.util.concurrent.TimeUnit)>(1L, $r1) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : goto [?= (branch)]
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if r13 != null
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if r13 != null >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : goto [?= $z0 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: boolean stop>]
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : goto [?= $z0 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: boolean stop>] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r15 = interfaceinvoke r13.<java.nio.file.WatchKey: java.util.List pollEvents()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r15 = interfaceinvoke r13.<java.nio.file.WatchKey: java.util.List pollEvents()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $z1 == 0
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r3 = (java.nio.file.WatchEvent) $r17
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r3 = (java.nio.file.WatchEvent) $r17 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r4 = interfaceinvoke r3.<java.nio.file.WatchEvent: java.nio.file.WatchEvent$Kind kind()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r4 = interfaceinvoke r3.<java.nio.file.WatchEvent: java.nio.file.WatchEvent$Kind kind()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r18 = <java.nio.file.StandardWatchEventKinds: java.nio.file.WatchEvent$Kind OVERFLOW>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r18 = <java.nio.file.StandardWatchEventKinds: java.nio.file.WatchEvent$Kind OVERFLOW> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if r4 != $r18
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if r4 != $r18 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r5 = r3
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r5 = r3 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r19 = interfaceinvoke r5.<java.nio.file.WatchEvent: java.lang.Object context()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r19 = interfaceinvoke r5.<java.nio.file.WatchEvent: java.lang.Object context()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r6 = (java.nio.file.Path) $r19
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r6 = (java.nio.file.Path) $r19 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r20 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.Map watchKeys>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r20 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.Map watchKeys> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r7 = $r20
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r7 = $r20 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : entermonitor $r20
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : entermonitor $r20 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r21 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.List watchFiles>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r21 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.List watchFiles> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r8 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r8 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $z2 == 0
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $z2 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r22 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r22 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r9 = (java.io.File) $r22
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r9 = (java.io.File) $r22 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r23 = virtualinvoke r9.<java.io.File: java.lang.String getName()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r23 = virtualinvoke r9.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r24 = interfaceinvoke r6.<java.nio.file.Path: java.lang.String toString()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r24 = interfaceinvoke r6.<java.nio.file.Path: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $i0 = virtualinvoke $r23.<java.lang.String: int compareTo(java.lang.String)>($r24)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $i0 = virtualinvoke $r23.<java.lang.String: int compareTo(java.lang.String)>($r24) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $i0 != 0
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $i0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $z3 = interfaceinvoke r6.<java.nio.file.Path: boolean isAbsolute()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $z3 = interfaceinvoke r6.<java.nio.file.Path: boolean isAbsolute()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $z3 == 0
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $z3 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r27 = new java.io.File
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r27 = new java.io.File >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r28 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.Map watchKeys>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r28 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.Map watchKeys> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r30 = (java.io.File) $r29
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r30 = (java.io.File) $r29 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r31 = interfaceinvoke r6.<java.nio.file.Path: java.lang.String toString()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r31 = interfaceinvoke r6.<java.nio.file.Path: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : specialinvoke $r27.<java.io.File: void <init>(java.io.File,java.lang.String)>($r30, $r31)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : specialinvoke $r27.<java.io.File: void <init>(java.io.File,java.lang.String)>($r30, $r31) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r10 = $r27
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r10 = $r27 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r32 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r32 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r33 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r33 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File change detected ")
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File change detected ") >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r35 = virtualinvoke r10.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r35 = virtualinvoke r10.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : interfaceinvoke $r32.<org.slf4j.Logger: void info(java.lang.String)>($r37)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : interfaceinvoke $r32.<org.slf4j.Logger: void info(java.lang.String)>($r37) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r38 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: org.apache.zeppelin.interpreter.InterpreterOutputChangeListener listener>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r38 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: org.apache.zeppelin.interpreter.InterpreterOutputChangeListener listener> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r18 = <java.nio.file.StandardWatchEventKinds: java.nio.file.WatchEvent$Kind OVERFLOW>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r18 = <java.nio.file.StandardWatchEventKinds: java.nio.file.WatchEvent$Kind OVERFLOW> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if r4 != $r18
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if r4 != $r18 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r5 = r3
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r5 = r3 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r19 = interfaceinvoke r5.<java.nio.file.WatchEvent: java.lang.Object context()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r19 = interfaceinvoke r5.<java.nio.file.WatchEvent: java.lang.Object context()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r6 = (java.nio.file.Path) $r19
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r6 = (java.nio.file.Path) $r19 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r20 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.Map watchKeys>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r20 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.Map watchKeys> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r7 = $r20
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r7 = $r20 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : entermonitor $r20
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : entermonitor $r20 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r21 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.List watchFiles>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r21 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.List watchFiles> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r8 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r8 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $z2 == 0
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $z2 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r22 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r22 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r9 = (java.io.File) $r22
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r9 = (java.io.File) $r22 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r23 = virtualinvoke r9.<java.io.File: java.lang.String getName()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r23 = virtualinvoke r9.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r24 = interfaceinvoke r6.<java.nio.file.Path: java.lang.String toString()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r24 = interfaceinvoke r6.<java.nio.file.Path: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $i0 = virtualinvoke $r23.<java.lang.String: int compareTo(java.lang.String)>($r24)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $i0 = virtualinvoke $r23.<java.lang.String: int compareTo(java.lang.String)>($r24) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $i0 != 0
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $i0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $z3 = interfaceinvoke r6.<java.nio.file.Path: boolean isAbsolute()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $z3 = interfaceinvoke r6.<java.nio.file.Path: boolean isAbsolute()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $z3 == 0
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $z3 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r27 = new java.io.File
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r27 = new java.io.File >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r28 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.Map watchKeys>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r28 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.Map watchKeys> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r30 = (java.io.File) $r29
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r30 = (java.io.File) $r29 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r31 = interfaceinvoke r6.<java.nio.file.Path: java.lang.String toString()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r31 = interfaceinvoke r6.<java.nio.file.Path: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : specialinvoke $r27.<java.io.File: void <init>(java.io.File,java.lang.String)>($r30, $r31)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : specialinvoke $r27.<java.io.File: void <init>(java.io.File,java.lang.String)>($r30, $r31) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r10 = $r27
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : r10 = $r27 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r32 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r32 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r33 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r33 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File change detected ")
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File change detected ") >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r35 = virtualinvoke r10.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r35 = virtualinvoke r10.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : interfaceinvoke $r32.<org.slf4j.Logger: void info(java.lang.String)>($r37)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : interfaceinvoke $r32.<org.slf4j.Logger: void info(java.lang.String)>($r37) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r38 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: org.apache.zeppelin.interpreter.InterpreterOutputChangeListener listener>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r38 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: org.apache.zeppelin.interpreter.InterpreterOutputChangeListener listener> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $r38 == null
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if $r38 == null >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r39 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: org.apache.zeppelin.interpreter.InterpreterOutputChangeListener listener>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : $r39 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: org.apache.zeppelin.interpreter.InterpreterOutputChangeListener listener> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : interfaceinvoke $r39.<org.apache.zeppelin.interpreter.InterpreterOutputChangeListener: void fileChanged(java.io.File)>(r10)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : interfaceinvoke $r39.<org.apache.zeppelin.interpreter.InterpreterOutputChangeListener: void fileChanged(java.io.File)>(r10) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest: java.io.File fileChanged> = r1
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest: java.io.File fileChanged> = r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : $i0 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest: int numChanged>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : $i0 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest: int numChanged> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : $i1 = $i0 + 1
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : $i1 = $i0 + 1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest: int numChanged> = $i1
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest: int numChanged> = $i1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : r2 = r0
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : r2 = r0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : entermonitor r0
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : entermonitor r0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : virtualinvoke r0.<java.lang.Object: void notify()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : virtualinvoke r0.<java.lang.Object: void notify()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : exitmonitor r2
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : exitmonitor r2 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : goto [?= return]
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcherTest.fileChanged : goto [?= return] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : exitmonitor r7
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : exitmonitor r7 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : goto [?= $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : goto [?= $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : z4 = interfaceinvoke r13.<java.nio.file.WatchKey: boolean reset()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : z4 = interfaceinvoke r13.<java.nio.file.WatchKey: boolean reset()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.run : if z4 != 0
