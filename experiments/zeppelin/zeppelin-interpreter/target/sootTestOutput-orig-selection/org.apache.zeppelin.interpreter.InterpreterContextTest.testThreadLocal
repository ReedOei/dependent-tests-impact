org.apache.zeppelin.interpreter.InterpreterContext.get : $r0 = <org.apache.zeppelin.interpreter.InterpreterContext: java.lang.ThreadLocal threadIC> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterContext.get : $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>()
org.apache.zeppelin.interpreter.InterpreterContext.get : $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterContext.get : $r2 = (org.apache.zeppelin.interpreter.InterpreterContext) $r1
org.apache.zeppelin.interpreter.InterpreterContext.get : $r2 = (org.apache.zeppelin.interpreter.InterpreterContext) $r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterContext.get : return $r2
org.apache.zeppelin.interpreter.InterpreterContext.get : return $r2 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterContext.set : $r1 = <org.apache.zeppelin.interpreter.InterpreterContext: java.lang.ThreadLocal threadIC>
org.apache.zeppelin.interpreter.InterpreterContext.set : $r1 = <org.apache.zeppelin.interpreter.InterpreterContext: java.lang.ThreadLocal threadIC> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterContext.set : virtualinvoke $r1.<java.lang.ThreadLocal: void set(java.lang.Object)>(r0)
org.apache.zeppelin.interpreter.InterpreterContext.set : virtualinvoke $r1.<java.lang.ThreadLocal: void set(java.lang.Object)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterContext.remove : $r0 = <org.apache.zeppelin.interpreter.InterpreterContext: java.lang.ThreadLocal threadIC>
org.apache.zeppelin.interpreter.InterpreterContext.remove : $r0 = <org.apache.zeppelin.interpreter.InterpreterContext: java.lang.ThreadLocal threadIC> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterContext.remove : virtualinvoke $r0.<java.lang.ThreadLocal: void remove()>()
