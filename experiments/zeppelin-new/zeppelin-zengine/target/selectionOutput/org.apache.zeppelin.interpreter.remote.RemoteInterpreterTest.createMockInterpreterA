org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : $r3 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : $r4 = class "org/apache/zeppelin/interpreter/remote/mock/MockInterpreterA"
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : $r4 = class "org/apache/zeppelin/interpreter/remote/mock/MockInterpreterA" >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : $r7 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : $r7 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : $r5 = new java.io.File
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : $r5 = new java.io.File >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : $r6 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest: java.lang.String INTERPRETER_SCRIPT>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : $r6 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest: java.lang.String INTERPRETER_SCRIPT> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r6)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r6) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : $r8 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : $r8 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest: java.util.HashMap env>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest: java.util.HashMap env> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : specialinvoke $r3.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: void <init>(java.util.Properties,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int,org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener,org.apache.zeppelin.helium.ApplicationEventListener,java.lang.String,java.lang.Boolean)>(r1, r2, $r7, $r8, "fake", "fakeRepo", $r9, 10000, null, null, "anonymous", $r10)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : specialinvoke $r3.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: void <init>(java.util.Properties,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int,org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener,org.apache.zeppelin.helium.ApplicationEventListener,java.lang.String,java.lang.Boolean)>(r1, r2, $r7, $r8, "fake", "fakeRepo", $r9, 10000, null, null, "anonymous", $r10) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest.createMockInterpreterA : return $r3
