org.apache.zeppelin.interpreter.remote.mock.MockInterpreterB.getScheduler : r1 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.mock.MockInterpreterB: org.apache.zeppelin.interpreter.remote.mock.MockInterpreterA getInterpreterA()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.MockInterpreterB.getScheduler : if r1 == null
org.apache.zeppelin.interpreter.remote.mock.MockInterpreterB.getScheduler : if r1 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.MockInterpreterB.getScheduler : $r2 = virtualinvoke r1.<org.apache.zeppelin.interpreter.remote.mock.MockInterpreterA: org.apache.zeppelin.scheduler.Scheduler getScheduler()>()
org.apache.zeppelin.interpreter.remote.mock.MockInterpreterB.getScheduler : if r1 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.MockInterpreterB.getScheduler : return null
org.apache.zeppelin.interpreter.remote.mock.MockInterpreterB.getScheduler : $r2 = virtualinvoke r1.<org.apache.zeppelin.interpreter.remote.mock.MockInterpreterA: org.apache.zeppelin.scheduler.Scheduler getScheduler()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.MockInterpreterB.getScheduler : return $r2
