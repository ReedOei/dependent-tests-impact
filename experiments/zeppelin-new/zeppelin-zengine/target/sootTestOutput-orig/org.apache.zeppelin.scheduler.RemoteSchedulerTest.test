org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.access$100 : $r1 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session openWatcherSession()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.access$000 : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.access$002 : <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession> = r0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.connectToExistingProcess : $r1 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String host>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.isRunning : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: boolean running>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r13 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterDir>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r27 = new java.io.ByteArrayOutputStream
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i1 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-d", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r42 = new org.apache.zeppelin.interpreter.InterpreterException]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r33 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r24 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterGroupName>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-g", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r6 = staticinvoke <org.apache.commons.exec.environment.EnvironmentUtils: java.util.Map getProcEnvironment()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r30 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r26 = new org.apache.commons.exec.DefaultExecutor
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r21 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String localRepoDir>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= (branch)]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r32 = new org.apache.commons.exec.ExecuteWatchdog
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r42 = new org.apache.zeppelin.interpreter.InterpreterException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : staticinvoke <java.lang.Thread: void sleep(long)>(500L)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r4.<java.io.ByteArrayOutputStream: void flush()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z2 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: boolean running>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i0 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: int findRandomAvailablePortOnAllLocalInterfaces()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: boolean running> = 1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()", "org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start")]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r35 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.Map env>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i8 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-p", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r36 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-l", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r28 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r5.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(r4)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r37 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getInterpreterProcess : $r19 = virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getInterpreterProcess : r1 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.InterpreterGroup getInterpreterGroup()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getInterpreterProcess : r2 = r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getInterpreterProcess : $z0 = specialinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean connectToExistingProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getInterpreterProcess : if r1 != null goto r2 = r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getInterpreterProcess : virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterGroup: void setRemoteInterpreterProcess(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess)>(r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getInterpreterProcess : $r11 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getInterpreterProcess : $r6 = virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.createInstace : $r0 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.eclipse.jetty.websocket.api.Session session> = r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : specialinvoke r0.<org.eclipse.jetty.websocket.api.WebSocketAdapter: void onWebSocketConnect(org.eclipse.jetty.websocket.api.Session)>(r1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream.setOutputStream : exitmonitor r3
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream.setOutputStream : r3 = r0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream.setOutputStream : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: java.io.OutputStream out> = r1
org.apache.zeppelin.util.WatcherSecurityKey.getKey : $r0 = <org.apache.zeppelin.util.WatcherSecurityKey: java.lang.String KEY>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : return r5
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : goto [?= return r5]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : $r7 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : n0 = null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : r4 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket createInstace()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : $r3 = staticinvoke <org.apache.zeppelin.util.WatcherSecurityKey: java.lang.String getKey()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : virtualinvoke r2.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void setHeader(java.lang.String,java.lang.String)>("Origin", "*")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : r5 = null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : $r1 = new org.eclipse.jetty.websocket.client.ClientUpgradeRequest
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : $r10 = interfaceinvoke r9.<java.util.concurrent.Future: java.lang.Object get()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r6 = <org.apache.zeppelin.ticket.TicketContainer: org.apache.zeppelin.ticket.TicketContainer instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> = "watcher"
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r8 = interfaceinvoke r1.<org.eclipse.jetty.websocket.api.Session: org.eclipse.jetty.websocket.api.RemoteEndpoint getRemote()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r5 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket: org.eclipse.jetty.websocket.api.Session connection> = r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket: org.slf4j.Logger LOG>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getEnvFromInterpreterProperty : return r3
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getEnvFromInterpreterProperty : $r2 = new java.util.HashMap
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getEnvFromInterpreterProperty : $r6 = virtualinvoke r1.<java.util.Properties: java.util.Set keySet()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.onProcessFailed : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: boolean running> = 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.onProcessFailed : $r2 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean initialized>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r4 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r1 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.InterpreterGroup getInterpreterGroup()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r2 = r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r13 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String userName>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionKey>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.eclipse.jetty.websocket.api.Session session>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : $r5 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : specialinvoke r0.<org.eclipse.jetty.websocket.api.WebSocketAdapter: void onWebSocketText(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : if i0 >= 300 goto return
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : $r5 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session access$000()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : i0 = 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient this$0>
org.apache.zeppelin.ticket.TicketContainer.getTicket : $r9 = r0.<org.apache.zeppelin.ticket.TicketContainer: java.util.Map sessions>
org.apache.zeppelin.ticket.TicketContainer.getTicket : return r3
org.apache.zeppelin.ticket.TicketContainer.getTicket : $r4 = r0.<org.apache.zeppelin.ticket.TicketContainer: java.util.Map sessions>
org.apache.zeppelin.ticket.TicketContainer.getTicket : $r7 = new org.apache.zeppelin.ticket.TicketContainer$Entry
org.apache.zeppelin.ticket.TicketContainer.getTicket : if r2 != null goto r3 = r2.<org.apache.zeppelin.ticket.TicketContainer$Entry: java.lang.String ticket>
org.apache.zeppelin.ticket.TicketContainer.getTicket : r3 = r2.<org.apache.zeppelin.ticket.TicketContainer$Entry: java.lang.String ticket>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketText : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket: com.google.gson.Gson GSON>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketText : $r6 = r3.<org.apache.zeppelin.notebook.socket.WatcherMessage: java.lang.String noteId>
org.apache.zeppelin.interpreter.remote.AppendOutputRunnerTest$TestAppender.append : $r2 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputRunnerTest$TestAppender: java.util.List log>
