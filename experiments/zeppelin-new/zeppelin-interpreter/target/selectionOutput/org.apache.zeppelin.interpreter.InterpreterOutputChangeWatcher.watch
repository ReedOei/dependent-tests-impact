org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : if $z0 == 0
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r9 = virtualinvoke r1.<java.io.File: java.io.File getParentFile()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r10 = new java.io.IOException
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r10 = new java.io.IOException >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r3 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r11 = virtualinvoke r1.<java.io.File: java.lang.String getName()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r11 = virtualinvoke r1.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a file")
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a file") >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r14)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r14) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : throw $r10
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r9 = virtualinvoke r1.<java.io.File: java.io.File getParentFile()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : r2 = virtualinvoke $r9.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : r2 = virtualinvoke $r9.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : goto [?= (branch)]
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : if r2 != null
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : if r2 != null >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : r2 = "/"
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : if r2 != null >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r15 = staticinvoke <java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r15 = staticinvoke <java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r16 = newarray (java.lang.String)[0]
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r16 = newarray (java.lang.String)[0] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : r4 = virtualinvoke $r15.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>(r2, $r16)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : r4 = virtualinvoke $r15.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>(r2, $r16) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r17 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r17 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r18 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r18 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("watch ")
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("watch ") >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String)>($r21)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String)>($r21) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r22 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.nio.file.WatchService watcher>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r22 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.nio.file.WatchService watcher> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r23 = newarray (java.nio.file.WatchEvent$Kind)[3]
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r23 = newarray (java.nio.file.WatchEvent$Kind)[3] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r5 = <java.nio.file.StandardWatchEventKinds: java.nio.file.WatchEvent$Kind ENTRY_CREATE>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r5 = <java.nio.file.StandardWatchEventKinds: java.nio.file.WatchEvent$Kind ENTRY_CREATE> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r23[0] = $r5
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r23[0] = $r5 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r24 = <java.nio.file.StandardWatchEventKinds: java.nio.file.WatchEvent$Kind ENTRY_DELETE>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r24 = <java.nio.file.StandardWatchEventKinds: java.nio.file.WatchEvent$Kind ENTRY_DELETE> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r23[1] = $r24
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r23[1] = $r24 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r25 = <java.nio.file.StandardWatchEventKinds: java.nio.file.WatchEvent$Kind ENTRY_MODIFY>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r25 = <java.nio.file.StandardWatchEventKinds: java.nio.file.WatchEvent$Kind ENTRY_MODIFY> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r23[2] = $r25
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r23[2] = $r25 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : r6 = interfaceinvoke r4.<java.nio.file.Path: java.nio.file.WatchKey register(java.nio.file.WatchService,java.nio.file.WatchEvent$Kind[])>($r22, $r23)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : r6 = interfaceinvoke r4.<java.nio.file.Path: java.nio.file.WatchKey register(java.nio.file.WatchService,java.nio.file.WatchEvent$Kind[])>($r22, $r23) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r26 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.Map watchKeys>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r26 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.Map watchKeys> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : r7 = $r26
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : r7 = $r26 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : entermonitor $r26
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : entermonitor $r26 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r27 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.Map watchKeys>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : entermonitor $r26 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r31 := @caughtexception
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : r8 = $r31 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : exitmonitor r7
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : r8 = $r31 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r31 := @caughtexception
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : exitmonitor r7 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : throw r8
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : exitmonitor r7 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r31 := @caughtexception
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r27 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.Map watchKeys> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r28 = new java.io.File
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r27 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.Map watchKeys> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r31 := @caughtexception
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r28 = new java.io.File >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : specialinvoke $r28.<java.io.File: void <init>(java.lang.String)>(r2)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r28 = new java.io.File >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r31 := @caughtexception
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : specialinvoke $r28.<java.io.File: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r28)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : specialinvoke $r28.<java.io.File: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r31 := @caughtexception
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r28) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r30 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.List watchFiles>
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r28) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r31 := @caughtexception
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r30 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.List watchFiles> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r30 = r0.<org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher: java.util.List watchFiles> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r31 := @caughtexception
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : exitmonitor r7
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r31 := @caughtexception
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : exitmonitor r7 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : goto [?= return]
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : exitmonitor r7 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r31 := @caughtexception
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : goto [?= return] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : return
org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : r2 = "/" >>>>>>>> org.apache.zeppelin.interpreter.InterpreterOutputChangeWatcher.watch : $r15 = staticinvoke <java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>()
