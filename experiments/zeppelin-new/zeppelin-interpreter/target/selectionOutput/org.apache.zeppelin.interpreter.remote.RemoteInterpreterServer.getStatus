org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $r10 != null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $r10 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : return "Unknown"
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $r10 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r3 = $r11
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r3 = $r11 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : entermonitor $r11
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : entermonitor $r11 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r12 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : entermonitor $r11 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r9 = $r30 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : exitmonitor r3
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r9 = $r30 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : exitmonitor r3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : throw r9
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : exitmonitor r3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r12 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r13 = virtualinvoke $r12.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r12 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r13 = virtualinvoke $r12.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r4 = (java.util.List) $r13
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r13 = virtualinvoke $r12.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r4 = (java.util.List) $r13 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if r4 != null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r4 = (java.util.List) $r13 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if r4 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r14 = "Unknown"
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if r4 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if r4 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z0 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : exitmonitor r3
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : exitmonitor r3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : goto [?= return "Unknown"]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : exitmonitor r3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : goto [?= return "Unknown"] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : return "Unknown"
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r6 = (org.apache.zeppelin.interpreter.Interpreter) $r15
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r6 = (org.apache.zeppelin.interpreter.Interpreter) $r15 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r16 = virtualinvoke r6.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.scheduler.Scheduler getScheduler()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r6 = (org.apache.zeppelin.interpreter.Interpreter) $r15 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r16 = virtualinvoke r6.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.scheduler.Scheduler getScheduler()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r17 = interfaceinvoke $r16.<org.apache.zeppelin.scheduler.Scheduler: java.util.Collection getJobsRunning()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r16 = virtualinvoke r6.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.scheduler.Scheduler getScheduler()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r17 = interfaceinvoke $r16.<org.apache.zeppelin.scheduler.Scheduler: java.util.Collection getJobsRunning()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r7 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r17 = interfaceinvoke $r16.<org.apache.zeppelin.scheduler.Scheduler: java.util.Collection getJobsRunning()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r7 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r7 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z1 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r18 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r22 = virtualinvoke r6.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.scheduler.Scheduler getScheduler()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r22 = virtualinvoke r6.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.scheduler.Scheduler getScheduler()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r23 = interfaceinvoke $r22.<org.apache.zeppelin.scheduler.Scheduler: java.util.Collection getJobsWaiting()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r22 = virtualinvoke r6.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.scheduler.Scheduler getScheduler()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r23 = interfaceinvoke $r22.<org.apache.zeppelin.scheduler.Scheduler: java.util.Collection getJobsWaiting()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r24 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r23 = interfaceinvoke $r22.<org.apache.zeppelin.scheduler.Scheduler: java.util.Collection getJobsWaiting()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r24 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z3 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r24 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z3 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z3 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z3 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z3 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z3 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z3 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r26 = (org.apache.zeppelin.scheduler.Job) $r25
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r26 = (org.apache.zeppelin.scheduler.Job) $r25 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r27 = virtualinvoke r26.<org.apache.zeppelin.scheduler.Job: java.lang.String getId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r26 = (org.apache.zeppelin.scheduler.Job) $r25 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r27 = virtualinvoke r26.<org.apache.zeppelin.scheduler.Job: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r27)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r27 = virtualinvoke r26.<org.apache.zeppelin.scheduler.Job: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r27) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z4 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r27) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z4 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r28 = virtualinvoke r26.<org.apache.zeppelin.scheduler.Job: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z4 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : goto [?= $z3 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z4 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : goto [?= $z3 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z3 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : goto [?= $z3 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r28 = virtualinvoke r26.<org.apache.zeppelin.scheduler.Job: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r29 = virtualinvoke $r28.<org.apache.zeppelin.scheduler.Job$Status: java.lang.String name()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r28 = virtualinvoke r26.<org.apache.zeppelin.scheduler.Job: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r29 = virtualinvoke $r28.<org.apache.zeppelin.scheduler.Job$Status: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : exitmonitor r3
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r29 = virtualinvoke $r28.<org.apache.zeppelin.scheduler.Job$Status: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : exitmonitor r3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : return $r29
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : exitmonitor r3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r18 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r8 = (org.apache.zeppelin.scheduler.Job) $r18
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r18 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r8 = (org.apache.zeppelin.scheduler.Job) $r18 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r19 = virtualinvoke r8.<org.apache.zeppelin.scheduler.Job: java.lang.String getId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : r8 = (org.apache.zeppelin.scheduler.Job) $r18 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r19 = virtualinvoke r8.<org.apache.zeppelin.scheduler.Job: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r19)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r19 = virtualinvoke r8.<org.apache.zeppelin.scheduler.Job: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r19) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z2 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r19) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z2 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r20 = virtualinvoke r8.<org.apache.zeppelin.scheduler.Job: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z2 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : if $z2 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r20 = virtualinvoke r8.<org.apache.zeppelin.scheduler.Job: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r21 = virtualinvoke $r20.<org.apache.zeppelin.scheduler.Job$Status: java.lang.String name()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r20 = virtualinvoke r8.<org.apache.zeppelin.scheduler.Job: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r21 = virtualinvoke $r20.<org.apache.zeppelin.scheduler.Job$Status: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : exitmonitor r3
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r21 = virtualinvoke $r20.<org.apache.zeppelin.scheduler.Job$Status: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : exitmonitor r3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : return $r21
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : exitmonitor r3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r14 = "Unknown" >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : exitmonitor r3
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r14 = "Unknown" >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : exitmonitor r3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : return $r14
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : exitmonitor r3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getStatus : $r30 := @caughtexception
