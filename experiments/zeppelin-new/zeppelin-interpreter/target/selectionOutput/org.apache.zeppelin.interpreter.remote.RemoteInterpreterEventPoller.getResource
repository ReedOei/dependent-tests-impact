org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r9 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getResourcePoolId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r2 = staticinvoke <org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.InterpreterGroup getByInterpreterGroupId(java.lang.String)>($r9)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r2 = staticinvoke <org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.InterpreterGroup getByInterpreterGroupId(java.lang.String)>($r9) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r2 != null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r2 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r2 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r3 = virtualinvoke r2.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r3 = virtualinvoke r2.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r3 != null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r3 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r4 = virtualinvoke r2.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.resource.ResourcePool getResourcePool()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r3 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r12 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess interpreterProcess>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r12 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess interpreterProcess> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $z1 = virtualinvoke $r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: boolean isRunning()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $z1 = virtualinvoke $r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: boolean isRunning()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if $z1 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r13 = null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r13 = null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : z0 = 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : z0 = 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r18 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : z0 = 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r23 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : z0 = 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r13 = virtualinvoke r3.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r13 = virtualinvoke r3.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r18 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r13 = virtualinvoke r3.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r23 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r13 = virtualinvoke r3.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r14 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getNoteId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r14 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getNoteId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r18 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r14 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getNoteId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r23 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r14 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getNoteId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r15 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getParagraphId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r15 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getParagraphId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r18 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r15 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getParagraphId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r23 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r15 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getParagraphId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r16 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r16 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r18 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r16 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r23 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r16 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r5 = virtualinvoke r13.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: java.nio.ByteBuffer resourceGet(java.lang.String,java.lang.String,java.lang.String)>($r14, $r15, $r16)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r5 = virtualinvoke r13.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: java.nio.ByteBuffer resourceGet(java.lang.String,java.lang.String,java.lang.String)>($r14, $r15, $r16) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r18 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r5 = virtualinvoke r13.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: java.nio.ByteBuffer resourceGet(java.lang.String,java.lang.String,java.lang.String)>($r14, $r15, $r16) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r23 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r5 = virtualinvoke r13.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: java.nio.ByteBuffer resourceGet(java.lang.String,java.lang.String,java.lang.String)>($r14, $r15, $r16) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r6 = staticinvoke <org.apache.zeppelin.resource.Resource: java.lang.Object deserializeObject(java.nio.ByteBuffer)>(r5)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r6 = staticinvoke <org.apache.zeppelin.resource.Resource: java.lang.Object deserializeObject(java.nio.ByteBuffer)>(r5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r18 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r6 = staticinvoke <org.apache.zeppelin.resource.Resource: java.lang.Object deserializeObject(java.nio.ByteBuffer)>(r5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r23 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r6 = staticinvoke <org.apache.zeppelin.resource.Resource: java.lang.Object deserializeObject(java.nio.ByteBuffer)>(r5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r7 = r6
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r7 = r6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r18 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r7 = r6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r23 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r7 = r6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r13 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r13 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r17 = virtualinvoke r2.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r13 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : return r7
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r17 = virtualinvoke r2.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : virtualinvoke $r17.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r13, z0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : virtualinvoke $r17.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r13, z0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : return r7
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r8 = $r23 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r13 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r8 = $r23 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r23 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r13 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r24 = virtualinvoke r2.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r13 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : throw r8
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r24 = virtualinvoke r2.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : virtualinvoke $r24.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r13, z0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : virtualinvoke $r24.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r13, z0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : throw r8
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r19 = $r18 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r20 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r19 = $r18 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r23 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r20 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r21 = virtualinvoke r19.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r20 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r23 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r21 = virtualinvoke r19.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r21, r19)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r21 = virtualinvoke r19.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r23 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r21, r19) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : z0 = 1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r21, r19) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r23 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : z0 = 1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r13 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : z0 = 1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r23 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r13 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r22 = virtualinvoke r2.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r13 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r22 = virtualinvoke r2.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : virtualinvoke $r22.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r13, z0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : virtualinvoke $r22.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r13, z0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : goto [?= return null]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : goto [?= return null] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : r4 = virtualinvoke r2.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.resource.ResourcePool getResourcePool()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r4 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r4 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r10 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : if r4 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : goto [?= return null]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : goto [?= return null] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r10 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r11 = interfaceinvoke r4.<org.apache.zeppelin.resource.ResourcePool: org.apache.zeppelin.resource.Resource get(java.lang.String)>($r10)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : $r11 = interfaceinvoke r4.<org.apache.zeppelin.resource.ResourcePool: org.apache.zeppelin.resource.Resource get(java.lang.String)>($r10) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.getResource : return $r11
