org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r2 = new org.sonatype.aether.util.artifact.DefaultArtifact >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r10 = virtualinvoke r1.<org.apache.zeppelin.dep.Dependency: java.lang.String getGroupArtifactVersion()>()
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r10 = virtualinvoke r1.<org.apache.zeppelin.dep.Dependency: java.lang.String getGroupArtifactVersion()>() >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : specialinvoke $r2.<org.sonatype.aether.util.artifact.DefaultArtifact: void <init>(java.lang.String)>($r10)
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : specialinvoke $r2.<org.sonatype.aether.util.artifact.DefaultArtifact: void <init>(java.lang.String)>($r10) >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : r3 = $r2
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : r3 = $r2 >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r11 = newarray (java.lang.String)[1]
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r11 = newarray (java.lang.String)[1] >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r11[0] = "compile"
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r11[0] = "compile" >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : r4 = staticinvoke <org.sonatype.aether.util.filter.DependencyFilterUtils: org.sonatype.aether.graph.DependencyFilter classpathFilter(java.lang.String[])>($r11)
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : r4 = staticinvoke <org.sonatype.aether.util.filter.DependencyFilterUtils: org.sonatype.aether.graph.DependencyFilter classpathFilter(java.lang.String[])>($r11) >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r12 = new org.sonatype.aether.util.filter.PatternExclusionsDependencyFilter
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r12 = new org.sonatype.aether.util.filter.PatternExclusionsDependencyFilter >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r13 = virtualinvoke r1.<org.apache.zeppelin.dep.Dependency: java.util.List getExclusions()>()
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r13 = virtualinvoke r1.<org.apache.zeppelin.dep.Dependency: java.util.List getExclusions()>() >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : specialinvoke $r12.<org.sonatype.aether.util.filter.PatternExclusionsDependencyFilter: void <init>(java.util.Collection)>($r13)
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : specialinvoke $r12.<org.sonatype.aether.util.filter.PatternExclusionsDependencyFilter: void <init>(java.util.Collection)>($r13) >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : r5 = $r12
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : r5 = $r12 >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r14 = new org.sonatype.aether.collection.CollectRequest
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r14 = new org.sonatype.aether.collection.CollectRequest >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : specialinvoke $r14.<org.sonatype.aether.collection.CollectRequest: void <init>()>()
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : specialinvoke $r14.<org.sonatype.aether.collection.CollectRequest: void <init>()>() >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : r6 = $r14
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : r6 = $r14 >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r15 = new org.sonatype.aether.graph.Dependency
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r15 = new org.sonatype.aether.graph.Dependency >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : specialinvoke $r15.<org.sonatype.aether.graph.Dependency: void <init>(org.sonatype.aether.artifact.Artifact,java.lang.String)>(r3, "compile")
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : specialinvoke $r15.<org.sonatype.aether.graph.Dependency: void <init>(org.sonatype.aether.artifact.Artifact,java.lang.String)>(r3, "compile") >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : virtualinvoke r6.<org.sonatype.aether.collection.CollectRequest: org.sonatype.aether.collection.CollectRequest setRoot(org.sonatype.aether.graph.Dependency)>($r15)
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : virtualinvoke r6.<org.sonatype.aether.collection.CollectRequest: org.sonatype.aether.collection.CollectRequest setRoot(org.sonatype.aether.graph.Dependency)>($r15) >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r17 = r0.<org.apache.zeppelin.dep.DependencyContext: org.sonatype.aether.repository.RemoteRepository mavenCentral>
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r17 = r0.<org.apache.zeppelin.dep.DependencyContext: org.sonatype.aether.repository.RemoteRepository mavenCentral> >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : virtualinvoke r6.<org.sonatype.aether.collection.CollectRequest: org.sonatype.aether.collection.CollectRequest addRepository(org.sonatype.aether.repository.RemoteRepository)>($r17)
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : virtualinvoke r6.<org.sonatype.aether.collection.CollectRequest: org.sonatype.aether.collection.CollectRequest addRepository(org.sonatype.aether.repository.RemoteRepository)>($r17) >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r19 = r0.<org.apache.zeppelin.dep.DependencyContext: org.sonatype.aether.repository.RemoteRepository mavenLocal>
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r19 = r0.<org.apache.zeppelin.dep.DependencyContext: org.sonatype.aether.repository.RemoteRepository mavenLocal> >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : virtualinvoke r6.<org.sonatype.aether.collection.CollectRequest: org.sonatype.aether.collection.CollectRequest addRepository(org.sonatype.aether.repository.RemoteRepository)>($r19)
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : virtualinvoke r6.<org.sonatype.aether.collection.CollectRequest: org.sonatype.aether.collection.CollectRequest addRepository(org.sonatype.aether.repository.RemoteRepository)>($r19) >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r21 = r0.<org.apache.zeppelin.dep.DependencyContext: java.util.List repositories>
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r21 = r0.<org.apache.zeppelin.dep.DependencyContext: java.util.List repositories> >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : r7 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : r7 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : if $z0 == 0
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : if $z0 == 0 >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r22 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : if $z0 == 0 >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r28 = new org.sonatype.aether.resolution.DependencyRequest
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r28 = new org.sonatype.aether.resolution.DependencyRequest >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r29 = newarray (org.sonatype.aether.graph.DependencyFilter)[2]
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r29 = newarray (org.sonatype.aether.graph.DependencyFilter)[2] >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r29[0] = r5
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r29[0] = r5 >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r29[1] = r4
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r29[1] = r4 >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r30 = staticinvoke <org.sonatype.aether.util.filter.DependencyFilterUtils: org.sonatype.aether.graph.DependencyFilter andFilter(org.sonatype.aether.graph.DependencyFilter[])>($r29)
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r30 = staticinvoke <org.sonatype.aether.util.filter.DependencyFilterUtils: org.sonatype.aether.graph.DependencyFilter andFilter(org.sonatype.aether.graph.DependencyFilter[])>($r29) >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : specialinvoke $r28.<org.sonatype.aether.resolution.DependencyRequest: void <init>(org.sonatype.aether.collection.CollectRequest,org.sonatype.aether.graph.DependencyFilter)>(r6, $r30)
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : specialinvoke $r28.<org.sonatype.aether.resolution.DependencyRequest: void <init>(org.sonatype.aether.collection.CollectRequest,org.sonatype.aether.graph.DependencyFilter)>(r6, $r30) >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : r31 = $r28
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : r31 = $r28 >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r32 = r0.<org.apache.zeppelin.dep.DependencyContext: org.sonatype.aether.RepositorySystem system>
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r32 = r0.<org.apache.zeppelin.dep.DependencyContext: org.sonatype.aether.RepositorySystem system> >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r33 = r0.<org.apache.zeppelin.dep.DependencyContext: org.sonatype.aether.RepositorySystemSession session>
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r33 = r0.<org.apache.zeppelin.dep.DependencyContext: org.sonatype.aether.RepositorySystemSession session> >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r34 = interfaceinvoke $r32.<org.sonatype.aether.RepositorySystem: org.sonatype.aether.resolution.DependencyResult resolveDependencies(org.sonatype.aether.RepositorySystemSession,org.sonatype.aether.resolution.DependencyRequest)>($r33, r31)
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r34 = interfaceinvoke $r32.<org.sonatype.aether.RepositorySystem: org.sonatype.aether.resolution.DependencyResult resolveDependencies(org.sonatype.aether.RepositorySystemSession,org.sonatype.aether.resolution.DependencyRequest)>($r33, r31) >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r35 = virtualinvoke $r34.<org.sonatype.aether.resolution.DependencyResult: java.util.List getArtifactResults()>()
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r35 = virtualinvoke $r34.<org.sonatype.aether.resolution.DependencyResult: java.util.List getArtifactResults()>() >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : return $r35
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r22 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : r8 = (org.apache.zeppelin.dep.Repository) $r22
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : r8 = (org.apache.zeppelin.dep.Repository) $r22 >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r23 = new org.sonatype.aether.repository.RemoteRepository
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r23 = new org.sonatype.aether.repository.RemoteRepository >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r24 = virtualinvoke r8.<org.apache.zeppelin.dep.Repository: java.lang.String getId()>()
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r24 = virtualinvoke r8.<org.apache.zeppelin.dep.Repository: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r25 = virtualinvoke r8.<org.apache.zeppelin.dep.Repository: java.lang.String getUrl()>()
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $r25 = virtualinvoke r8.<org.apache.zeppelin.dep.Repository: java.lang.String getUrl()>() >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : specialinvoke $r23.<org.sonatype.aether.repository.RemoteRepository: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r24, "default", $r25)
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : specialinvoke $r23.<org.sonatype.aether.repository.RemoteRepository: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r24, "default", $r25) >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : r9 = $r23
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : r9 = $r23 >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $z1 = virtualinvoke r8.<org.apache.zeppelin.dep.Repository: boolean isSnapshot()>()
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $z1 = virtualinvoke r8.<org.apache.zeppelin.dep.Repository: boolean isSnapshot()>() >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : virtualinvoke r9.<org.sonatype.aether.repository.RemoteRepository: org.sonatype.aether.repository.RemoteRepository setPolicy(boolean,org.sonatype.aether.repository.RepositoryPolicy)>($z1, null)
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : virtualinvoke r9.<org.sonatype.aether.repository.RemoteRepository: org.sonatype.aether.repository.RemoteRepository setPolicy(boolean,org.sonatype.aether.repository.RepositoryPolicy)>($z1, null) >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : virtualinvoke r6.<org.sonatype.aether.collection.CollectRequest: org.sonatype.aether.collection.CollectRequest addRepository(org.sonatype.aether.repository.RemoteRepository)>(r9)
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : virtualinvoke r6.<org.sonatype.aether.collection.CollectRequest: org.sonatype.aether.collection.CollectRequest addRepository(org.sonatype.aether.repository.RemoteRepository)>(r9) >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.dep.DependencyContext.fetchArtifactWithDep : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
