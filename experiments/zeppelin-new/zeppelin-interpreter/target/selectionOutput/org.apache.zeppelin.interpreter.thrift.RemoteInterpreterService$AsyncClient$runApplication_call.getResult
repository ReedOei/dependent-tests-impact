org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r4 = virtualinvoke r0.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call: org.apache.thrift.async.TAsyncMethodCall$State getState()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r1 = <org.apache.thrift.async.TAsyncMethodCall$State: org.apache.thrift.async.TAsyncMethodCall$State RESPONSE_READ>
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r1 = <org.apache.thrift.async.TAsyncMethodCall$State: org.apache.thrift.async.TAsyncMethodCall$State RESPONSE_READ> >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : if $r4 == $r1
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : if $r4 == $r1 >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r5 = new java.lang.IllegalStateException
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : if $r4 == $r1 >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r6 = new org.apache.thrift.transport.TMemoryInputTransport
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r6 = new org.apache.thrift.transport.TMemoryInputTransport >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r7 = virtualinvoke r0.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call: java.nio.ByteBuffer getFrameBuffer()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r7 = virtualinvoke r0.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call: java.nio.ByteBuffer getFrameBuffer()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r8 = virtualinvoke $r7.<java.nio.ByteBuffer: byte[] array()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r8 = virtualinvoke $r7.<java.nio.ByteBuffer: byte[] array()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : specialinvoke $r6.<org.apache.thrift.transport.TMemoryInputTransport: void <init>(byte[])>($r8)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : specialinvoke $r6.<org.apache.thrift.transport.TMemoryInputTransport: void <init>(byte[])>($r8) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : r2 = $r6
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : r2 = $r6 >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r9 = r0.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call: org.apache.thrift.async.TAsyncClient client>
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r9 = r0.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call: org.apache.thrift.async.TAsyncClient client> >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r10 = virtualinvoke $r9.<org.apache.thrift.async.TAsyncClient: org.apache.thrift.protocol.TProtocolFactory getProtocolFactory()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r10 = virtualinvoke $r9.<org.apache.thrift.async.TAsyncClient: org.apache.thrift.protocol.TProtocolFactory getProtocolFactory()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : r3 = interfaceinvoke $r10.<org.apache.thrift.protocol.TProtocolFactory: org.apache.thrift.protocol.TProtocol getProtocol(org.apache.thrift.transport.TTransport)>(r2)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : r3 = interfaceinvoke $r10.<org.apache.thrift.protocol.TProtocolFactory: org.apache.thrift.protocol.TProtocol getProtocol(org.apache.thrift.transport.TTransport)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r11 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r11 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : specialinvoke $r11.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: void <init>(org.apache.thrift.protocol.TProtocol)>(r3)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : specialinvoke $r11.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: void <init>(org.apache.thrift.protocol.TProtocol)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r12 = virtualinvoke $r11.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult recv_runApplication()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r12 = virtualinvoke $r11.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: org.apache.zeppelin.interpreter.thrift.RemoteApplicationResult recv_runApplication()>() >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : return $r12
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : $r5 = new java.lang.IllegalStateException >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Method call not finished!")
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Method call not finished!") >>>>>>>> org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$AsyncClient$runApplication_call.getResult : throw $r5
