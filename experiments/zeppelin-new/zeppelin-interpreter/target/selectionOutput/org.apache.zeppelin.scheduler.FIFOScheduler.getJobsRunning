org.apache.zeppelin.scheduler.FIFOScheduler.getJobsRunning : $r1 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.scheduler.FIFOScheduler.getJobsRunning : specialinvoke $r1.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.scheduler.FIFOScheduler.getJobsRunning : specialinvoke $r1.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.scheduler.FIFOScheduler.getJobsRunning : r2 = $r1
org.apache.zeppelin.scheduler.FIFOScheduler.getJobsRunning : r2 = $r1 >>>>>>>> org.apache.zeppelin.scheduler.FIFOScheduler.getJobsRunning : r3 = r0.<org.apache.zeppelin.scheduler.FIFOScheduler: org.apache.zeppelin.scheduler.Job runningJob>
org.apache.zeppelin.scheduler.FIFOScheduler.getJobsRunning : r3 = r0.<org.apache.zeppelin.scheduler.FIFOScheduler: org.apache.zeppelin.scheduler.Job runningJob> >>>>>>>> org.apache.zeppelin.scheduler.FIFOScheduler.getJobsRunning : if r3 == null
org.apache.zeppelin.scheduler.FIFOScheduler.getJobsRunning : if r3 == null >>>>>>>> org.apache.zeppelin.scheduler.FIFOScheduler.getJobsRunning : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3)
org.apache.zeppelin.scheduler.FIFOScheduler.getJobsRunning : if r3 == null >>>>>>>> org.apache.zeppelin.scheduler.FIFOScheduler.getJobsRunning : return r2
org.apache.zeppelin.scheduler.FIFOScheduler.getJobsRunning : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.zeppelin.scheduler.FIFOScheduler.getJobsRunning : return r2
