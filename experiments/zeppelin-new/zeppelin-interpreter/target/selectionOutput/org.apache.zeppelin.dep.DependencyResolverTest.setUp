org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r0 = new java.io.File >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r1 = new java.lang.StringBuilder
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.dep.DependencyResolverTest.setUp : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir")
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir") >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/ZeppelinLTest_")
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/ZeppelinLTest_") >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r6)
org.apache.zeppelin.dep.DependencyResolverTest.setUp : specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r6) >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : <org.apache.zeppelin.dep.DependencyResolverTest: java.io.File tmpDir> = $r0
org.apache.zeppelin.dep.DependencyResolverTest.setUp : <org.apache.zeppelin.dep.DependencyResolverTest: java.io.File tmpDir> = $r0 >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r7 = new java.lang.StringBuilder
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.dep.DependencyResolverTest.setUp : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r8 = <org.apache.zeppelin.dep.DependencyResolverTest: java.io.File tmpDir>
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r8 = <org.apache.zeppelin.dep.DependencyResolverTest: java.io.File tmpDir> >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/test-repo")
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/test-repo") >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : <org.apache.zeppelin.dep.DependencyResolverTest: java.lang.String testPath> = $r12
org.apache.zeppelin.dep.DependencyResolverTest.setUp : <org.apache.zeppelin.dep.DependencyResolverTest: java.lang.String testPath> = $r12 >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r13 = new java.io.File
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r13 = new java.io.File >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r14 = <org.apache.zeppelin.dep.DependencyResolverTest: java.io.File tmpDir>
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r14 = <org.apache.zeppelin.dep.DependencyResolverTest: java.io.File tmpDir> >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : specialinvoke $r13.<java.io.File: void <init>(java.io.File,java.lang.String)>($r14, "test-copy-repo")
org.apache.zeppelin.dep.DependencyResolverTest.setUp : specialinvoke $r13.<java.io.File: void <init>(java.io.File,java.lang.String)>($r14, "test-copy-repo") >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : <org.apache.zeppelin.dep.DependencyResolverTest: java.io.File testCopyPath> = $r13
org.apache.zeppelin.dep.DependencyResolverTest.setUp : <org.apache.zeppelin.dep.DependencyResolverTest: java.io.File testCopyPath> = $r13 >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r15 = new org.apache.zeppelin.dep.DependencyResolver
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r15 = new org.apache.zeppelin.dep.DependencyResolver >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r16 = <org.apache.zeppelin.dep.DependencyResolverTest: java.lang.String testPath>
org.apache.zeppelin.dep.DependencyResolverTest.setUp : $r16 = <org.apache.zeppelin.dep.DependencyResolverTest: java.lang.String testPath> >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : specialinvoke $r15.<org.apache.zeppelin.dep.DependencyResolver: void <init>(java.lang.String)>($r16)
org.apache.zeppelin.dep.DependencyResolverTest.setUp : specialinvoke $r15.<org.apache.zeppelin.dep.DependencyResolver: void <init>(java.lang.String)>($r16) >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : <org.apache.zeppelin.dep.DependencyResolverTest: org.apache.zeppelin.dep.DependencyResolver resolver> = $r15
org.apache.zeppelin.dep.DependencyResolverTest.setUp : <org.apache.zeppelin.dep.DependencyResolverTest: org.apache.zeppelin.dep.DependencyResolver resolver> = $r15 >>>>>>>> org.apache.zeppelin.dep.DependencyResolverTest.setUp : return
