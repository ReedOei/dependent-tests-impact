org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : n0 = null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : r3 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: java.lang.String generateOwnerKey()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : r3 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: java.lang.String generateOwnerKey()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r7 = new org.apache.zeppelin.interpreter.thrift.ZeppelinServerResourceParagraphRunner
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r7 = new org.apache.zeppelin.interpreter.thrift.ZeppelinServerResourceParagraphRunner >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : specialinvoke $r7.<org.apache.zeppelin.interpreter.thrift.ZeppelinServerResourceParagraphRunner: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : specialinvoke $r7.<org.apache.zeppelin.interpreter.thrift.ZeppelinServerResourceParagraphRunner: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : r4 = $r7
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : r4 = $r7 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : virtualinvoke r4.<org.apache.zeppelin.interpreter.thrift.ZeppelinServerResourceParagraphRunner: org.apache.zeppelin.interpreter.thrift.ZeppelinServerResourceParagraphRunner setNoteId(java.lang.String)>(r1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : virtualinvoke r4.<org.apache.zeppelin.interpreter.thrift.ZeppelinServerResourceParagraphRunner: org.apache.zeppelin.interpreter.thrift.ZeppelinServerResourceParagraphRunner setNoteId(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : virtualinvoke r4.<org.apache.zeppelin.interpreter.thrift.ZeppelinServerResourceParagraphRunner: org.apache.zeppelin.interpreter.thrift.ZeppelinServerResourceParagraphRunner setParagraphId(java.lang.String)>(r2)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : virtualinvoke r4.<org.apache.zeppelin.interpreter.thrift.ZeppelinServerResourceParagraphRunner: org.apache.zeppelin.interpreter.thrift.ZeppelinServerResourceParagraphRunner setParagraphId(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer server>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer server> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r11 = $r10.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient eventClient>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r11 = $r10.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient eventClient> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : virtualinvoke $r11.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: void getZeppelinServerNoteRunner(java.lang.String,org.apache.zeppelin.interpreter.thrift.ZeppelinServerResourceParagraphRunner)>(r3, r4)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : virtualinvoke $r11.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: void getZeppelinServerNoteRunner(java.lang.String,org.apache.zeppelin.interpreter.thrift.ZeppelinServerResourceParagraphRunner)>(r3, r4) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: boolean waitForEvent(java.lang.String)>(r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : virtualinvoke $r11.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: void getZeppelinServerNoteRunner(java.lang.String,org.apache.zeppelin.interpreter.thrift.ZeppelinServerResourceParagraphRunner)>(r3, r4) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r12 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : r5 = $r12 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r13 = new java.util.LinkedList
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r13 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : specialinvoke $r13.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : specialinvoke $r13.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : return $r13
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: boolean waitForEvent(java.lang.String)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : goto [?= $r14 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: java.util.Map remoteWorksResponsePool>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: boolean waitForEvent(java.lang.String)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r12 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : goto [?= $r14 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: java.util.Map remoteWorksResponsePool>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r14 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: java.util.Map remoteWorksResponsePool>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r14 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: java.util.Map remoteWorksResponsePool> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : r15 = $r14
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : r15 = $r14 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : entermonitor $r14
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : entermonitor $r14 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: java.util.Map remoteWorksResponsePool>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : entermonitor $r14 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r21 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : r6 = $r21 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : exitmonitor r15
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : r6 = $r21 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r21 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : exitmonitor r15 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : throw r6
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : exitmonitor r15 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r21 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: java.util.Map remoteWorksResponsePool> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: java.util.Map remoteWorksResponsePool> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r21 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : r18 = (java.util.List) $r17
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r21 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : r18 = (java.util.List) $r17 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r19 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: java.util.Map remoteWorksResponsePool>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : r18 = (java.util.List) $r17 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r21 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r19 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: java.util.Map remoteWorksResponsePool> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : interfaceinvoke $r19.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r19 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController: java.util.Map remoteWorksResponsePool> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r21 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : interfaceinvoke $r19.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : exitmonitor r15
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : interfaceinvoke $r19.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r21 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : exitmonitor r15 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : goto [?= return r18]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : exitmonitor r15 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : $r21 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : goto [?= return r18] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$ZeppelinRemoteWorksController.getRemoteContextRunner : return r18
