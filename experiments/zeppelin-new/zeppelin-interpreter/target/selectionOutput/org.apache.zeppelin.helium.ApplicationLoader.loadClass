org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r6 = r0.<org.apache.zeppelin.helium.ApplicationLoader: java.util.Map cached> >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : if $z0 == 0
org.apache.zeppelin.helium.ApplicationLoader.loadClass : if $z0 == 0 >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r7 = r0.<org.apache.zeppelin.helium.ApplicationLoader: java.util.Map cached>
org.apache.zeppelin.helium.ApplicationLoader.loadClass : if $z0 == 0 >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r10 = new java.util.LinkedList
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r10 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : specialinvoke $r10.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : specialinvoke $r10.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : r2 = $r10
org.apache.zeppelin.helium.ApplicationLoader.loadClass : r2 = $r10 >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r11 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getArtifact()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r11 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getArtifact()>() >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : if $r11 == null
org.apache.zeppelin.helium.ApplicationLoader.loadClass : if $r11 == null >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r12 = r0.<org.apache.zeppelin.helium.ApplicationLoader: org.apache.zeppelin.dep.DependencyResolver depResolver>
org.apache.zeppelin.helium.ApplicationLoader.loadClass : if $r11 == null >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r17 = new java.net.URLClassLoader
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r17 = new java.net.URLClassLoader >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r18 = newarray (java.net.URL)[0]
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r18 = newarray (java.net.URL)[0] >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r19 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r18)
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r19 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r18) >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r20 = (java.net.URL[]) $r19
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r20 = (java.net.URL[]) $r19 >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r21 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r21 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r22 = virtualinvoke $r21.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r22 = virtualinvoke $r21.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>() >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : specialinvoke $r17.<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>($r20, $r22)
org.apache.zeppelin.helium.ApplicationLoader.loadClass : specialinvoke $r17.<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>($r20, $r22) >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : r23 = $r17
org.apache.zeppelin.helium.ApplicationLoader.loadClass : r23 = $r17 >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r24 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getClassName()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r24 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getClassName()>() >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : r25 = virtualinvoke r23.<java.net.URLClassLoader: java.lang.Class loadClass(java.lang.String)>($r24)
org.apache.zeppelin.helium.ApplicationLoader.loadClass : r25 = virtualinvoke r23.<java.net.URLClassLoader: java.lang.Class loadClass(java.lang.String)>($r24) >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r26 = r0.<org.apache.zeppelin.helium.ApplicationLoader: java.util.Map cached>
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r26 = r0.<org.apache.zeppelin.helium.ApplicationLoader: java.util.Map cached> >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r25)
org.apache.zeppelin.helium.ApplicationLoader.loadClass : interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r25) >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : return r25
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r12 = r0.<org.apache.zeppelin.helium.ApplicationLoader: org.apache.zeppelin.dep.DependencyResolver depResolver> >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r13 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getArtifact()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r13 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getArtifact()>() >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : r3 = virtualinvoke $r12.<org.apache.zeppelin.dep.DependencyResolver: java.util.List load(java.lang.String)>($r13)
org.apache.zeppelin.helium.ApplicationLoader.loadClass : r3 = virtualinvoke $r12.<org.apache.zeppelin.dep.DependencyResolver: java.util.List load(java.lang.String)>($r13) >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : if r3 == null
org.apache.zeppelin.helium.ApplicationLoader.loadClass : if r3 == null >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : if r3 == null >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r17 = new java.net.URLClassLoader
org.apache.zeppelin.helium.ApplicationLoader.loadClass : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : if $z1 == 0
org.apache.zeppelin.helium.ApplicationLoader.loadClass : if $z1 == 0 >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : if $z1 == 0 >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r17 = new java.net.URLClassLoader
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : r5 = (java.io.File) $r14
org.apache.zeppelin.helium.ApplicationLoader.loadClass : r5 = (java.io.File) $r14 >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r15 = virtualinvoke r5.<java.io.File: java.net.URI toURI()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r15 = virtualinvoke r5.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r16 = virtualinvoke $r15.<java.net.URI: java.net.URL toURL()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r16 = virtualinvoke $r15.<java.net.URI: java.net.URL toURL()>() >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r16)
org.apache.zeppelin.helium.ApplicationLoader.loadClass : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r16) >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.helium.ApplicationLoader.loadClass : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r7 = r0.<org.apache.zeppelin.helium.ApplicationLoader: java.util.Map cached> >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r9 = (java.lang.Class) $r8
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r9 = (java.lang.Class) $r8 >>>>>>>> org.apache.zeppelin.helium.ApplicationLoader.loadClass : return $r9
