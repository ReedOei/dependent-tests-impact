org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r5 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : r1 = $r5
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : r1 = $r5 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : entermonitor $r5
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : entermonitor $r5 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : entermonitor $r5 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : r4 = $r17 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : exitmonitor r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : r4 = $r17 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : exitmonitor r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : throw r4
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : exitmonitor r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : if $z0 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r8 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : r2 = $r8 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : r2 = $r8 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $z1 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $z1 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : if $z1 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $z1 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r10 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object remove(int)>(0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object remove(int)>(0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : r13 = (org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent) $r12
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object remove(int)>(0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : r13 = (org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent) $r12 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r14 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : r13 = (org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent) $r12 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r14 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r15 = virtualinvoke r13.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType getType()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r14 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r15 = virtualinvoke r13.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType getType()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Send event {}", $r15)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r15 = virtualinvoke r13.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType getType()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Send event {}", $r15) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : exitmonitor r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Send event {}", $r15) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : exitmonitor r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : return r13
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : exitmonitor r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r10 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r3 = <org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType NO_OP>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r10 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r3 = <org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType NO_OP> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : specialinvoke $r10.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent: void <init>(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType,java.lang.String)>($r3, "")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r3 = <org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType NO_OP> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : specialinvoke $r10.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent: void <init>(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType,java.lang.String)>($r3, "") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : exitmonitor r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : specialinvoke $r10.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent: void <init>(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType,java.lang.String)>($r3, "") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : exitmonitor r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : return $r10
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : exitmonitor r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r8 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : virtualinvoke $r7.<java.lang.Object: void wait(long)>(1000L)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : virtualinvoke $r7.<java.lang.Object: void wait(long)>(1000L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : virtualinvoke $r7.<java.lang.Object: void wait(long)>(1000L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r8 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : virtualinvoke $r7.<java.lang.Object: void wait(long)>(1000L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : goto [?= $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : goto [?= $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : goto [?= $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.pollEvent : $r17 := @caughtexception
