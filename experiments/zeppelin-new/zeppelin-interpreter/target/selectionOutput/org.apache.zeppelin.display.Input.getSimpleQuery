org.apache.zeppelin.display.Input.getSimpleQuery : r2 = r1 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $r15 = <org.apache.zeppelin.display.Input: java.util.regex.Pattern VAR_PTN>
org.apache.zeppelin.display.Input.getSimpleQuery : $r15 = <org.apache.zeppelin.display.Input: java.util.regex.Pattern VAR_PTN> >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r3 = virtualinvoke $r15.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2)
org.apache.zeppelin.display.Input.getSimpleQuery : r3 = virtualinvoke $r15.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2) >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>()
org.apache.zeppelin.display.Input.getSimpleQuery : $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>() >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : if $z0 == 0
org.apache.zeppelin.display.Input.getSimpleQuery : if $z0 == 0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r4 = staticinvoke <org.apache.zeppelin.display.Input: org.apache.zeppelin.display.Input getInputForm(java.util.regex.Matcher)>(r3)
org.apache.zeppelin.display.Input.getSimpleQuery : if $z0 == 0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : return r2
org.apache.zeppelin.display.Input.getSimpleQuery : r4 = staticinvoke <org.apache.zeppelin.display.Input: org.apache.zeppelin.display.Input getInputForm(java.util.regex.Matcher)>(r3) >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $r16 = r4.<org.apache.zeppelin.display.Input: java.lang.String name>
org.apache.zeppelin.display.Input.getSimpleQuery : $r16 = r4.<org.apache.zeppelin.display.Input: java.lang.String name> >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $z1 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r16)
org.apache.zeppelin.display.Input.getSimpleQuery : $z1 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r16) >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : if $z1 == 0
org.apache.zeppelin.display.Input.getSimpleQuery : if $z1 == 0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $r17 = r4.<org.apache.zeppelin.display.Input: java.lang.String name>
org.apache.zeppelin.display.Input.getSimpleQuery : if $z1 == 0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r5 = virtualinvoke r4.<org.apache.zeppelin.display.Input: java.lang.Object getDefaultValue()>()
org.apache.zeppelin.display.Input.getSimpleQuery : r5 = virtualinvoke r4.<org.apache.zeppelin.display.Input: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $z2 = r5 instanceof java.lang.Object[]
org.apache.zeppelin.display.Input.getSimpleQuery : $z2 = r5 instanceof java.lang.Object[] >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : if $z2 != 0
org.apache.zeppelin.display.Input.getSimpleQuery : if $z2 != 0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $z3 = r5 instanceof java.util.Collection
org.apache.zeppelin.display.Input.getSimpleQuery : if $z2 != 0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r6 = (org.apache.zeppelin.display.ui.OptionInput) r4
org.apache.zeppelin.display.Input.getSimpleQuery : r6 = (org.apache.zeppelin.display.ui.OptionInput) r4 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r7 = r4.<org.apache.zeppelin.display.Input: java.lang.String argument>
org.apache.zeppelin.display.Input.getSimpleQuery : r7 = r4.<org.apache.zeppelin.display.Input: java.lang.String argument> >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : if r7 != null
org.apache.zeppelin.display.Input.getSimpleQuery : if r7 != null >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r7 = ","
org.apache.zeppelin.display.Input.getSimpleQuery : if r7 != null >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $z4 = r5 instanceof java.util.Collection
org.apache.zeppelin.display.Input.getSimpleQuery : $z4 = r5 instanceof java.util.Collection >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : if $z4 == 0
org.apache.zeppelin.display.Input.getSimpleQuery : if $z4 == 0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $r18 = (java.util.Collection) r5
org.apache.zeppelin.display.Input.getSimpleQuery : if $z4 == 0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $r19 = (java.lang.Object[]) r5
org.apache.zeppelin.display.Input.getSimpleQuery : $r19 = (java.lang.Object[]) r5 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $r20 = (java.lang.Object[]) $r19
org.apache.zeppelin.display.Input.getSimpleQuery : $r20 = (java.lang.Object[]) $r19 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $r18 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r20)
org.apache.zeppelin.display.Input.getSimpleQuery : $r18 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r20) >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r8 = $r18
org.apache.zeppelin.display.Input.getSimpleQuery : r8 = $r18 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $r21 = new java.util.LinkedList
org.apache.zeppelin.display.Input.getSimpleQuery : $r21 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : specialinvoke $r21.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.display.Input.getSimpleQuery : specialinvoke $r21.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r9 = $r21
org.apache.zeppelin.display.Input.getSimpleQuery : r9 = $r21 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r10 = interfaceinvoke r8.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.zeppelin.display.Input.getSimpleQuery : r10 = interfaceinvoke r8.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $z5 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.display.Input.getSimpleQuery : $z5 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : if $z5 == 0
org.apache.zeppelin.display.Input.getSimpleQuery : if $z5 == 0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.display.Input.getSimpleQuery : if $z5 == 0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $r23 = r4.<org.apache.zeppelin.display.Input: java.lang.String name>
org.apache.zeppelin.display.Input.getSimpleQuery : $r23 = r4.<org.apache.zeppelin.display.Input: java.lang.String name> >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, r9)
org.apache.zeppelin.display.Input.getSimpleQuery : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, r9) >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r14 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r9, r7)
org.apache.zeppelin.display.Input.getSimpleQuery : r14 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r9, r7) >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : goto [?= r2 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>(r14)]
org.apache.zeppelin.display.Input.getSimpleQuery : goto [?= r2 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>(r14)] >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r2 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>(r14)
org.apache.zeppelin.display.Input.getSimpleQuery : r2 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>(r14) >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $r25 = <org.apache.zeppelin.display.Input: java.util.regex.Pattern VAR_PTN>
org.apache.zeppelin.display.Input.getSimpleQuery : $r25 = <org.apache.zeppelin.display.Input: java.util.regex.Pattern VAR_PTN> >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r3 = virtualinvoke $r25.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2)
org.apache.zeppelin.display.Input.getSimpleQuery : r3 = virtualinvoke $r25.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2) >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : goto [?= $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>()]
org.apache.zeppelin.display.Input.getSimpleQuery : goto [?= $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>()] >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>()
org.apache.zeppelin.display.Input.getSimpleQuery : r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r12 = virtualinvoke r6.<org.apache.zeppelin.display.ui.OptionInput: org.apache.zeppelin.display.ui.OptionInput$ParamOption[] getOptions()>()
org.apache.zeppelin.display.Input.getSimpleQuery : r12 = virtualinvoke r6.<org.apache.zeppelin.display.ui.OptionInput: org.apache.zeppelin.display.ui.OptionInput$ParamOption[] getOptions()>() >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : i0 = lengthof r12
org.apache.zeppelin.display.Input.getSimpleQuery : i0 = lengthof r12 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : i1 = 0
org.apache.zeppelin.display.Input.getSimpleQuery : i1 = 0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : if i1 >= i0
org.apache.zeppelin.display.Input.getSimpleQuery : if i1 >= i0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r13 = r12[i1]
org.apache.zeppelin.display.Input.getSimpleQuery : if i1 >= i0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : goto [?= $z5 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.display.Input.getSimpleQuery : goto [?= $z5 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $z5 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.display.Input.getSimpleQuery : r13 = r12[i1] >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $r22 = virtualinvoke r13.<org.apache.zeppelin.display.ui.OptionInput$ParamOption: java.lang.Object getValue()>()
org.apache.zeppelin.display.Input.getSimpleQuery : $r22 = virtualinvoke r13.<org.apache.zeppelin.display.ui.OptionInput$ParamOption: java.lang.Object getValue()>() >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $z6 = virtualinvoke $r22.<java.lang.Object: boolean equals(java.lang.Object)>(r11)
org.apache.zeppelin.display.Input.getSimpleQuery : $z6 = virtualinvoke $r22.<java.lang.Object: boolean equals(java.lang.Object)>(r11) >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : if $z6 == 0
org.apache.zeppelin.display.Input.getSimpleQuery : if $z6 == 0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r11)
org.apache.zeppelin.display.Input.getSimpleQuery : if $z6 == 0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : i1 = i1 + 1
org.apache.zeppelin.display.Input.getSimpleQuery : i1 = i1 + 1 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : goto [?= (branch)]
org.apache.zeppelin.display.Input.getSimpleQuery : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : if i1 >= i0
org.apache.zeppelin.display.Input.getSimpleQuery : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r11) >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : goto [?= (branch)]
org.apache.zeppelin.display.Input.getSimpleQuery : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : goto [?= $z5 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.display.Input.getSimpleQuery : $r18 = (java.util.Collection) r5 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : goto [?= r8 = $r18]
org.apache.zeppelin.display.Input.getSimpleQuery : goto [?= r8 = $r18] >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r8 = $r18
org.apache.zeppelin.display.Input.getSimpleQuery : r7 = "," >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $z4 = r5 instanceof java.util.Collection
org.apache.zeppelin.display.Input.getSimpleQuery : $z3 = r5 instanceof java.util.Collection >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : if $z3 == 0
org.apache.zeppelin.display.Input.getSimpleQuery : if $z3 == 0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r6 = (org.apache.zeppelin.display.ui.OptionInput) r4
org.apache.zeppelin.display.Input.getSimpleQuery : if $z3 == 0 >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r14 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>()
org.apache.zeppelin.display.Input.getSimpleQuery : r14 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r2 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>(r14)
org.apache.zeppelin.display.Input.getSimpleQuery : $r17 = r4.<org.apache.zeppelin.display.Input: java.lang.String name> >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : r5 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17)
org.apache.zeppelin.display.Input.getSimpleQuery : r5 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17) >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : goto [?= $z2 = r5 instanceof java.lang.Object[]]
org.apache.zeppelin.display.Input.getSimpleQuery : goto [?= $z2 = r5 instanceof java.lang.Object[]] >>>>>>>> org.apache.zeppelin.display.Input.getSimpleQuery : $z2 = r5 instanceof java.lang.Object[]
