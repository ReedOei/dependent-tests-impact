org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r1 = <org.apache.zeppelin.interpreter.InterpreterGroup: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r2 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Close interpreter group ")
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Close interpreter group ") >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r7 = virtualinvoke r0.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String getId()>()
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r7 = virtualinvoke r0.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r9)
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r9) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r10 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess>
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r10 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : if $r10 == null
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : if $r10 == null >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r11 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess>
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : if $r10 == null >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r13 = <org.apache.zeppelin.interpreter.InterpreterGroup: java.util.Map allInterpreterGroups>
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r13 = <org.apache.zeppelin.interpreter.InterpreterGroup: java.util.Map allInterpreterGroups> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r14 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String id>
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r14 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String id> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : interfaceinvoke $r13.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r14)
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : interfaceinvoke $r13.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r14) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r16 = new java.util.LinkedList
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r16 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : specialinvoke $r16.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : specialinvoke $r16.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : r3 = $r16
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : r3 = $r16 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r17 = virtualinvoke r0.<org.apache.zeppelin.interpreter.InterpreterGroup: java.util.Collection values()>()
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r17 = virtualinvoke r0.<org.apache.zeppelin.interpreter.InterpreterGroup: java.util.Collection values()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : r4 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : r4 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : if $z0 == 0
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r18 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : specialinvoke r0.<org.apache.zeppelin.interpreter.InterpreterGroup: void close(java.util.Collection)>(r3)
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : specialinvoke r0.<org.apache.zeppelin.interpreter.InterpreterGroup: void close(java.util.Collection)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : return
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r18 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : r5 = (java.util.List) $r18
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : r5 = (java.util.List) $r18 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r5)
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r5) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r11 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $i0 = virtualinvoke $r11.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: int referenceCount()>()
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $i0 = virtualinvoke $r11.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: int referenceCount()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : if $i0 <= 0
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : if $i0 <= 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r12 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess>
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : if $i0 <= 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess> = null
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess> = null >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r13 = <org.apache.zeppelin.interpreter.InterpreterGroup: java.util.Map allInterpreterGroups>
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r12 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : virtualinvoke $r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: int dereference()>()
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : virtualinvoke $r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: int dereference()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : goto [?= $r11 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess>]
org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : goto [?= $r11 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess>] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterGroup.shutdown : $r11 = r0.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess>
