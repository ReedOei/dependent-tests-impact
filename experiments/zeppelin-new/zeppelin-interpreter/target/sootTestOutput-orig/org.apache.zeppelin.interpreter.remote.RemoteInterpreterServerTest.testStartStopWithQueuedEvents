org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent.toString : z0 = 1
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent.toString : $r4 = r0.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType type>
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent.toString : z2 = 0
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent.toString : $r10 = r0.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent: java.lang.String data>
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent.toString : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data:")
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent.toString : if z1 != 0 goto virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data:")
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent.toString : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent.toString : z1 = 0
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent.toString : $r1 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent.toString : $r12 = r0.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent: java.lang.String data>
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent.toString : $r15 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent.toString : $r6 = r0.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType type>
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent.toString : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type:")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.onAppStatusUpdate : $r12 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.onAppStatusUpdate : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("paragraphId", r2)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.onAppStatusUpdate : $r14 = virtualinvoke $r13.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r6)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.onAppStatusUpdate : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteId", r1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.onAppStatusUpdate : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("status", r4)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.onAppStatusUpdate : $r5 = new java.util.HashMap
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.onAppStatusUpdate : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("appId", r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils.findRandomAvailablePortOnAllLocalInterfaces : return i0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils.findRandomAvailablePortOnAllLocalInterfaces : $r0 = new java.net.ServerSocket
org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils.findRandomAvailablePortOnAllLocalInterfaces : i0 = virtualinvoke r1.<java.net.ServerSocket: int getLocalPort()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils.findRandomAvailablePortOnAllLocalInterfaces : if r1 == null goto return i0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils.findRandomAvailablePortOnAllLocalInterfaces : virtualinvoke r1.<java.net.ServerSocket: void close()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $z0 = virtualinvoke $r6.<org.apache.thrift.server.TThreadPoolServer: boolean isServing()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r2 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient eventClient>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.thrift.server.TThreadPoolServer server>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r5 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.thrift.server.TThreadPoolServer server>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.shutdown : $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.zeppelin.interpreter.InterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils.checkIfRemoteEndpointAccessible : $r1 = new java.net.Socket
org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils.checkIfRemoteEndpointAccessible : virtualinvoke r2.<java.net.Socket: void close()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils.checkIfRemoteEndpointAccessible : $z0 = 1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils.checkIfRemoteEndpointAccessible : $r3 = new java.net.InetSocketAddress
org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils.checkIfRemoteEndpointAccessible : virtualinvoke r2.<java.net.Socket: void setSoTimeout(int)>(1000)
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent$_Fields.values : $r0 = <org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent$_Fields: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent$_Fields[] $VALUES>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServerTest$ShutdownRun.run : $r2 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServerTest$ShutdownRun: org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer serv>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServerTest$ShutdownRun.run : goto [?= return]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.run : $r1 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.run : $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.thrift.server.TThreadPoolServer server>
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r51 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$onReceivedZeppelinResource
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r43 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularRegistryPush
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r9 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$cancel
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r7 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$interpret
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r49 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$runApplication
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r27 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceResponseInvokeMethod
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r37 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularObjectUpdate
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r39 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularObjectAdd
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r29 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourcePoolGetAll
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r45 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$loadApplication
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r5 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$close
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : return r0
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r23 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourcePoolResponseGetAll
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r25 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceResponseGet
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r3 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$open
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r33 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceRemove
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r17 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$shutdown
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r15 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$completion
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r13 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getFormType
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r47 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$unloadApplication
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r35 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceInvokeMethod
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r19 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getStatus
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r1 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$createInterpreter
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r31 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$resourceGet
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r11 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getProgress
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r41 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$angularObjectRemove
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor.getProcessMap : $r21 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Processor$getEvent
org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent$_Fields.getFieldName : $r1 = r0.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent$_Fields: java.lang.String _fieldName>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.getPort : $i0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: int port>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.waitForEventQueueBecomesEmpty : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$r5 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>", "org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.waitForEventQueueBecomesEmpty")]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.waitForEventQueueBecomesEmpty : exitmonitor r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.waitForEventQueueBecomesEmpty : $r5 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.waitForEventQueueBecomesEmpty : l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.waitForEventQueueBecomesEmpty : $r8 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.waitForEventQueueBecomesEmpty : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.waitForEventQueueBecomesEmpty : $r4 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.waitForEventQueueBecomesEmpty : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.isRunning : $r1 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.thrift.server.TThreadPoolServer server>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.isRunning : $r2 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer: org.apache.thrift.server.TThreadPoolServer server>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.sendEvent : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.sendEvent : exitmonitor r3
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.sendEvent : $r5 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.sendEvent : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient.sendEvent : $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventClient: java.util.List eventQueue>
