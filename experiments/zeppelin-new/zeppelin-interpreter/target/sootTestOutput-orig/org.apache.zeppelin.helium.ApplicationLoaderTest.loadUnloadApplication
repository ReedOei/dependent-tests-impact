org.apache.zeppelin.resource.ResourceSet.filterByNoteId : return r3
org.apache.zeppelin.resource.ResourceSet.filterByNoteId : r4 = virtualinvoke r0.<org.apache.zeppelin.resource.ResourceSet: java.util.Iterator iterator()>()
org.apache.zeppelin.resource.ResourceSet.filterByNoteId : $r2 = new org.apache.zeppelin.resource.ResourceSet
org.apache.zeppelin.helium.ApplicationLoaderTest.createContext : return r6
org.apache.zeppelin.helium.ApplicationLoaderTest.createContext : $r4 = new org.apache.zeppelin.helium.ApplicationContext
org.apache.zeppelin.helium.ClassLoaderApplication.getInnerApplication : $r1 = r0.<org.apache.zeppelin.helium.ClassLoaderApplication: org.apache.zeppelin.helium.Application app>
org.apache.zeppelin.helium.HeliumPackage.hashCode : $r1 = new java.lang.StringBuilder
org.apache.zeppelin.dep.DependencyResolver.load : $r5 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")
org.apache.zeppelin.dep.DependencyResolver.load : if i0 < 3 goto $r7 = new java.util.LinkedList
org.apache.zeppelin.dep.DependencyResolver.load : return r3
org.apache.zeppelin.dep.DependencyResolver.load : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r1)
org.apache.zeppelin.dep.DependencyResolver.load : $r8 = new java.io.File
org.apache.zeppelin.dep.DependencyResolver.load : $r7 = new java.util.LinkedList
org.apache.zeppelin.dep.DependencyResolver.load : $r2 = new java.util.LinkedList
org.apache.zeppelin.helium.HeliumPackage.getClassName : $r1 = r0.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String className>
org.apache.zeppelin.helium.ApplicationContext.getNoteId : $r1 = r0.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String noteId>
org.apache.zeppelin.helium.HeliumPackage.getArtifact : $r1 = r0.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String artifact>
org.apache.zeppelin.helium.Application.context : $r1 = r0.<org.apache.zeppelin.helium.Application: org.apache.zeppelin.helium.ApplicationContext context>
org.apache.zeppelin.dep.RepositorySystemFactory.newRepositorySystem : $r5 = newarray (org.sonatype.aether.connector.wagon.WagonProvider)[1]
org.apache.zeppelin.dep.RepositorySystemFactory.newRepositorySystem : $r0 = new org.apache.maven.repository.internal.DefaultServiceLocator
org.apache.zeppelin.dep.RepositorySystemFactory.newRepositorySystem : virtualinvoke r1.<org.apache.maven.repository.internal.DefaultServiceLocator: org.sonatype.aether.impl.internal.DefaultServiceLocator addService(java.lang.Class,java.lang.Class)>(class "org/sonatype/aether/spi/connector/RepositoryConnectorFactory", class "org/sonatype/aether/connector/file/FileRepositoryConnectorFactory")
org.apache.zeppelin.dep.RepositorySystemFactory.newRepositorySystem : $r7 = virtualinvoke r1.<org.apache.maven.repository.internal.DefaultServiceLocator: java.lang.Object getService(java.lang.Class)>(class "org/sonatype/aether/RepositorySystem")
org.apache.zeppelin.dep.RepositorySystemFactory.newRepositorySystem : virtualinvoke r1.<org.apache.maven.repository.internal.DefaultServiceLocator: org.sonatype.aether.impl.internal.DefaultServiceLocator addService(java.lang.Class,java.lang.Class)>(class "org/sonatype/aether/spi/connector/RepositoryConnectorFactory", class "org/sonatype/aether/connector/wagon/WagonRepositoryConnectorFactory")
org.apache.zeppelin.dep.Booter.newCentralRepository : $r1 = new org.sonatype.aether.repository.RemoteRepository
org.apache.zeppelin.dep.Booter.newCentralRepository : if r0 != null goto $r1 = new org.sonatype.aether.repository.RemoteRepository
org.apache.zeppelin.dep.Booter.newCentralRepository : r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("zeppelin.interpreter.dep.mvnRepo")
org.apache.zeppelin.dep.Booter.newCentralRepository : r0 = "http://repo1.maven.org/maven2/"
org.apache.zeppelin.dep.Booter.newCentralRepository : r0 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("ZEPPELIN_INTERPRETER_DEP_MVNREPO")
org.apache.zeppelin.dep.Booter.newCentralRepository : if r0 != null goto (branch)
org.apache.zeppelin.interpreter.InterpreterOutput.clear : $r8 = r0.<org.apache.zeppelin.interpreter.InterpreterOutput: java.util.List resultMessageOutputs>
org.apache.zeppelin.interpreter.InterpreterOutput.clear : exitmonitor r1
org.apache.zeppelin.interpreter.InterpreterOutput.clear : specialinvoke r0.<org.apache.zeppelin.interpreter.InterpreterOutput: void updateAllResultMessages()>()
org.apache.zeppelin.interpreter.InterpreterOutput.clear : r0.<org.apache.zeppelin.interpreter.InterpreterOutput: boolean firstCharIsPercentSign> = 0
org.apache.zeppelin.interpreter.InterpreterOutput.clear : $r13 = r0.<org.apache.zeppelin.interpreter.InterpreterOutput: java.util.List resultMessageOutputs>
org.apache.zeppelin.interpreter.InterpreterOutput.clear : $r6 = r0.<org.apache.zeppelin.interpreter.InterpreterOutput: java.io.ByteArrayOutputStream buffer>
org.apache.zeppelin.interpreter.InterpreterOutput.clear : $r7 = r0.<org.apache.zeppelin.interpreter.InterpreterOutput: java.util.List resultMessageOutputs>
org.apache.zeppelin.interpreter.InterpreterOutput.clear : r0.<org.apache.zeppelin.interpreter.InterpreterOutput: int size> = 0
org.apache.zeppelin.interpreter.InterpreterOutput.clear : r0.<org.apache.zeppelin.interpreter.InterpreterOutput: boolean truncated> = 0
org.apache.zeppelin.interpreter.InterpreterOutput.clear : r0.<org.apache.zeppelin.interpreter.InterpreterOutput: boolean startOfTheNewLine> = 1
org.apache.zeppelin.interpreter.InterpreterOutput.clear : r0.<org.apache.zeppelin.interpreter.InterpreterOutput: org.apache.zeppelin.interpreter.InterpreterResultMessageOutput currentOut> = null
org.apache.zeppelin.helium.MockApplication1.getNumRun : $i0 = r0.<org.apache.zeppelin.helium.MockApplication1: int run>
org.apache.zeppelin.helium.HeliumPackage.getType : $r1 = r0.<org.apache.zeppelin.helium.HeliumPackage: org.apache.zeppelin.helium.HeliumType type>
org.apache.zeppelin.helium.MockApplication1.unload : r0.<org.apache.zeppelin.helium.MockApplication1: boolean unloaded> = 1
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r21 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : return r25
org.apache.zeppelin.helium.ApplicationLoader.loadClass : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r11 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getArtifact()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r24 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getClassName()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : if r3 == null goto $r17 = new java.net.URLClassLoader
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r12 = r0.<org.apache.zeppelin.helium.ApplicationLoader: org.apache.zeppelin.dep.DependencyResolver depResolver>
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r15 = virtualinvoke r5.<java.io.File: java.net.URI toURI()>()
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r10 = new java.util.LinkedList
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r19 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r18)
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r6 = r0.<org.apache.zeppelin.helium.ApplicationLoader: java.util.Map cached>
org.apache.zeppelin.helium.ApplicationLoader.loadClass : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r17 = new java.net.URLClassLoader
org.apache.zeppelin.helium.ApplicationLoader.loadClass : $r26 = r0.<org.apache.zeppelin.helium.ApplicationLoader: java.util.Map cached>
org.apache.zeppelin.helium.ApplicationLoaderTest.createPackageInfo : return r5
org.apache.zeppelin.helium.ApplicationLoaderTest.createPackageInfo : $r3 = new org.apache.zeppelin.helium.HeliumPackage
org.apache.zeppelin.helium.HeliumPackage.getResources : $r1 = r0.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String[][] resources>
org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : return r3
org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : r4 = virtualinvoke r0.<org.apache.zeppelin.resource.ResourceSet: java.util.Iterator iterator()>()
org.apache.zeppelin.resource.ResourceSet.filterByParagraphId : $r2 = new org.apache.zeppelin.resource.ResourceSet
org.apache.zeppelin.dep.Booter.newRepositorySystemSession : $r7 = interfaceinvoke r0.<org.sonatype.aether.RepositorySystem: org.sonatype.aether.repository.LocalRepositoryManager newLocalRepositoryManager(org.sonatype.aether.repository.LocalRepository)>(r3)
org.apache.zeppelin.dep.Booter.newRepositorySystemSession : return r2
org.apache.zeppelin.dep.Booter.newRepositorySystemSession : staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "localRepoPath should have a value")
org.apache.zeppelin.dep.Booter.newRepositorySystemSession : $r5 = new org.sonatype.aether.repository.LocalRepository
org.apache.zeppelin.dep.Booter.newRepositorySystemSession : $r4 = new org.apache.maven.repository.internal.MavenRepositorySystemSession
org.apache.zeppelin.dep.Booter.resolveLocalRepoPath : r1 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("ZEPPELIN_HOME")
org.apache.zeppelin.dep.Booter.resolveLocalRepoPath : r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("zeppelin.home")
org.apache.zeppelin.dep.Booter.resolveLocalRepoPath : $r2 = newarray (java.lang.String)[0]
org.apache.zeppelin.dep.Booter.resolveLocalRepoPath : if r1 != null goto (branch)
org.apache.zeppelin.dep.Booter.resolveLocalRepoPath : r1 = ".."
org.apache.zeppelin.dep.Booter.resolveLocalRepoPath : if r1 != null goto $r2 = newarray (java.lang.String)[0]
org.apache.zeppelin.interpreter.InterpreterOutput.updateAllResultMessages : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterOutput: org.apache.zeppelin.interpreter.InterpreterOutputListener flushListener>
org.apache.zeppelin.dep.Booter.newRepositorySystem : $r0 = staticinvoke <org.apache.zeppelin.dep.RepositorySystemFactory: org.sonatype.aether.RepositorySystem newRepositorySystem()>()
org.apache.zeppelin.helium.ApplicationContext.getParagraphId : $r1 = r0.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String paragraphId>
org.apache.zeppelin.resource.LocalResourcePool.getAll : $r1 = new org.apache.zeppelin.resource.ResourceSet
org.apache.zeppelin.dep.Booter.newLocalRepository : $r0 = new org.sonatype.aether.repository.RemoteRepository
org.apache.zeppelin.dep.Booter.newLocalRepository : $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home")
org.apache.zeppelin.helium.ApplicationLoader.findRequiredResourceSet : return r5
org.apache.zeppelin.helium.ApplicationLoader.findRequiredResourceSet : if r1 == null goto $r5 = new org.apache.zeppelin.resource.ResourceSet
org.apache.zeppelin.helium.ApplicationLoader.findRequiredResourceSet : r6 = r0
org.apache.zeppelin.helium.ApplicationLoader.findRequiredResourceSet : $r12 = virtualinvoke r3.<org.apache.zeppelin.resource.ResourceSet: org.apache.zeppelin.resource.ResourceSet filterByNoteId(java.lang.String)>(r1)
org.apache.zeppelin.helium.ApplicationLoader.findRequiredResourceSet : $r6 = r0.<org.apache.zeppelin.helium.ApplicationLoader: org.apache.zeppelin.resource.ResourcePool resourcePool>
org.apache.zeppelin.helium.ApplicationLoader.findRequiredResourceSet : $r9 = r0.<org.apache.zeppelin.helium.ApplicationLoader: org.apache.zeppelin.resource.ResourcePool resourcePool>
org.apache.zeppelin.helium.ApplicationLoader.findRequiredResourceSet : $i5 = virtualinvoke r5.<org.apache.zeppelin.resource.ResourceSet: int size()>()
org.apache.zeppelin.helium.ApplicationLoader.findRequiredResourceSet : $r4 = new org.apache.zeppelin.resource.ResourceSet
org.apache.zeppelin.helium.ApplicationLoader.findRequiredResourceSet : r8 = r7
org.apache.zeppelin.helium.ApplicationLoader.findRequiredResourceSet : virtualinvoke r5.<org.apache.zeppelin.resource.ResourceSet: void clear()>()
org.apache.zeppelin.helium.ApplicationLoader.findRequiredResourceSet : if r0 == null goto return r5
org.apache.zeppelin.helium.ApplicationLoader.findRequiredResourceSet : $r10 = staticinvoke <org.apache.zeppelin.helium.ApplicationLoader: org.apache.zeppelin.resource.ResourceSet findRequiredResourceSet(java.lang.String[][],java.lang.String,java.lang.String,org.apache.zeppelin.resource.ResourceSet)>(r1, r2, r3, r4)
org.apache.zeppelin.helium.ApplicationLoader.load : r7 = specialinvoke r0.<org.apache.zeppelin.helium.ApplicationLoader: java.lang.Class loadClass(org.apache.zeppelin.helium.HeliumPackage)>(r1)
org.apache.zeppelin.helium.ApplicationLoader.load : $r21 = new org.apache.zeppelin.helium.ApplicationLoader$RunningApplication
org.apache.zeppelin.helium.ApplicationLoader.load : $r30 = new org.apache.zeppelin.helium.ClassLoaderApplication
org.apache.zeppelin.helium.ApplicationLoader.load : $r29 = newarray (java.lang.Class)[1]
org.apache.zeppelin.helium.ApplicationLoader.load : $r14 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: org.apache.zeppelin.helium.HeliumType getType()>()
org.apache.zeppelin.helium.ApplicationLoader.load : r9 = virtualinvoke r7.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.zeppelin.helium.ApplicationLoader.load : r12 = r11
org.apache.zeppelin.helium.ApplicationLoader.load : $r24 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String[][] getResources()>()
org.apache.zeppelin.helium.ApplicationLoader.load : $r27 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
org.apache.zeppelin.helium.ApplicationLoader.load : $r34 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
org.apache.zeppelin.helium.ApplicationLoader.load : $r28 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
org.apache.zeppelin.helium.ApplicationLoader.load : $r22 = virtualinvoke r2.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String getNoteId()>()
org.apache.zeppelin.helium.ApplicationLoader.load : $r25 = virtualinvoke r2.<org.apache.zeppelin.helium.ApplicationContext: java.lang.String getNoteId()>()
org.apache.zeppelin.helium.MockApplication1.isUnloaded : $z0 = r0.<org.apache.zeppelin.helium.MockApplication1: boolean unloaded>
