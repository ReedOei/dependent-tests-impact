org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r14 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r15 = interfaceinvoke $r14.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r15 = interfaceinvoke $r14.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r1 = (org.apache.ambari.server.state.Clusters) $r15
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r1 = (org.apache.ambari.server.state.Clusters) $r15 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r16 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: com.google.inject.Injector injector>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r16 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r17 = interfaceinvoke $r16.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceFactory")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r17 = interfaceinvoke $r16.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceFactory") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r2 = (org.apache.ambari.server.state.ServiceFactory) $r17
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r2 = (org.apache.ambari.server.state.ServiceFactory) $r17 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r3 = "c1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r3 = "c1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r18 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r18 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r18.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.1.1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r18.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.1.1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r4 = $r18
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r4 = $r18 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r19 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r19 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r19.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.2.0")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r19.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.2.0") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r5 = $r19
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r5 = $r19 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>(r3, r4)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>(r3, r4) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r20 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.orm.OrmTestHelper helper>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r20 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.orm.OrmTestHelper helper> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r21 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r21 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r22 = virtualinvoke $r21.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r22 = virtualinvoke $r21.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r20.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r4, $r22)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r20.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r4, $r22) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r24 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.orm.OrmTestHelper helper>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r24 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.orm.OrmTestHelper helper> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r24.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r5, "2.2.0")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r24.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r5, "2.2.0") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r26 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.orm.OrmTestHelper helper>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r26 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.orm.OrmTestHelper helper> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r26.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r5, "2.2.1.0-1234")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r26.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r5, "2.2.1.0-1234") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r28 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r28 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r29 = virtualinvoke $r28.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r29 = virtualinvoke $r28.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r7 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r7 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r4, $r29, "admin", $r7)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r4, $r29, "admin", $r7) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : i0 = 0
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : i0 = 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if i0 >= 4
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if i0 >= 4 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r30 = new java.lang.StringBuilder
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if i0 >= 4 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r36 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "HDFS")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r36 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "HDFS") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r36)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r36) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r37 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "YARN")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r37 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "YARN") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r37)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r37) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r38 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "ZOOKEEPER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r38 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "ZOOKEEPER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r38)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r38) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r39 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "HIVE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r39 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "HIVE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r39)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r39) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r40 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "OOZIE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r40 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "OOZIE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r40)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r40) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r41 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r41 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r42 = interfaceinvoke r41.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("NAMENODE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r42 = interfaceinvoke r41.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("NAMENODE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r42.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r42.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r42.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r42.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r45 = interfaceinvoke r41.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("DATANODE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r45 = interfaceinvoke r41.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("DATANODE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r45.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r45.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r45.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r45.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r48 = interfaceinvoke r45.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h4")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r48 = interfaceinvoke r45.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h4") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r49 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("ZOOKEEPER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r49 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("ZOOKEEPER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r50 = interfaceinvoke r49.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("ZOOKEEPER_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r50 = interfaceinvoke r49.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("ZOOKEEPER_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r50.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r50.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r50.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r50.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r50.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r50.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r54 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("YARN")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r54 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("YARN") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r55 = interfaceinvoke r54.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("RESOURCEMANAGER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r55 = interfaceinvoke r54.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("RESOURCEMANAGER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r55.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r55.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r57 = interfaceinvoke r54.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("NODEMANAGER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r57 = interfaceinvoke r54.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("NODEMANAGER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r57.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r57.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r57.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r57.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r60 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HIVE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r60 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HIVE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r61 = interfaceinvoke r60.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HIVE_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r61 = interfaceinvoke r60.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HIVE_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r61.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r61.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r63 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("OOZIE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r63 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("OOZIE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r64 = interfaceinvoke r63.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("OOZIE_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r64 = interfaceinvoke r63.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("OOZIE_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r64.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r64.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r64.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r64.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r67 = interfaceinvoke r63.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("OOZIE_CLIENT")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r67 = interfaceinvoke r63.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("OOZIE_CLIENT") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r67.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r67.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r67.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r67.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r67.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r67.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r71 = new java.util.HashMap
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r71 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r71.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r71.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r72 = $r71
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r72 = $r71 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r72.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hive.server2.transport.mode", "binary")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r72.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hive.server2.transport.mode", "binary") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r72.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hive.server2.thrift.port", "10001")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r72.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hive.server2.thrift.port", "10001") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r75 = new org.apache.ambari.server.controller.ConfigurationRequest
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r75 = new org.apache.ambari.server.controller.ConfigurationRequest >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r75.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r75.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r11 = $r75
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r11 = $r75 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r11.<org.apache.ambari.server.controller.ConfigurationRequest: void setClusterName(java.lang.String)>(r3)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r11.<org.apache.ambari.server.controller.ConfigurationRequest: void setClusterName(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r11.<org.apache.ambari.server.controller.ConfigurationRequest: void setType(java.lang.String)>("hive-site")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r11.<org.apache.ambari.server.controller.ConfigurationRequest: void setType(java.lang.String)>("hive-site") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r11.<org.apache.ambari.server.controller.ConfigurationRequest: void setVersionTag(java.lang.String)>("version1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r11.<org.apache.ambari.server.controller.ConfigurationRequest: void setVersionTag(java.lang.String)>("version1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r11.<org.apache.ambari.server.controller.ConfigurationRequest: void setProperties(java.util.Map)>(r72)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r11.<org.apache.ambari.server.controller.ConfigurationRequest: void setProperties(java.util.Map)>(r72) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r76 = new org.apache.ambari.server.controller.ClusterRequest
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r76 = new org.apache.ambari.server.controller.ClusterRequest >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $l2 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $l2 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r77 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r77 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r78 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r78 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r79 = virtualinvoke $r78.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r79 = virtualinvoke $r78.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r76.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>($r77, r3, $r79, null)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r76.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>($r77, r3, $r79, null) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r12 = $r76
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r12 = $r76 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r80 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r11)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r80 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r12.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r80)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r12.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r80) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r81 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.controller.AmbariManagementController m_managementController>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r81 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.controller.AmbariManagementController m_managementController> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r82 = new org.apache.ambari.server.state.UpgradeHelperTest$15
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r82 = new org.apache.ambari.server.state.UpgradeHelperTest$15 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r82.<org.apache.ambari.server.state.UpgradeHelperTest$15: void <init>(org.apache.ambari.server.state.UpgradeHelperTest,org.apache.ambari.server.controller.ClusterRequest)>(r0, r12)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r82.<org.apache.ambari.server.state.UpgradeHelperTest$15: void <init>(org.apache.ambari.server.state.UpgradeHelperTest,org.apache.ambari.server.controller.ClusterRequest)>(r0, r12) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r81.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r82, null)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r81.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r82, null) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r84 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r84 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r84.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r84.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r13 = $r84
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r13 = $r84 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r85 = r13.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r85 = r13.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r86 = newarray (java.lang.String)[3]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r86 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r86[0] = "h1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r86[0] = "h1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r86[1] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r86[1] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r86[2] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r86[2] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r87 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r86)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r87 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r86) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r85.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r87)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r85.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r87) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r88 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r88 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r89 = virtualinvoke $r88.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("ZOOKEEPER", "ZOOKEEPER_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r89 = virtualinvoke $r88.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("ZOOKEEPER", "ZOOKEEPER_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r90 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r89)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r90 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r89) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r91 = interfaceinvoke $r90.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r91 = interfaceinvoke $r90.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r93 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r93 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r93.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r93.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r94 = $r93
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r94 = $r93 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r95 = r94.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r95 = r94.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r96 = newarray (java.lang.String)[2]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r96 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r96[0] = "h1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r96[0] = "h1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r96[1] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r96[1] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r97 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r96)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r97 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r96) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r95.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r97)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r95.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r97) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r94.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = "h1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r94.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = "h1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r94.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r94.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r98 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r98 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r99 = virtualinvoke $r98.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HDFS", "NAMENODE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r99 = virtualinvoke $r98.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HDFS", "NAMENODE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r100 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r99)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r100 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r99) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r101 = interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r94)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r101 = interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r94) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r101.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r101.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r103 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r103 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r103.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r103.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r104 = $r103
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r104 = $r103 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if z0 == 0
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r105 = r104.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r108 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r48)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r108 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r48) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r104.<org.apache.ambari.server.stack.HostsType: java.util.List unhealthy> = $r108
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r104.<org.apache.ambari.server.stack.HostsType: java.util.List unhealthy> = $r108 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r109 = r104.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r109 = r104.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r110 = newarray (java.lang.String)[2]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r110 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r110[0] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r110[0] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r110[1] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r110[1] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r111 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r110)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r111 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r110) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r109.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r111)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r109.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r111) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r112 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r112 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r113 = virtualinvoke $r112.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HDFS", "DATANODE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r113 = virtualinvoke $r112.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HDFS", "DATANODE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r114 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r113)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r114 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r113) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r115 = interfaceinvoke $r114.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r104)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r115 = interfaceinvoke $r114.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r104) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r115.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r115.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r117 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r117 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r117.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r117.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r118 = $r117
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r118 = $r117 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r119 = r118.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r119 = r118.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r120 = newarray (java.lang.String)[1]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r120 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r120[0] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r120[0] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r121 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r120)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r121 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r120) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r119.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r121)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r119.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r121) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r122 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r122 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r123 = virtualinvoke $r122.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "RESOURCEMANAGER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r123 = virtualinvoke $r122.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "RESOURCEMANAGER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r124 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r123)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r124 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r123) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r125 = interfaceinvoke $r124.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r118)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r125 = interfaceinvoke $r124.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r118) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r125.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r125.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r127 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r127 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r127.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r127.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r128 = $r127
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r128 = $r127 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r129 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r129 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r130 = virtualinvoke $r129.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "APP_TIMELINE_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r130 = virtualinvoke $r129.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "APP_TIMELINE_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r131 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r130)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r131 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r130) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r132 = interfaceinvoke $r131.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r128)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r132 = interfaceinvoke $r131.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r128) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r132.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r132.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r134 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r134 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r134.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r134.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r135 = $r134
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r135 = $r134 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r136 = r135.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r136 = r135.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r137 = newarray (java.lang.String)[2]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r137 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r137[0] = "h1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r137[0] = "h1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r137[1] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r137[1] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r138 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r137)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r138 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r137) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r136.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r138)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r136.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r138) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r139 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r139 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r140 = virtualinvoke $r139.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "NODEMANAGER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r140 = virtualinvoke $r139.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "NODEMANAGER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r141 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r140)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r141 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r140) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r142 = interfaceinvoke $r141.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r135)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r142 = interfaceinvoke $r141.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r135) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r142.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r142.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r144 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r144 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r145 = virtualinvoke $r144.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HIVE", "HIVE_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r145 = virtualinvoke $r144.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HIVE", "HIVE_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r146 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r145)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r146 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r145) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r147 = interfaceinvoke $r146.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r135)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r147 = interfaceinvoke $r146.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r135) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r147.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r147.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r149 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r149 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r149.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r149.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r150 = $r149
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r150 = $r149 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r151 = r150.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r151 = r150.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r152 = newarray (java.lang.String)[2]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r152 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r152[0] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r152[0] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r152[1] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r152[1] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r153 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r152)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r153 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r152) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r151.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r153)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r151.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r153) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r154 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r154 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r155 = virtualinvoke $r154.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("OOZIE", "OOZIE_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r155 = virtualinvoke $r154.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("OOZIE", "OOZIE_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r156 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r155)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r156 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r155) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r157 = interfaceinvoke $r156.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r150)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r157 = interfaceinvoke $r156.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r150) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r157.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r157.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r159 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r159 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r159.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r159.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r160 = $r159
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r160 = $r159 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r161 = r160.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r161 = r160.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r162 = newarray (java.lang.String)[3]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r162 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r162[0] = "h1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r162[0] = "h1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r162[1] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r162[1] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r162[2] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r162[2] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r163 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r162)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r163 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r162) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r161.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r163)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r161.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r163) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r164 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r164 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r165 = virtualinvoke $r164.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("OOZIE", "OOZIE_CLIENT")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r165 = virtualinvoke $r164.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("OOZIE", "OOZIE_CLIENT") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r166 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r165)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r166 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r165) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r167 = interfaceinvoke $r166.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r160)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r167 = interfaceinvoke $r166.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r160) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r167.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r167.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r169 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r169 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r170 = virtualinvoke $r169.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r170 = virtualinvoke $r169.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r171 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r170)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r171 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r170) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r172 = interfaceinvoke $r171.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r172 = interfaceinvoke $r171.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r172.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r172.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r174 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r174 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r175 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r175 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r174[0] = $r175
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r174[0] = $r175 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r174)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r174) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : return r6
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r105 = r104.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r106 = newarray (java.lang.String)[3]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r106 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r106[0] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r106[0] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r106[1] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r106[1] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r106[2] = "h4"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r106[2] = "h4" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r107 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r106)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r107 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r106) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r105.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r107)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r105.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r107) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : goto [?= $r112 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : goto [?= $r112 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r112 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r30 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("h")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("h") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $i1 = i0 + 1
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $i1 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r8 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r8 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r8)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r9 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r8)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r9 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r33 = new java.util.HashMap
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r33 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r33.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r33.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r10 = $r33
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r10 = $r33 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r9.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r10)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r9.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r10) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r8, r3)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r8, r3) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : i0 = i0 + 1
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : goto [?= (branch)]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if i0 >= 4
