org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r3 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/UpgradeContextFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/UpgradeContextFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/UpgradeContextFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r7 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r7 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r9 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r9 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r13 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ActionManager")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r13 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ActionManager") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ActionManager")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ActionManager") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r15 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/HostRoleCommandDAO")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r15 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/HostRoleCommandDAO") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/HostRoleCommandDAO")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/HostRoleCommandDAO") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r16)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r17 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r17 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r18)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r19 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/ClusterController")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r19 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/ClusterController") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/ClusterController")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/ClusterController") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r20)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r21 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/stack/StackManagerFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r21 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/stack/StackManagerFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/stack/StackManagerFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/stack/StackManagerFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r21.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r22)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r21.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r23 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/eclipse/jetty/server/SessionManager")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r23 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/eclipse/jetty/server/SessionManager") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/eclipse/jetty/server/SessionManager")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/eclipse/jetty/server/SessionManager") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r23.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r23.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r25 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/scheduler/RequestExecutionFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r25 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/scheduler/RequestExecutionFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/scheduler/RequestExecutionFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/scheduler/RequestExecutionFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r25.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r26)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r25.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r27 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/scheduler/ExecutionScheduler")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r27 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/scheduler/ExecutionScheduler") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/scheduler/ExecutionScheduler")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/scheduler/ExecutionScheduler") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r27.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r28)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r27.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r29 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/RequestFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r29 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/RequestFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/RequestFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/RequestFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r29.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r30)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r29.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r31 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/StageFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r31 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/StageFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/StageFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/StageFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r31.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r32)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r31.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r33 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/stageplanner/RoleGraphFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r33 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/stageplanner/RoleGraphFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/stageplanner/RoleGraphFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/stageplanner/RoleGraphFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r33.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r34)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r33.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r35 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/AbstractRootServiceResponseFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r35 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/AbstractRootServiceResponseFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AbstractRootServiceResponseFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AbstractRootServiceResponseFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r35.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r36)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r35.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r37 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ConfigFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r37 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ConfigFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ConfigFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ConfigFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r37.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r38)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r37.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r39 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/configgroup/ConfigGroupFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r39 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/configgroup/ConfigGroupFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/configgroup/ConfigGroupFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/configgroup/ConfigGroupFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r39.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r40)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r39.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r41 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r41 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r41.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r42)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r41.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r42) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r43 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r43 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r43.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r44)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r43.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r44) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r45 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHostFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r45 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHostFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHostFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHostFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r45.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r46)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r45.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r47 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/springframework/security/crypto/password/PasswordEncoder")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r47 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/springframework/security/crypto/password/PasswordEncoder") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r48 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/springframework/security/crypto/password/PasswordEncoder")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r48 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/springframework/security/crypto/password/PasswordEncoder") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r47.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r48)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r47.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r49 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/KerberosHelper")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r49 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/KerberosHelper") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r50 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/KerberosHelper")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r50 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/KerberosHelper") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r49.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r50)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r49.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r50) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r51 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/Users")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r51 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/Users") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r52 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/Users")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r52 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/Users") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r51.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r52)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r51.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r52) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r53 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/events/publishers/AmbariEventPublisher")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r53 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/events/publishers/AmbariEventPublisher") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r54 = r0.<org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule: org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest this$0>
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r54 = r0.<org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule: org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest this$0> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r55 = virtualinvoke $r54.<org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/events/publishers/AmbariEventPublisher")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r55 = virtualinvoke $r54.<org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/events/publishers/AmbariEventPublisher") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r53.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r55)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r53.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r55) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r56 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/hooks/HookContextFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r56 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/hooks/HookContextFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r57 = r0.<org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule: org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest this$0>
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r57 = r0.<org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule: org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest this$0> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r58 = virtualinvoke $r57.<org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/hooks/HookContextFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r58 = virtualinvoke $r57.<org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/hooks/HookContextFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r56.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r58)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r56.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r58) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r59 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/hooks/HookService")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r59 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/hooks/HookService") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r60 = r0.<org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule: org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest this$0>
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r60 = r0.<org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule: org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest this$0> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r61 = virtualinvoke $r60.<org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/hooks/HookService")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r61 = virtualinvoke $r60.<org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/hooks/HookService") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r59.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r61)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r59.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r61) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r62 = new com.google.inject.assistedinject.FactoryModuleBuilder
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r62 = new com.google.inject.assistedinject.FactoryModuleBuilder >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : specialinvoke $r62.<com.google.inject.assistedinject.FactoryModuleBuilder: void <init>()>()
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : specialinvoke $r62.<com.google.inject.assistedinject.FactoryModuleBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r63 = virtualinvoke $r62.<com.google.inject.assistedinject.FactoryModuleBuilder: com.google.inject.assistedinject.FactoryModuleBuilder implement(java.lang.Class,java.lang.Class)>(class "org/apache/ambari/server/state/Cluster", class "org/apache/ambari/server/state/cluster/ClusterImpl")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r63 = virtualinvoke $r62.<com.google.inject.assistedinject.FactoryModuleBuilder: com.google.inject.assistedinject.FactoryModuleBuilder implement(java.lang.Class,java.lang.Class)>(class "org/apache/ambari/server/state/Cluster", class "org/apache/ambari/server/state/cluster/ClusterImpl") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r64 = virtualinvoke $r63.<com.google.inject.assistedinject.FactoryModuleBuilder: com.google.inject.Module build(java.lang.Class)>(class "org/apache/ambari/server/state/cluster/ClusterFactory")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r64 = virtualinvoke $r63.<com.google.inject.assistedinject.FactoryModuleBuilder: com.google.inject.Module build(java.lang.Class)>(class "org/apache/ambari/server/state/cluster/ClusterFactory") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke r1.<com.google.inject.Binder: void install(com.google.inject.Module)>($r64)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke r1.<com.google.inject.Binder: void install(com.google.inject.Module)>($r64) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r65 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/metadata/RoleCommandOrderProvider")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r65 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/metadata/RoleCommandOrderProvider") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r65.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "org/apache/ambari/server/metadata/CachedRoleCommandOrderProvider")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r65.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "org/apache/ambari/server/metadata/CachedRoleCommandOrderProvider") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r67 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r65.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "org/apache/ambari/server/metadata/CachedRoleCommandOrderProvider") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r77 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : r78 = $r77 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r79 = virtualinvoke r78.<java.lang.Exception: java.lang.String toString()>()
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r79 = virtualinvoke r78.<java.lang.Exception: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : staticinvoke <junit.framework.Assert: void fail(java.lang.String)>($r79)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : staticinvoke <junit.framework.Assert: void fail(java.lang.String)>($r79) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r80 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/ClusterDAO")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r80 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/ClusterDAO") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r81 = r0.<org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule: org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest this$0>
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r81 = r0.<org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule: org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest this$0> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r82 = virtualinvoke $r81.<org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/ClusterDAO")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r82 = virtualinvoke $r81.<org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/ClusterDAO") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r80.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r82)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r80.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r82) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : return
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r67 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : r2 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r67
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r67 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r77 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : r2 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r67 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r68 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>()
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : r2 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r67 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r77 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r68 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r69 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>()
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r68 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r77 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r69 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r70 = virtualinvoke r2.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getServices(java.lang.String,java.lang.String)>($r68, $r69)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r69 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r77 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r70 = virtualinvoke r2.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getServices(java.lang.String,java.lang.String)>($r68, $r69) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r70 = virtualinvoke r2.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getServices(java.lang.String,java.lang.String)>($r68, $r69) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r77 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r72 = new java.util.HashMap
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r77 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r72 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : specialinvoke $r72.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r72 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r77 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : specialinvoke $r72.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r73 = interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r72)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : specialinvoke $r72.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r77 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r73 = interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r72) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r73.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r73 = interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r72) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r77 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r73.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r75 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r73.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r77 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r75 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r75[0] = r2
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r75 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r77 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r75[0] = r2 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r75)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r75[0] = r2 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r77 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r75) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r76 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo")
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r75) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r77 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r76 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r76.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2)
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r76 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r77 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r76.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : goto [?= $r80 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/ClusterDAO")]
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : interfaceinvoke $r76.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r77 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : goto [?= $r80 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/ClusterDAO")] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterEffectiveVersionTest$MockModule.configure : $r80 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/ClusterDAO")
