org.apache.http.pool.RouteSpecificPool.free : if z0 == 0 goto return
org.apache.http.pool.RouteSpecificPool.free : if r1 != null goto $r3 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.pool.RouteSpecificPool.free : $r10 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.RouteSpecificPool.free : $r3 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.pool.RouteSpecificPool.free : if z1 != 0 goto (branch)
org.apache.http.pool.TestConnPool$LocalConnPool.closeEntry : $r2 = (org.apache.http.pool.TestConnPool$LocalPoolEntry) r1
org.apache.http.pool.TestConnPool$LocalConnPool.closeEntry : goto [?= return]
org.apache.http.pool.TestConnPool$LocalConnPool.closeEntry : $r4 = virtualinvoke r1.<org.apache.http.pool.TestConnPool$LocalPoolEntry: java.lang.Object getConnection()>()
org.apache.http.pool.TestConnPool$LocalConnPool.closeEntry : interfaceinvoke r2.<org.apache.http.HttpConnection: void close()>()
org.apache.http.pool.AbstractConnPool.getStats : $r8 = r0.<org.apache.http.pool.AbstractConnPool: java.util.concurrent.locks.Lock lock>
org.apache.http.pool.AbstractConnPool.getStats : $r7 = new org.apache.http.pool.PoolStats
org.apache.http.pool.AbstractConnPool.getStats : if r1 != null goto $r6 = r0.<org.apache.http.pool.AbstractConnPool: java.util.concurrent.locks.Lock lock>
org.apache.http.pool.AbstractConnPool.getStats : $r6 = r0.<org.apache.http.pool.AbstractConnPool: java.util.concurrent.locks.Lock lock>
org.apache.http.pool.AbstractConnPool.getStats : r2 = specialinvoke r0.<org.apache.http.pool.AbstractConnPool: org.apache.http.pool.RouteSpecificPool getPool(java.lang.Object)>(r1)
org.apache.http.pool.AbstractConnPool.release : if z0 == 0 goto virtualinvoke r0.<org.apache.http.pool.AbstractConnPool: void closeEntry(org.apache.http.pool.PoolEntry)>(r1)
org.apache.http.pool.AbstractConnPool.release : virtualinvoke r2.<org.apache.http.pool.RouteSpecificPool: void free(org.apache.http.pool.PoolEntry,boolean)>(r1, z0)
org.apache.http.pool.AbstractConnPool.release : $r8 = r0.<org.apache.http.pool.AbstractConnPool: java.util.concurrent.locks.Lock lock>
org.apache.http.pool.AbstractConnPool.release : $r5 = r0.<org.apache.http.pool.AbstractConnPool: java.util.Set leased>
org.apache.http.pool.AbstractConnPool.release : specialinvoke r0.<org.apache.http.pool.AbstractConnPool: void notifyPending(org.apache.http.pool.RouteSpecificPool)>(r2)
org.apache.http.pool.AbstractConnPool.release : $r7 = r0.<org.apache.http.pool.AbstractConnPool: java.util.LinkedList available>
org.apache.http.pool.AbstractConnPool.release : $r6 = virtualinvoke r1.<org.apache.http.pool.PoolEntry: java.lang.Object getRoute()>()
org.apache.http.pool.AbstractConnPool.release : $r4 = r0.<org.apache.http.pool.AbstractConnPool: java.util.concurrent.locks.Lock lock>
org.apache.http.pool.AbstractConnPool.release : goto [?= return]
org.apache.http.pool.AbstractConnPool$2.getPoolEntry : $r2 = r0.<org.apache.http.pool.AbstractConnPool$2: org.apache.http.pool.AbstractConnPool this$0>
org.apache.http.pool.AbstractConnPool$2.getPoolEntry : $r2 = virtualinvoke r0.<org.apache.http.pool.AbstractConnPool$2: org.apache.http.pool.PoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit)>(l0, r1)
org.apache.http.pool.AbstractConnPool.notifyPending : if r2 == null goto return
org.apache.http.pool.AbstractConnPool.notifyPending : $r4 = r0.<org.apache.http.pool.AbstractConnPool: java.util.LinkedList pending>
org.apache.http.pool.AbstractConnPool.notifyPending : if r2 == null goto $r4 = r0.<org.apache.http.pool.AbstractConnPool: java.util.LinkedList pending>
org.apache.http.pool.AbstractConnPool.notifyPending : r2 = virtualinvoke r1.<org.apache.http.pool.RouteSpecificPool: org.apache.http.pool.PoolEntryFuture nextPending()>()
org.apache.http.pool.AbstractConnPool.closeExpired : $z1 = virtualinvoke r2.<org.apache.http.pool.PoolEntry: boolean isExpired(long)>(l0)
org.apache.http.pool.AbstractConnPool.closeExpired : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()", "org.apache.http.pool.AbstractConnPool.closeExpired")]
org.apache.http.pool.AbstractConnPool.closeExpired : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.http.pool.AbstractConnPool.closeExpired : interfaceinvoke r1.<java.util.Iterator: void remove()>()
org.apache.http.pool.AbstractConnPool.closeExpired : virtualinvoke r0.<org.apache.http.pool.AbstractConnPool: void closeEntry(org.apache.http.pool.PoolEntry)>(r2)
org.apache.http.pool.AbstractConnPool.closeExpired : virtualinvoke r3.<org.apache.http.pool.RouteSpecificPool: boolean remove(org.apache.http.pool.PoolEntry)>(r2)
org.apache.http.pool.AbstractConnPool.closeExpired : $r5 = r0.<org.apache.http.pool.AbstractConnPool: java.util.concurrent.locks.Lock lock>
org.apache.http.pool.AbstractConnPool.closeExpired : $r8 = virtualinvoke r2.<org.apache.http.pool.PoolEntry: java.lang.Object getRoute()>()
org.apache.http.pool.AbstractConnPool.closeExpired : $r9 = r0.<org.apache.http.pool.AbstractConnPool: java.util.concurrent.locks.Lock lock>
org.apache.http.pool.AbstractConnPool.closeExpired : $r6 = r0.<org.apache.http.pool.AbstractConnPool: java.util.LinkedList available>
org.apache.http.pool.AbstractConnPool.closeExpired : specialinvoke r0.<org.apache.http.pool.AbstractConnPool: void notifyPending(org.apache.http.pool.RouteSpecificPool)>(r3)
org.apache.http.pool.AbstractConnPool.closeExpired : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.pool.AbstractConnPool.closeExpired : $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.http.pool.AbstractConnPool.closeExpired : goto [?= return]
org.apache.http.pool.PoolEntry.getRoute : $r1 = r0.<org.apache.http.pool.PoolEntry: java.lang.Object route>
org.apache.http.pool.AbstractConnPool.getPool : $r5 = new org.apache.http.pool.AbstractConnPool$1
org.apache.http.pool.AbstractConnPool.getPool : return r2
org.apache.http.pool.AbstractConnPool.getPool : $r6 = r0.<org.apache.http.pool.AbstractConnPool: java.util.Map routeToPool>
org.apache.http.pool.AbstractConnPool.getPool : if r2 != null goto return r2
org.apache.http.pool.AbstractConnPool.getPool : $r3 = r0.<org.apache.http.pool.AbstractConnPool: java.util.Map routeToPool>
org.apache.http.pool.AbstractConnPool.lease : $r5 = new org.apache.http.pool.AbstractConnPool$2
org.apache.http.pool.AbstractConnPool.lease : $z0 = r0.<org.apache.http.pool.AbstractConnPool: boolean isShutDown>
org.apache.http.pool.AbstractConnPool.lease : if r1 != null goto $z0 = r0.<org.apache.http.pool.AbstractConnPool: boolean isShutDown>
org.apache.http.pool.PoolEntry.getConnection : $r1 = r0.<org.apache.http.pool.PoolEntry: java.lang.Object conn>
org.apache.http.pool.AbstractConnPool.getTotalStats : $r8 = r0.<org.apache.http.pool.AbstractConnPool: java.util.concurrent.locks.Lock lock>
org.apache.http.pool.AbstractConnPool.getTotalStats : $r4 = new org.apache.http.pool.PoolStats
org.apache.http.pool.AbstractConnPool.getTotalStats : $r3 = r0.<org.apache.http.pool.AbstractConnPool: java.util.concurrent.locks.Lock lock>
org.apache.http.pool.RouteSpecificPool.add : return r2
org.apache.http.pool.RouteSpecificPool.add : $r3 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.pool.RouteSpecificPool.add : r2 = virtualinvoke r0.<org.apache.http.pool.RouteSpecificPool: org.apache.http.pool.PoolEntry createEntry(java.lang.Object)>(r1)
org.apache.http.pool.TestConnPool$LocalConnPool.createEntry : $r3 = (java.lang.String) r1
org.apache.http.pool.TestConnPool$LocalConnPool.createEntry : $r3 = new org.apache.http.pool.TestConnPool$LocalPoolEntry
org.apache.http.pool.PoolStats.getAvailable : $i0 = r0.<org.apache.http.pool.PoolStats: int available>
org.apache.http.pool.RouteSpecificPool.getPendingCount : $r1 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList pending>
org.apache.http.pool.AbstractConnPool.access$000 : $r5 = specialinvoke r0.<org.apache.http.pool.AbstractConnPool: org.apache.http.pool.PoolEntry getPoolEntryBlocking(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.pool.PoolEntryFuture)>(r1, r2, l0, r3, r4)
org.apache.http.pool.PoolStats.getLeased : $i0 = r0.<org.apache.http.pool.PoolStats: int leased>
org.apache.http.pool.AbstractConnPool.getMaxPerRoute : $i1 = r0.<org.apache.http.pool.AbstractConnPool: int defaultMaxPerRoute>
org.apache.http.pool.AbstractConnPool.getMaxPerRoute : if r2 == null goto $i1 = r0.<org.apache.http.pool.AbstractConnPool: int defaultMaxPerRoute>
org.apache.http.pool.AbstractConnPool.getMaxPerRoute : $r3 = r0.<org.apache.http.pool.AbstractConnPool: java.util.Map maxPerRoute>
org.apache.http.pool.PoolEntry.isExpired : $l1 = r0.<org.apache.http.pool.PoolEntry: long expiry>
org.apache.http.pool.RouteSpecificPool.nextPending : $r1 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList pending>
org.apache.http.pool.RouteSpecificPool.getAllocatedCount : $r1 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.PoolEntry.updateExpiry : $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.pool.PoolEntry.updateExpiry : $b3 = l0 cmp 0L
org.apache.http.pool.PoolEntry.updateExpiry : $l6 = r0.<org.apache.http.pool.PoolEntry: long validUnit>
org.apache.http.pool.PoolEntry.updateExpiry : $l4 = r0.<org.apache.http.pool.PoolEntry: long updated>
org.apache.http.pool.PoolEntry.updateExpiry : if r1 != null goto $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.pool.RouteSpecificPool.getFree : return null
org.apache.http.pool.RouteSpecificPool.getFree : $r4 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.TestConnPool$LocalConnPool.createConnection : $r2 = (java.lang.String) r1
org.apache.http.pool.TestConnPool$LocalConnPool.createConnection : $r2 = r0.<org.apache.http.pool.TestConnPool$LocalConnPool: org.apache.http.pool.TestConnPool$HttpConnectionFactory connFactory>
org.apache.http.pool.RouteSpecificPool.getLeasedCount : $r1 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.pool.AbstractConnPool$1.createEntry : $r2 = r0.<org.apache.http.pool.AbstractConnPool$1: org.apache.http.pool.AbstractConnPool this$0>
org.apache.http.pool.RouteSpecificPool.getAvailableCount : $r1 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : r7 = null
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : $r23 = r0.<org.apache.http.pool.AbstractConnPool: java.util.LinkedList available>
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : r6 = specialinvoke r0.<org.apache.http.pool.AbstractConnPool: org.apache.http.pool.RouteSpecificPool getPool(java.lang.Object)>(r1)
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : r7 = virtualinvoke r6.<org.apache.http.pool.RouteSpecificPool: org.apache.http.pool.PoolEntry getFree(java.lang.Object)>(r2)
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : if r7 == null goto i9 = specialinvoke r0.<org.apache.http.pool.AbstractConnPool: int getMaxPerRoute(java.lang.Object)>(r1)
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : $r30 = r0.<org.apache.http.pool.AbstractConnPool: java.util.Set leased>
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : if r7 != null goto $l8 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : i9 = specialinvoke r0.<org.apache.http.pool.AbstractConnPool: int getMaxPerRoute(java.lang.Object)>(r1)
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : goto [?= (branch)]
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : $r15 = r0.<org.apache.http.pool.AbstractConnPool: java.util.concurrent.locks.Lock lock>
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : if r7 != null goto $r37 = new java.util.concurrent.TimeoutException
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : r29 = virtualinvoke r6.<org.apache.http.pool.RouteSpecificPool: org.apache.http.pool.PoolEntry add(java.lang.Object)>(r28)
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : r31 = r29
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : $r14 = new java.util.Date
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : $i10 = virtualinvoke r6.<org.apache.http.pool.RouteSpecificPool: int getAllocatedCount()>()
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : $z0 = r0.<org.apache.http.pool.AbstractConnPool: boolean isShutDown>
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : $b4 = l0 cmp 0L
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : $i13 = virtualinvoke r6.<org.apache.http.pool.RouteSpecificPool: int getAllocatedCount()>()
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : if i17 <= 0 goto z10 = 0
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : $i18 = i17 - 1
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : $r22 = r0.<org.apache.http.pool.AbstractConnPool: java.util.Set leased>
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : $i15 = r0.<org.apache.http.pool.AbstractConnPool: int maxTotal>
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : r5 = null
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : if i1 <= 0 goto $i13 = virtualinvoke r6.<org.apache.http.pool.RouteSpecificPool: int getAllocatedCount()>()
org.apache.http.pool.AbstractConnPool.getPoolEntryBlocking : r28 = virtualinvoke r0.<org.apache.http.pool.AbstractConnPool: java.lang.Object createConnection(java.lang.Object)>(r1)
org.apache.http.pool.RouteSpecificPool.remove : $r3 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.RouteSpecificPool.remove : if r1 != null goto $r3 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.RouteSpecificPool.remove : return 1
org.apache.http.pool.PoolEntryFuture.get : r0.<org.apache.http.pool.PoolEntryFuture: boolean completed> = 1
org.apache.http.pool.PoolEntryFuture.get : $r4 = r0.<org.apache.http.pool.PoolEntryFuture: java.util.concurrent.locks.Lock lock>
org.apache.http.pool.PoolEntryFuture.get : $r6 = virtualinvoke r0.<org.apache.http.pool.PoolEntryFuture: java.lang.Object getPoolEntry(long,java.util.concurrent.TimeUnit)>(l0, r1)
org.apache.http.pool.PoolEntryFuture.get : r7 = r0.<org.apache.http.pool.PoolEntryFuture: java.lang.Object result>
org.apache.http.pool.PoolEntryFuture.get : $z0 = r0.<org.apache.http.pool.PoolEntryFuture: boolean completed>
