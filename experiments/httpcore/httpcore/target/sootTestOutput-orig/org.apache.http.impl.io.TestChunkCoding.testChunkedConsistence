org.apache.http.impl.io.ChunkedOutputStream.finish : r0.<org.apache.http.impl.io.ChunkedOutputStream: boolean wroteLastChunk> = 1
org.apache.http.impl.io.ChunkedOutputStream.finish : $z0 = r0.<org.apache.http.impl.io.ChunkedOutputStream: boolean wroteLastChunk>
org.apache.http.impl.io.ChunkedOutputStream.finish : virtualinvoke r0.<org.apache.http.impl.io.ChunkedOutputStream: void flushCache()>()
org.apache.http.impl.io.ChunkedOutputStream.finish : virtualinvoke r0.<org.apache.http.impl.io.ChunkedOutputStream: void writeClosingChunk()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.init : if i0 > 0 goto (branch)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r10 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.nio.charset.Charset charset>
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r7 = new org.apache.http.util.ByteArrayBuffer
org.apache.http.impl.io.AbstractSessionInputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos> = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen> = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $i1 = interfaceinvoke r2.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.connection.max-line-length", -1)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : if r1 != null goto (branch)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : if r2 != null goto r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.io.InputStream instream> = r1
org.apache.http.impl.io.AbstractSessionInputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.io.InputStream instream> = r1
org.apache.http.impl.io.AbstractSessionInputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.nio.charset.CharsetDecoder decoder> = null
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $i2 = interfaceinvoke r2.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.connection.min-chunk-limit", 512)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r8 = staticinvoke <org.apache.http.params.HttpProtocolParams: java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams)>(r2)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r12 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r6 = newarray (byte)[i0]
org.apache.http.util.ByteArrayBuffer.byteAt : $r1 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : return r12
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : $i17 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : r1 = <org.apache.http.message.BasicLineParser: org.apache.http.message.BasicLineParser DEFAULT>
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if r1 != null goto $r3 = new java.util.ArrayList
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : i2 = interfaceinvoke r0.<org.apache.http.io.SessionInputBuffer: int readLine(org.apache.http.util.CharArrayBuffer)>(r3)
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if r2 != null goto r3 = null
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : r4 = null
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if r1 != null goto (branch)
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if r3 != null goto virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: void clear()>()
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : r3 = null
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : goto [?= $i17 = interfaceinvoke r2.<java.util.List: int size()>()]
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : $r3 = new java.util.ArrayList
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if i2 == -1 goto $i17 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : $r4 = staticinvoke <org.apache.http.impl.io.AbstractMessageParser: org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser,java.util.List)>(r0, i0, i1, r1, r2)
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : i18 = 0
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : $r9 = new org.apache.http.util.CharArrayBuffer
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if r0 != null goto (branch)
org.apache.http.impl.io.HttpTransportMetricsImpl.incrementBytesTransferred : $l1 = r0.<org.apache.http.impl.io.HttpTransportMetricsImpl: long bytesTransferred>
org.apache.http.util.EncodingUtils.getBytes : if r1 == null goto $r4 = new java.lang.IllegalArgumentException
org.apache.http.util.EncodingUtils.getBytes : $r5 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>(r1)
org.apache.http.util.EncodingUtils.getBytes : if r0 != null goto (branch)
org.apache.http.impl.io.AbstractSessionInputBuffer.read : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z1 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>()", "org.apache.http.impl.io.AbstractSessionInputBuffer.read")]
org.apache.http.impl.io.AbstractSessionInputBuffer.read : $z0 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.read : $i13 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen>
org.apache.http.impl.io.AbstractSessionInputBuffer.read : $i7 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.impl.io.AbstractSessionInputBuffer.read : $z1 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.read : $i18 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.impl.io.AbstractSessionInputBuffer.read : i12 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int fillBuffer()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.read : $r6 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.read : $r2 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.read : if i12 != -1 goto (branch)
org.apache.http.impl.io.AbstractSessionInputBuffer.read : $i9 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int minChunkLimit>
org.apache.http.impl.io.AbstractSessionInputBuffer.read : if r1 != null goto $z0 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.read : return i16
org.apache.http.impl.io.AbstractSessionInputBuffer.read : $i3 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen>
org.apache.http.impl.io.AbstractSessionInputBuffer.read : return i2
org.apache.http.impl.io.ChunkedInputStream.parseTrailerHeaders : goto [?= return]
org.apache.http.impl.io.ChunkedInputStream.parseTrailerHeaders : $r3 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.io.SessionInputBuffer in>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : if i2 >= 0 goto $r12 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : lookupswitch(i0) {     case 1: goto $r7 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>;     case 3: goto $r2 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>;     default: goto $r16 = new java.lang.IllegalStateException; }
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r5 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : i0 = r0.<org.apache.http.impl.io.ChunkedInputStream: int state>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r7 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r2 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : if i1 != -1 goto $r5 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : if i3 != -1 goto $r10 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r11 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r12 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r3 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.io.SessionInputBuffer in>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r10 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : r0.<org.apache.http.impl.io.ChunkedInputStream: int state> = 1
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r8 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.io.SessionInputBuffer in>
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : if r0 != null goto $r3 = interfaceinvoke r0.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.element-charset")
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : $r3 = interfaceinvoke r0.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.element-charset")
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : if r1 != null goto return r1
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : r1 = "US-ASCII"
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : return r1
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : $r9 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : if i0 <= 0 goto $z0 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean ascii>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : return i0
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : $r6 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : $z0 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean ascii>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : $r4 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : $r5 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : $r3 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : i0 = i0 + -1
org.apache.http.protocol.HTTP.isWhitespace : if c0 == 32 goto $z0 = 1
org.apache.http.util.ByteArrayBuffer.clear : r0.<org.apache.http.util.ByteArrayBuffer: int len> = 0
org.apache.http.util.ByteArrayBuffer.isFull : $i0 = r0.<org.apache.http.util.ByteArrayBuffer: int len>
org.apache.http.impl.io.ChunkedOutputStream.write : $i0 = lengthof r1
org.apache.http.impl.io.ChunkedOutputStream.write : $r4 = r0.<org.apache.http.impl.io.ChunkedOutputStream: byte[] cache>
org.apache.http.impl.io.ChunkedOutputStream.write : $z0 = r0.<org.apache.http.impl.io.ChunkedOutputStream: boolean closed>
org.apache.http.impl.io.ChunkedOutputStream.write : $i6 = r0.<org.apache.http.impl.io.ChunkedOutputStream: int cachePosition>
org.apache.http.impl.io.ChunkedOutputStream.write : $r3 = r0.<org.apache.http.impl.io.ChunkedOutputStream: byte[] cache>
org.apache.http.util.ByteArrayBuffer.append : r0.<org.apache.http.util.ByteArrayBuffer: int len> = i2
org.apache.http.util.ByteArrayBuffer.append : r0.<org.apache.http.util.ByteArrayBuffer: int len> = i1
org.apache.http.util.ByteArrayBuffer.append : $r1 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.util.ByteArrayBuffer.append : $i2 = r0.<org.apache.http.util.ByteArrayBuffer: int len>
org.apache.http.util.ByteArrayBuffer.append : if i1 != 0 goto $i8 = r0.<org.apache.http.util.ByteArrayBuffer: int len>
org.apache.http.util.ByteArrayBuffer.append : $i8 = r0.<org.apache.http.util.ByteArrayBuffer: int len>
org.apache.http.util.ByteArrayBuffer.append : if r1 != null goto (branch)
org.apache.http.util.ByteArrayBuffer.append : if i0 < 0 goto $r3 = new java.lang.IndexOutOfBoundsException
org.apache.http.util.ByteArrayBuffer.append : $r11 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.util.ByteArrayBuffer.append : $r2 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.util.ByteArrayBuffer.append : $r12 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.createTransportMetrics : $r1 = new org.apache.http.impl.io.HttpTransportMetricsImpl
org.apache.http.impl.io.ChunkedOutputStream.close : $r1 = r0.<org.apache.http.impl.io.ChunkedOutputStream: org.apache.http.io.SessionOutputBuffer out>
org.apache.http.impl.io.ChunkedOutputStream.close : $z0 = r0.<org.apache.http.impl.io.ChunkedOutputStream: boolean closed>
org.apache.http.impl.io.ChunkedOutputStream.close : virtualinvoke r0.<org.apache.http.impl.io.ChunkedOutputStream: void finish()>()
org.apache.http.impl.io.ChunkedOutputStream.close : r0.<org.apache.http.impl.io.ChunkedOutputStream: boolean closed> = 1
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen> = i0
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $r3 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $r4 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.io.InputStream instream>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $i3 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : if i0 <= 0 goto r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos> = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $r6 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.impl.io.HttpTransportMetricsImpl metrics>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos> = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : return i8
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : if i8 != -1 goto $i9 = i1 + i8
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $i9 = i1 + i8
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $i4 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : i1 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen>
org.apache.http.util.CharArrayBuffer.length : $i0 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.impl.io.AbstractSessionOutputBuffer.createTransportMetrics : $r1 = new org.apache.http.impl.io.HttpTransportMetricsImpl
org.apache.http.util.ByteArrayBuffer.isEmpty : $i0 = r0.<org.apache.http.util.ByteArrayBuffer: int len>
org.apache.http.impl.io.AbstractSessionInputBuffer.hasBufferedData : $i0 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if i1 == -1 goto $z2 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $r4 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i8 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $z2 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if i0 != -1 goto $i16 = specialinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int lineFromLineBuffer(org.apache.http.util.CharArrayBuffer)>(r1)
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i13 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int maxLineLen>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i12 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if r1 != null goto i0 = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if z0 == 0 goto (branch)
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if z0 == 0 goto (branch)", "org.apache.http.impl.io.AbstractSessionInputBuffer.readLine")]
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i7 = i1 + 1
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $r6 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : z0 = 1
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : z0 = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : i1 = specialinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int locateLF()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i4 = i1 + 1
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : i0 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int fillBuffer()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : i0 = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if i0 != -1 goto $i13 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int maxLineLen>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i16 = specialinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int lineFromLineBuffer(org.apache.http.util.CharArrayBuffer)>(r1)
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i3 = specialinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int lineFromReadBuffer(org.apache.http.util.CharArrayBuffer,int)>(r1, i1)
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : goto [?= $i13 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int maxLineLen>]
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $r3 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionOutputBuffer.flush : $r1 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: java.io.OutputStream outstream>
org.apache.http.impl.io.AbstractSessionOutputBuffer.flush : virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: void flushBuffer()>()
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : $r11 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics()>()
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : if i0 > 0 goto (branch)
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : if r2 != null goto r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: java.io.OutputStream outstream> = r1
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : $i1 = interfaceinvoke r2.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.connection.min-chunk-limit", 512)
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : $r6 = new org.apache.http.util.ByteArrayBuffer
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : if r1 != null goto (branch)
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: java.nio.charset.CharsetEncoder encoder> = null
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : $r9 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: java.nio.charset.Charset charset>
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: java.io.OutputStream outstream> = r1
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : $r7 = staticinvoke <org.apache.http.params.HttpProtocolParams: java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams)>(r2)
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : $i0 = lengthof r1
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : $i3 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: int minChunkLimit>
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : if r1 != null goto $i0 = lengthof r1
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : $r2 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.util.ByteArrayBuffer buffer>
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : $r4 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.impl.io.HttpTransportMetricsImpl metrics>
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : $r3 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: java.io.OutputStream outstream>
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: void flushBuffer()>()
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : $r7 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.util.ByteArrayBuffer buffer>
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : if i1 <= i2 goto $r7 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.util.ByteArrayBuffer buffer>
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : $r5 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.util.ByteArrayBuffer buffer>
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : if r1 != null goto $i3 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: int minChunkLimit>
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : $r1 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.util.ByteArrayBuffer buffer>
org.apache.http.util.ByteArrayBuffer.capacity : $r1 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.util.CharArrayBuffer.indexOf : return -1
org.apache.http.util.CharArrayBuffer.indexOf : i3 = i1
org.apache.http.util.CharArrayBuffer.indexOf : if i1 >= 0 goto $i4 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.indexOf : $i1 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.indexOf : $i4 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.indexOf : $r1 = r0.<org.apache.http.util.CharArrayBuffer: char[] buffer>
org.apache.http.util.CharArrayBuffer.indexOf : if i1 <= i2 goto i3 = i1
org.apache.http.impl.io.ChunkedOutputStream.writeClosingChunk : $r1 = r0.<org.apache.http.impl.io.ChunkedOutputStream: org.apache.http.io.SessionOutputBuffer out>
org.apache.http.impl.io.ChunkedOutputStream.writeClosingChunk : $r2 = r0.<org.apache.http.impl.io.ChunkedOutputStream: org.apache.http.io.SessionOutputBuffer out>
org.apache.http.impl.io.ChunkedInputStream.read : $i0 = lengthof r1
org.apache.http.impl.io.ChunkedInputStream.read : $i10 = r0.<org.apache.http.impl.io.ChunkedInputStream: int pos>
org.apache.http.impl.io.ChunkedInputStream.read : $z1 = r0.<org.apache.http.impl.io.ChunkedInputStream: boolean eof>
org.apache.http.impl.io.ChunkedInputStream.read : $z2 = r0.<org.apache.http.impl.io.ChunkedInputStream: boolean eof>
org.apache.http.impl.io.ChunkedInputStream.read : if i2 == -1 goto r0.<org.apache.http.impl.io.ChunkedInputStream: boolean eof> = 1
org.apache.http.impl.io.ChunkedInputStream.read : $i3 = r0.<org.apache.http.impl.io.ChunkedInputStream: int state>
org.apache.http.impl.io.ChunkedInputStream.read : $z0 = r0.<org.apache.http.impl.io.ChunkedInputStream: boolean closed>
org.apache.http.impl.io.ChunkedInputStream.read : return -1
org.apache.http.impl.io.ChunkedInputStream.read : r0.<org.apache.http.impl.io.ChunkedInputStream: int state> = 3
org.apache.http.impl.io.ChunkedInputStream.read : $i4 = r0.<org.apache.http.impl.io.ChunkedInputStream: int chunkSize>
org.apache.http.impl.io.ChunkedInputStream.read : $r3 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.io.SessionInputBuffer in>
org.apache.http.impl.io.ChunkedInputStream.read : $i8 = r0.<org.apache.http.impl.io.ChunkedInputStream: int pos>
org.apache.http.impl.io.ChunkedInputStream.read : specialinvoke r0.<org.apache.http.impl.io.ChunkedInputStream: void nextChunk()>()
org.apache.http.impl.io.ChunkedInputStream.read : return i2
org.apache.http.util.ByteArrayBuffer.length : $i0 = r0.<org.apache.http.util.ByteArrayBuffer: int len>
org.apache.http.impl.io.ChunkedOutputStream.flushCache : $r1 = r0.<org.apache.http.impl.io.ChunkedOutputStream: org.apache.http.io.SessionOutputBuffer out>
org.apache.http.impl.io.ChunkedOutputStream.flushCache : $i0 = r0.<org.apache.http.impl.io.ChunkedOutputStream: int cachePosition>
org.apache.http.impl.io.ChunkedOutputStream.flushCache : r0.<org.apache.http.impl.io.ChunkedOutputStream: int cachePosition> = 0
org.apache.http.impl.io.ChunkedOutputStream.flushCache : $r5 = r0.<org.apache.http.impl.io.ChunkedOutputStream: org.apache.http.io.SessionOutputBuffer out>
org.apache.http.impl.io.ChunkedOutputStream.flushCache : $r3 = r0.<org.apache.http.impl.io.ChunkedOutputStream: org.apache.http.io.SessionOutputBuffer out>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : $r4 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : $z0 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean ascii>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : if i0 <= 0 goto i2 = i0 - i1
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : $i3 = i0 + 1
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : i1 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : i2 = i0 - i1
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : i0 = i0 + -1
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : return i2
org.apache.http.util.EncodingUtils.getString : $i0 = lengthof r0
org.apache.http.util.EncodingUtils.getString : if r1 == null goto $r4 = new java.lang.IllegalArgumentException
org.apache.http.util.EncodingUtils.getString : if r0 != null goto $i0 = lengthof r0
org.apache.http.util.EncodingUtils.getString : $r5 = new java.lang.String
org.apache.http.util.EncodingUtils.getString : if r0 != null goto (branch)
org.apache.http.util.CharArrayBuffer.isEmpty : $i0 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.clear : r0.<org.apache.http.util.CharArrayBuffer: int len> = 0
org.apache.http.util.CharArrayBuffer.substringTrimmed : $i2 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.substringTrimmed : $r22 = new java.lang.String
org.apache.http.util.CharArrayBuffer.substringTrimmed : if i0 >= 0 goto $i2 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.substringTrimmed : if i0 >= i1 goto (branch)
org.apache.http.util.CharArrayBuffer.substringTrimmed : if i0 <= i1 goto (branch)
org.apache.http.util.CharArrayBuffer.substringTrimmed : if i1 <= i0 goto $r22 = new java.lang.String
org.apache.http.util.ByteArrayBuffer.buffer : $r1 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.params.BasicHttpParams.getParameter : $r2 = r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters>
org.apache.http.impl.io.ChunkedOutputStream.flush : $r1 = r0.<org.apache.http.impl.io.ChunkedOutputStream: org.apache.http.io.SessionOutputBuffer out>
org.apache.http.impl.io.ChunkedOutputStream.flush : virtualinvoke r0.<org.apache.http.impl.io.ChunkedOutputStream: void flushCache()>()
org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer : $r2 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: java.io.OutputStream outstream>
org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer : $r6 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.impl.io.HttpTransportMetricsImpl metrics>
org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer : $r5 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.util.ByteArrayBuffer buffer>
org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer : $r1 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.util.ByteArrayBuffer buffer>
org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer : if i0 <= 0 goto return
org.apache.http.util.CharArrayBuffer.append : $r12 = r0.<org.apache.http.util.CharArrayBuffer: char[] buffer>
org.apache.http.util.CharArrayBuffer.append : $r11 = r0.<org.apache.http.util.CharArrayBuffer: char[] buffer>
org.apache.http.util.CharArrayBuffer.append : if r1 != null goto $r2 = virtualinvoke r1.<org.apache.http.util.ByteArrayBuffer: byte[] buffer()>()
org.apache.http.util.CharArrayBuffer.append : i3 = i2 + i1
org.apache.http.util.CharArrayBuffer.append : i2 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.append : r0.<org.apache.http.util.CharArrayBuffer: int len> = i3
org.apache.http.util.CharArrayBuffer.append : if r1 != null goto (branch)
org.apache.http.util.CharArrayBuffer.append : i4 = i0
org.apache.http.util.CharArrayBuffer.append : $r2 = virtualinvoke r1.<org.apache.http.util.ByteArrayBuffer: byte[] buffer()>()
org.apache.http.util.CharArrayBuffer.append : if i0 < 0 goto $r3 = new java.lang.IndexOutOfBoundsException
org.apache.http.util.CharArrayBuffer.append : if i1 != 0 goto i2 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.impl.io.AbstractSessionOutputBuffer.writeLine : $i1 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.http.impl.io.AbstractSessionOutputBuffer.writeLine : $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0)
org.apache.http.impl.io.AbstractSessionOutputBuffer.writeLine : $r3 = <org.apache.http.impl.io.AbstractSessionOutputBuffer: byte[] CRLF>
org.apache.http.impl.io.AbstractSessionOutputBuffer.writeLine : i0 = 0
org.apache.http.impl.io.AbstractSessionOutputBuffer.writeLine : if r1 != null goto $i1 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.http.impl.io.AbstractSessionOutputBuffer.writeLine : $z0 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: boolean ascii>
org.apache.http.params.AbstractHttpParams.getIntParameter : return i0
org.apache.http.params.AbstractHttpParams.getIntParameter : r2 = virtualinvoke r0.<org.apache.http.params.AbstractHttpParams: java.lang.Object getParameter(java.lang.String)>(r1)
org.apache.http.params.AbstractHttpParams.getIntParameter : if r2 != null goto $r3 = (java.lang.Integer) r2
org.apache.http.impl.io.AbstractSessionInputBuffer.locateLF : return -1
org.apache.http.impl.io.AbstractSessionInputBuffer.locateLF : return i0
org.apache.http.impl.io.AbstractSessionInputBuffer.locateLF : $r1 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.locateLF : i0 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.impl.io.ChunkedInputStream.nextChunk : r0.<org.apache.http.impl.io.ChunkedInputStream: int pos> = 0
org.apache.http.impl.io.ChunkedInputStream.nextChunk : specialinvoke r0.<org.apache.http.impl.io.ChunkedInputStream: void parseTrailerHeaders()>()
org.apache.http.impl.io.ChunkedInputStream.nextChunk : $i1 = r0.<org.apache.http.impl.io.ChunkedInputStream: int chunkSize>
org.apache.http.impl.io.ChunkedInputStream.nextChunk : r0.<org.apache.http.impl.io.ChunkedInputStream: boolean eof> = 1
org.apache.http.impl.io.ChunkedInputStream.nextChunk : $i0 = specialinvoke r0.<org.apache.http.impl.io.ChunkedInputStream: int getChunkSize()>()
org.apache.http.impl.io.ChunkedInputStream.nextChunk : $i2 = r0.<org.apache.http.impl.io.ChunkedInputStream: int chunkSize>
org.apache.http.impl.io.ChunkedInputStream.nextChunk : r0.<org.apache.http.impl.io.ChunkedInputStream: int state> = 2
