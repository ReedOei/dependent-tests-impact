org.apache.http.ProtocolVersion.getMajor : $i0 = r0.<org.apache.http.ProtocolVersion: int major>
org.apache.http.message.BasicListHeaderIterator.hasNext : $i0 = r0.<org.apache.http.message.BasicListHeaderIterator: int currentIndex>
org.apache.http.ProtocolVersion.lessEquals : $z0 = virtualinvoke r0.<org.apache.http.ProtocolVersion: boolean isComparable(org.apache.http.ProtocolVersion)>(r1)
org.apache.http.message.BasicHeader.getName : $r1 = r0.<org.apache.http.message.BasicHeader: java.lang.String name>
org.apache.http.message.HeaderGroup.iterator : $r2 = new org.apache.http.message.BasicListHeaderIterator
org.apache.http.message.HeaderGroup.getFirstHeader : return r2
org.apache.http.message.HeaderGroup.getFirstHeader : i0 = 0
org.apache.http.message.HeaderGroup.getFirstHeader : $r6 = interfaceinvoke r2.<org.apache.http.Header: java.lang.String getName()>()
org.apache.http.message.HeaderGroup.getFirstHeader : $r4 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>
org.apache.http.message.BasicHeader.getValue : $r1 = r0.<org.apache.http.message.BasicHeader: java.lang.String value>
org.apache.http.message.BasicStatusLine.getProtocolVersion : $r1 = r0.<org.apache.http.message.BasicStatusLine: org.apache.http.ProtocolVersion protoVersion>
org.apache.http.message.BasicHttpResponse.getStatusLine : $r1 = r0.<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine statusline>
org.apache.http.message.AbstractHttpMessage.headerIterator : $r2 = r0.<org.apache.http.message.AbstractHttpMessage: org.apache.http.message.HeaderGroup headergroup>
org.apache.http.message.HeaderGroup.addHeader : $r2 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>
org.apache.http.message.HeaderGroup.addHeader : if r1 != null goto $r2 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>
org.apache.http.impl.DefaultConnectionReuseStrategy.keepAlive : $z2 = interfaceinvoke r16.<org.apache.http.HeaderIterator: boolean hasNext()>()
org.apache.http.impl.DefaultConnectionReuseStrategy.keepAlive : r16 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.HeaderIterator headerIterator(java.lang.String)>("Proxy-Connection")
org.apache.http.impl.DefaultConnectionReuseStrategy.keepAlive : $r10 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>()
org.apache.http.impl.DefaultConnectionReuseStrategy.keepAlive : r16 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.HeaderIterator headerIterator(java.lang.String)>("Connection")
org.apache.http.impl.DefaultConnectionReuseStrategy.keepAlive : $r22 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_0>
org.apache.http.impl.DefaultConnectionReuseStrategy.keepAlive : $r11 = "chunked"
org.apache.http.impl.DefaultConnectionReuseStrategy.keepAlive : r4 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.Header getFirstHeader(java.lang.String)>("Transfer-Encoding")
org.apache.http.impl.DefaultConnectionReuseStrategy.keepAlive : $z3 = interfaceinvoke r16.<org.apache.http.HeaderIterator: boolean hasNext()>()
org.apache.http.impl.DefaultConnectionReuseStrategy.keepAlive : if r4 == null goto r5 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.Header[] getHeaders(java.lang.String)>("Content-Length")
org.apache.http.impl.DefaultConnectionReuseStrategy.keepAlive : if r2 != null goto $r10 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>()
org.apache.http.impl.DefaultConnectionReuseStrategy.keepAlive : if r1 != null goto (branch)
org.apache.http.ProtocolVersion.isComparable : if r1 == null goto $z1 = 0
org.apache.http.ProtocolVersion.getMinor : $i0 = r0.<org.apache.http.ProtocolVersion: int minor>
org.apache.http.message.AbstractHttpMessage.getFirstHeader : $r2 = r0.<org.apache.http.message.AbstractHttpMessage: org.apache.http.message.HeaderGroup headergroup>
org.apache.http.ProtocolVersion.compareToVersion : return i0
org.apache.http.ProtocolVersion.compareToVersion : $i3 = virtualinvoke r0.<org.apache.http.ProtocolVersion: int getMinor()>()
org.apache.http.ProtocolVersion.compareToVersion : if r1 != null goto $r3 = r0.<org.apache.http.ProtocolVersion: java.lang.String protocol>
org.apache.http.ProtocolVersion.compareToVersion : if i0 != 0 goto return i0
org.apache.http.ProtocolVersion.compareToVersion : $r3 = r0.<org.apache.http.ProtocolVersion: java.lang.String protocol>
org.apache.http.ProtocolVersion.compareToVersion : $i1 = virtualinvoke r0.<org.apache.http.ProtocolVersion: int getMajor()>()
org.apache.http.message.BasicListHeaderIterator.filterHeader : $r6 = r0.<org.apache.http.message.BasicListHeaderIterator: java.lang.String headerName>
org.apache.http.message.BasicListHeaderIterator.filterHeader : $r3 = r0.<org.apache.http.message.BasicListHeaderIterator: java.util.List allHeaders>
org.apache.http.message.BasicListHeaderIterator.filterHeader : $r2 = r0.<org.apache.http.message.BasicListHeaderIterator: java.lang.String headerName>
org.apache.http.message.BasicListHeaderIterator.findNext : z0 = virtualinvoke r0.<org.apache.http.message.BasicListHeaderIterator: boolean filterHeader(int)>(i0)
org.apache.http.message.BasicListHeaderIterator.findNext : if i0 >= -1 goto $r1 = r0.<org.apache.http.message.BasicListHeaderIterator: java.util.List allHeaders>
org.apache.http.message.BasicListHeaderIterator.findNext : z0 = 0
org.apache.http.message.BasicListHeaderIterator.findNext : i0 = i0 + 1
org.apache.http.message.BasicListHeaderIterator.findNext : $r1 = r0.<org.apache.http.message.BasicListHeaderIterator: java.util.List allHeaders>
org.apache.http.message.BasicListHeaderIterator.findNext : if z0 == 0 goto $i3 = -1
org.apache.http.message.BasicListHeaderIterator.findNext : if z0 != 0 goto (branch)
org.apache.http.message.AbstractHttpMessage.addHeader : $r4 = r0.<org.apache.http.message.AbstractHttpMessage: org.apache.http.message.HeaderGroup headergroup>
org.apache.http.message.AbstractHttpMessage.addHeader : if r1 != null goto $r4 = r0.<org.apache.http.message.AbstractHttpMessage: org.apache.http.message.HeaderGroup headergroup>
