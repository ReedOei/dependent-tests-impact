org.apache.http.pool.RouteSpecificPool.free : if z0 == 0 goto return
org.apache.http.pool.RouteSpecificPool.free : if r1 != null goto $r3 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.pool.RouteSpecificPool.free : $r10 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.RouteSpecificPool.free : $r3 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.pool.RouteSpecificPool.free : if z1 != 0 goto (branch)
org.apache.http.pool.TestRouteSpecificPool$LocalRoutePool.closeEntry : $r4 = virtualinvoke r1.<org.apache.http.pool.TestRouteSpecificPool$LocalPoolEntry: java.lang.Object getConnection()>()
org.apache.http.pool.TestRouteSpecificPool$LocalRoutePool.closeEntry : goto [?= return]
org.apache.http.pool.TestRouteSpecificPool$LocalRoutePool.closeEntry : $r2 = (org.apache.http.pool.TestRouteSpecificPool$LocalPoolEntry) r1
org.apache.http.pool.TestRouteSpecificPool$LocalRoutePool.closeEntry : interfaceinvoke r2.<org.apache.http.HttpConnection: void close()>()
org.apache.http.pool.TestRouteSpecificPool$LocalRoutePool.createEntry : $r2 = new org.apache.http.pool.TestRouteSpecificPool$LocalPoolEntry
org.apache.http.pool.TestRouteSpecificPool$LocalRoutePool.createEntry : $r2 = (org.apache.http.HttpConnection) r1
org.apache.http.pool.RouteSpecificPool.getRoute : $r1 = r0.<org.apache.http.pool.RouteSpecificPool: java.lang.Object route>
org.apache.http.pool.PoolEntry.getConnection : $r1 = r0.<org.apache.http.pool.PoolEntry: java.lang.Object conn>
org.apache.http.pool.RouteSpecificPool.shutdown : goto [?= $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.http.pool.RouteSpecificPool.shutdown : $r11 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.pool.RouteSpecificPool.shutdown : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.http.pool.RouteSpecificPool.shutdown : $r6 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.RouteSpecificPool.shutdown : $r10 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.RouteSpecificPool.shutdown : $r5 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList pending>
org.apache.http.pool.RouteSpecificPool.shutdown : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.http.pool.RouteSpecificPool.shutdown : $r3 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList pending>
org.apache.http.pool.RouteSpecificPool.shutdown : virtualinvoke r0.<org.apache.http.pool.RouteSpecificPool: void closeEntry(org.apache.http.pool.PoolEntry)>(r14)
org.apache.http.pool.RouteSpecificPool.shutdown : $r15 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.pool.RouteSpecificPool.shutdown : virtualinvoke r2.<org.apache.http.pool.PoolEntryFuture: boolean cancel(boolean)>(1)
org.apache.http.pool.RouteSpecificPool.shutdown : virtualinvoke r0.<org.apache.http.pool.RouteSpecificPool: void closeEntry(org.apache.http.pool.PoolEntry)>(r9)
org.apache.http.pool.RouteSpecificPool.add : return r2
org.apache.http.pool.RouteSpecificPool.add : $r3 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.pool.RouteSpecificPool.add : r2 = virtualinvoke r0.<org.apache.http.pool.RouteSpecificPool: org.apache.http.pool.PoolEntry createEntry(java.lang.Object)>(r1)
org.apache.http.pool.RouteSpecificPool.queue : if r1 != null goto $r2 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList pending>
org.apache.http.pool.RouteSpecificPool.queue : $r2 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList pending>
org.apache.http.pool.RouteSpecificPool.getPendingCount : $r1 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList pending>
org.apache.http.pool.RouteSpecificPool.getAllocatedCount : $r1 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.RouteSpecificPool.getLeasedCount : $r1 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.pool.RouteSpecificPool.getAvailableCount : $r1 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
