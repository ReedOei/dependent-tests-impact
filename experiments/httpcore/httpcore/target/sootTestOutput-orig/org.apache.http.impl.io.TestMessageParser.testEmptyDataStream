org.apache.http.impl.io.AbstractSessionInputBuffer.init : if i0 > 0 goto (branch)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r10 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.nio.charset.Charset charset>
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r7 = new org.apache.http.util.ByteArrayBuffer
org.apache.http.impl.io.AbstractSessionInputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos> = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen> = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $i1 = interfaceinvoke r2.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.connection.max-line-length", -1)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : if r1 != null goto (branch)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : if r2 != null goto r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.io.InputStream instream> = r1
org.apache.http.impl.io.AbstractSessionInputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.io.InputStream instream> = r1
org.apache.http.impl.io.AbstractSessionInputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.nio.charset.CharsetDecoder decoder> = null
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $i2 = interfaceinvoke r2.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.connection.min-chunk-limit", 512)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r8 = staticinvoke <org.apache.http.params.HttpProtocolParams: java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams)>(r2)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r12 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r6 = newarray (byte)[i0]
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : return r12
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : $i17 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : r1 = <org.apache.http.message.BasicLineParser: org.apache.http.message.BasicLineParser DEFAULT>
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if r1 != null goto $r3 = new java.util.ArrayList
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : i2 = interfaceinvoke r0.<org.apache.http.io.SessionInputBuffer: int readLine(org.apache.http.util.CharArrayBuffer)>(r3)
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if r2 != null goto r3 = null
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : r4 = null
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if r1 != null goto (branch)
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if r3 != null goto virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: void clear()>()
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : r3 = null
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : $r3 = new java.util.ArrayList
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if i2 == -1 goto $i17 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : $r4 = staticinvoke <org.apache.http.impl.io.AbstractMessageParser: org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser,java.util.List)>(r0, i0, i1, r1, r2)
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : i18 = 0
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : $r9 = new org.apache.http.util.CharArrayBuffer
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if r0 != null goto (branch)
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : if r0 != null goto $r3 = interfaceinvoke r0.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.element-charset")
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : $r3 = interfaceinvoke r0.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.element-charset")
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : if r1 != null goto return r1
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : r1 = "US-ASCII"
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : return r1
org.apache.http.impl.io.AbstractSessionInputBuffer.createTransportMetrics : $r1 = new org.apache.http.impl.io.HttpTransportMetricsImpl
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : return -1
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $r3 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $r4 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.io.InputStream instream>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $i3 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : if i8 != -1 goto $i9 = i1 + i8
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : i1 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen>
org.apache.http.util.ByteArrayBuffer.isEmpty : $i0 = r0.<org.apache.http.util.ByteArrayBuffer: int len>
org.apache.http.impl.io.AbstractSessionInputBuffer.hasBufferedData : $i0 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if i1 == -1 goto $z2 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $z2 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if i0 != -1 goto $i16 = specialinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int lineFromLineBuffer(org.apache.http.util.CharArrayBuffer)>(r1)
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i13 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int maxLineLen>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if r1 != null goto i0 = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : return -1
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if z0 == 0 goto (branch)
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if z0 == 0 goto (branch)", "org.apache.http.impl.io.AbstractSessionInputBuffer.readLine")]
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : z0 = 1
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : i1 = specialinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int locateLF()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : z0 = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : i0 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int fillBuffer()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : i0 = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if i0 != -1 goto $i13 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int maxLineLen>
org.apache.http.params.BasicHttpParams.getParameter : $r2 = r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters>
org.apache.http.params.AbstractHttpParams.getIntParameter : return i0
org.apache.http.params.AbstractHttpParams.getIntParameter : r2 = virtualinvoke r0.<org.apache.http.params.AbstractHttpParams: java.lang.Object getParameter(java.lang.String)>(r1)
org.apache.http.params.AbstractHttpParams.getIntParameter : if r2 != null goto $r3 = (java.lang.Integer) r2
org.apache.http.impl.io.AbstractSessionInputBuffer.locateLF : return -1
org.apache.http.impl.io.AbstractSessionInputBuffer.locateLF : i0 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
