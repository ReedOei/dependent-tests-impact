org.apache.http.message.BasicRequestLine.getUri : $r1 = r0.<org.apache.http.message.BasicRequestLine: java.lang.String uri>
org.apache.http.impl.io.AbstractSessionInputBuffer.init : if i0 > 0 goto (branch)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r10 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.nio.charset.Charset charset>
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r7 = new org.apache.http.util.ByteArrayBuffer
org.apache.http.impl.io.AbstractSessionInputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos> = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen> = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $i1 = interfaceinvoke r2.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.connection.max-line-length", -1)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : if r1 != null goto (branch)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : if r2 != null goto r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.io.InputStream instream> = r1
org.apache.http.impl.io.AbstractSessionInputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.io.InputStream instream> = r1
org.apache.http.impl.io.AbstractSessionInputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.nio.charset.CharsetDecoder decoder> = null
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $i2 = interfaceinvoke r2.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.connection.min-chunk-limit", 512)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r8 = staticinvoke <org.apache.http.params.HttpProtocolParams: java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams)>(r2)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r12 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r6 = newarray (byte)[i0]
org.apache.http.impl.io.AbstractMessageParser.parse : return r2
org.apache.http.impl.io.AbstractMessageParser.parse : $r8 = r0.<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.io.SessionInputBuffer sessionBuffer>
org.apache.http.impl.io.AbstractMessageParser.parse : r0.<org.apache.http.impl.io.AbstractMessageParser: int state> = 1
org.apache.http.impl.io.AbstractMessageParser.parse : r0.<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.HttpMessage message> = null
org.apache.http.impl.io.AbstractMessageParser.parse : lookupswitch(i0) {     case 0: goto $r3 = r0.<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.io.SessionInputBuffer sessionBuffer>;     case 1: goto $r8 = r0.<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.io.SessionInputBuffer sessionBuffer>;     default: goto $r14 = new java.lang.IllegalStateException; }
org.apache.http.impl.io.AbstractMessageParser.parse : $r13 = r0.<org.apache.http.impl.io.AbstractMessageParser: java.util.List headerLines>
org.apache.http.impl.io.AbstractMessageParser.parse : $r12 = r0.<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.HttpMessage message>
org.apache.http.impl.io.AbstractMessageParser.parse : goto [?= r0.<org.apache.http.impl.io.AbstractMessageParser: int state> = 1]
org.apache.http.impl.io.AbstractMessageParser.parse : r0.<org.apache.http.impl.io.AbstractMessageParser: int state> = 0
org.apache.http.impl.io.AbstractMessageParser.parse : i0 = r0.<org.apache.http.impl.io.AbstractMessageParser: int state>
org.apache.http.impl.io.AbstractMessageParser.parse : r2 = r0.<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.HttpMessage message>
org.apache.http.impl.io.AbstractMessageParser.parse : $r3 = r0.<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.io.SessionInputBuffer sessionBuffer>
org.apache.http.ProtocolVersion.equals : return 1
org.apache.http.ProtocolVersion.equals : if r0 != r1 goto $z0 = r1 instanceof org.apache.http.ProtocolVersion
org.apache.http.message.ParserCursor.getPos : $i0 = r0.<org.apache.http.message.ParserCursor: int pos>
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : if r0 != null goto $r3 = interfaceinvoke r0.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.element-charset")
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : $r3 = interfaceinvoke r0.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.element-charset")
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : if r1 != null goto return r1
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : r1 = "US-ASCII"
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : return r1
org.apache.http.protocol.HTTP.isWhitespace : if c0 == 32 goto $z0 = 1
org.apache.http.util.ByteArrayBuffer.clear : r0.<org.apache.http.util.ByteArrayBuffer: int len> = 0
org.apache.http.message.ParserCursor.atEnd : $i0 = r0.<org.apache.http.message.ParserCursor: int pos>
org.apache.http.message.BasicRequestLine.getProtocolVersion : $r1 = r0.<org.apache.http.message.BasicRequestLine: org.apache.http.ProtocolVersion protoversion>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen> = i0
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $r3 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $r4 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.io.InputStream instream>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $i3 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : if i0 <= 0 goto r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos> = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $r6 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.impl.io.HttpTransportMetricsImpl metrics>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos> = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : return i8
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : if i8 != -1 goto $i9 = i1 + i8
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $i9 = i1 + i8
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $i4 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : i1 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen>
org.apache.http.util.CharArrayBuffer.length : $i0 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.HttpVersion.forVersion : return r0
org.apache.http.HttpVersion.forVersion : $i2 = r0.<org.apache.http.HttpVersion: int major>
org.apache.http.util.ByteArrayBuffer.isEmpty : $i0 = r0.<org.apache.http.util.ByteArrayBuffer: int len>
org.apache.http.message.BasicLineParser.parseRequestLine : virtualinvoke r0.<org.apache.http.message.BasicLineParser: void skipWhitespace(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>(r1, r2)
org.apache.http.message.BasicLineParser.parseRequestLine : virtualinvoke r2.<org.apache.http.message.ParserCursor: void updatePos(int)>(i3)
org.apache.http.message.BasicLineParser.parseRequestLine : i5 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: int indexOf(int,int,int)>(32, i4, i1)
org.apache.http.message.BasicLineParser.parseRequestLine : r5 = virtualinvoke r0.<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>(r1, r2)
org.apache.http.message.BasicLineParser.parseRequestLine : if i3 >= 0 goto r3 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>(i2, i3)
org.apache.http.message.BasicLineParser.parseRequestLine : r3 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>(i2, i3)
org.apache.http.message.BasicLineParser.parseRequestLine : virtualinvoke r2.<org.apache.http.message.ParserCursor: void updatePos(int)>(i5)
org.apache.http.message.BasicLineParser.parseRequestLine : r4 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>(i4, i5)
org.apache.http.message.BasicLineParser.parseRequestLine : i1 = virtualinvoke r2.<org.apache.http.message.ParserCursor: int getUpperBound()>()
org.apache.http.message.BasicLineParser.parseRequestLine : if r1 != null goto (branch)
org.apache.http.message.BasicLineParser.parseRequestLine : i3 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: int indexOf(int,int,int)>(32, i2, i1)
org.apache.http.message.BasicLineParser.parseRequestLine : i2 = virtualinvoke r2.<org.apache.http.message.ParserCursor: int getPos()>()
org.apache.http.message.BasicLineParser.parseRequestLine : $z0 = virtualinvoke r2.<org.apache.http.message.ParserCursor: boolean atEnd()>()
org.apache.http.message.BasicLineParser.parseRequestLine : i0 = virtualinvoke r2.<org.apache.http.message.ParserCursor: int getPos()>()
org.apache.http.message.BasicLineParser.parseRequestLine : i4 = virtualinvoke r2.<org.apache.http.message.ParserCursor: int getPos()>()
org.apache.http.message.BasicLineParser.parseRequestLine : $r26 = virtualinvoke r0.<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine createRequestLine(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)>(r3, r4, r5)
org.apache.http.message.BasicLineParser.parseRequestLine : if i5 >= 0 goto r4 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>(i4, i5)
org.apache.http.message.BasicLineParser.parseRequestLine : if r2 != null goto i0 = virtualinvoke r2.<org.apache.http.message.ParserCursor: int getPos()>()
org.apache.http.message.ParserCursor.updatePos : $i3 = r0.<org.apache.http.message.ParserCursor: int upperBound>
org.apache.http.message.ParserCursor.updatePos : r0.<org.apache.http.message.ParserCursor: int pos> = i0
org.apache.http.message.ParserCursor.updatePos : $i1 = r0.<org.apache.http.message.ParserCursor: int lowerBound>
org.apache.http.message.BasicLineParser.parseProtocolVersion : virtualinvoke r2.<org.apache.http.message.ParserCursor: void updatePos(int)>(i18)
org.apache.http.message.BasicLineParser.parseProtocolVersion : i1 = virtualinvoke r2.<org.apache.http.message.ParserCursor: int getPos()>()
org.apache.http.message.BasicLineParser.parseProtocolVersion : i16 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: int indexOf(int,int,int)>(46, i15, i2)
org.apache.http.message.BasicLineParser.parseProtocolVersion : virtualinvoke r0.<org.apache.http.message.BasicLineParser: void skipWhitespace(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>(r1, r2)
org.apache.http.message.BasicLineParser.parseProtocolVersion : if z0 != 0 goto $i14 = i0 + 1
org.apache.http.message.BasicLineParser.parseProtocolVersion : i18 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: int indexOf(int,int,int)>(32, i17, i2)
org.apache.http.message.BasicLineParser.parseProtocolVersion : if r1 != null goto (branch)
org.apache.http.message.BasicLineParser.parseProtocolVersion : if r2 != null goto $r8 = r0.<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion protocol>
org.apache.http.message.BasicLineParser.parseProtocolVersion : $i9 = i3 + i4
org.apache.http.message.BasicLineParser.parseProtocolVersion : $i7 = i3 + i0
org.apache.http.message.BasicLineParser.parseProtocolVersion : $r27 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>(i15, i16)
org.apache.http.message.BasicLineParser.parseProtocolVersion : if i18 != -1 goto $r35 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>(i17, i18)
org.apache.http.message.BasicLineParser.parseProtocolVersion : $i14 = i0 + 1
org.apache.http.message.BasicLineParser.parseProtocolVersion : goto [?= i17 = i16 + 1]
org.apache.http.message.BasicLineParser.parseProtocolVersion : $r8 = r0.<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion protocol>
org.apache.http.message.BasicLineParser.parseProtocolVersion : i17 = i16 + 1
org.apache.http.message.BasicLineParser.parseProtocolVersion : i3 = virtualinvoke r2.<org.apache.http.message.ParserCursor: int getPos()>()
org.apache.http.message.BasicLineParser.parseProtocolVersion : if i16 != -1 goto $r27 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>(i15, i16)
org.apache.http.message.BasicLineParser.parseProtocolVersion : i18 = i2
org.apache.http.message.BasicLineParser.parseProtocolVersion : if z0 == 0 goto (branch)
org.apache.http.message.BasicLineParser.parseProtocolVersion : z0 = 1
org.apache.http.message.BasicLineParser.parseProtocolVersion : i0 = virtualinvoke r3.<java.lang.String: int length()>()
org.apache.http.message.BasicLineParser.parseProtocolVersion : $i12 = i3 + i0
org.apache.http.message.BasicLineParser.parseProtocolVersion : $r35 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>(i17, i18)
org.apache.http.message.BasicLineParser.parseProtocolVersion : goto [?= virtualinvoke r2.<org.apache.http.message.ParserCursor: void updatePos(int)>(i18)]
org.apache.http.message.BasicLineParser.parseProtocolVersion : $r43 = virtualinvoke r0.<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion createProtocolVersion(int,int)>(i5, i6)
org.apache.http.message.BasicLineParser.parseProtocolVersion : i4 = 0
org.apache.http.message.BasicLineParser.parseProtocolVersion : i2 = virtualinvoke r2.<org.apache.http.message.ParserCursor: int getUpperBound()>()
org.apache.http.util.CharArrayBuffer.indexOf : return -1
org.apache.http.util.CharArrayBuffer.indexOf : i3 = i1
org.apache.http.util.CharArrayBuffer.indexOf : if i1 >= 0 goto $i4 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.indexOf : $i1 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.indexOf : $i4 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.indexOf : return i3
org.apache.http.util.CharArrayBuffer.indexOf : $r1 = r0.<org.apache.http.util.CharArrayBuffer: char[] buffer>
org.apache.http.util.CharArrayBuffer.indexOf : if i1 <= i2 goto i3 = i1
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : $r4 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : $z0 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean ascii>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : if i0 <= 0 goto i2 = i0 - i1
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : $i3 = i0 + 1
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : i1 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : i2 = i0 - i1
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : i0 = i0 + -1
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : return i2
org.apache.http.impl.io.HttpRequestParser.parseHead : if i0 != -1 goto $r7 = new org.apache.http.message.ParserCursor
org.apache.http.impl.io.HttpRequestParser.parseHead : $r2 = virtualinvoke r0.<org.apache.http.impl.io.HttpRequestParser: org.apache.http.HttpRequest parseHead(org.apache.http.io.SessionInputBuffer)>(r1)
org.apache.http.impl.io.HttpRequestParser.parseHead : $r7 = new org.apache.http.message.ParserCursor
org.apache.http.impl.io.HttpRequestParser.parseHead : $r9 = r0.<org.apache.http.impl.io.HttpRequestParser: org.apache.http.message.LineParser lineParser>
org.apache.http.impl.io.HttpRequestParser.parseHead : $r5 = r0.<org.apache.http.impl.io.HttpRequestParser: org.apache.http.util.CharArrayBuffer lineBuf>
org.apache.http.impl.io.HttpRequestParser.parseHead : $r4 = r0.<org.apache.http.impl.io.HttpRequestParser: org.apache.http.util.CharArrayBuffer lineBuf>
org.apache.http.impl.io.HttpRequestParser.parseHead : $r11 = r0.<org.apache.http.impl.io.HttpRequestParser: org.apache.http.HttpRequestFactory requestFactory>
org.apache.http.message.BasicHttpRequest.getRequestLine : $r3 = r0.<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine requestline>
org.apache.http.message.BasicHttpRequest.getRequestLine : $r7 = r0.<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine requestline>
org.apache.http.util.CharArrayBuffer.charAt : $r1 = r0.<org.apache.http.util.CharArrayBuffer: char[] buffer>
org.apache.http.util.CharArrayBuffer.substringTrimmed : $i2 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.substringTrimmed : $r22 = new java.lang.String
org.apache.http.util.CharArrayBuffer.substringTrimmed : if i0 >= 0 goto $i2 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.substringTrimmed : if i0 >= i1 goto (branch)
org.apache.http.util.CharArrayBuffer.substringTrimmed : if i0 <= i1 goto (branch)
org.apache.http.util.CharArrayBuffer.substringTrimmed : if i1 <= i0 goto $r22 = new java.lang.String
org.apache.http.params.AbstractHttpParams.getIntParameter : return i0
org.apache.http.params.AbstractHttpParams.getIntParameter : r2 = virtualinvoke r0.<org.apache.http.params.AbstractHttpParams: java.lang.Object getParameter(java.lang.String)>(r1)
org.apache.http.params.AbstractHttpParams.getIntParameter : if r2 != null goto $r3 = (java.lang.Integer) r2
org.apache.http.util.ByteArrayBuffer.expand : r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer> = r1
org.apache.http.util.ByteArrayBuffer.expand : $r2 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.util.ByteArrayBuffer.expand : $r3 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.message.HeaderGroup.getAllHeaders : $r1 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>
org.apache.http.message.AbstractHttpMessage.getAllHeaders : $r1 = r0.<org.apache.http.message.AbstractHttpMessage: org.apache.http.message.HeaderGroup headergroup>
org.apache.http.message.HeaderGroup.clear : $r1 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>
org.apache.http.impl.DefaultHttpRequestFactory.newHttpRequest : $r5 = new org.apache.http.message.BasicHttpRequest
org.apache.http.impl.DefaultHttpRequestFactory.newHttpRequest : if r1 != null goto r2 = interfaceinvoke r1.<org.apache.http.RequestLine: java.lang.String getMethod()>()
org.apache.http.impl.DefaultHttpRequestFactory.newHttpRequest : r2 = interfaceinvoke r1.<org.apache.http.RequestLine: java.lang.String getMethod()>()
org.apache.http.impl.DefaultHttpRequestFactory.newHttpRequest : $r4 = <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_COMMON_METHODS>
org.apache.http.impl.DefaultHttpRequestFactory.isOneOf : $r2 = r0[i0]
org.apache.http.impl.DefaultHttpRequestFactory.isOneOf : i0 = 0
org.apache.http.impl.DefaultHttpRequestFactory.isOneOf : return 1
org.apache.http.util.ByteArrayBuffer.byteAt : $r1 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : return r12
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : $i17 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : $r15 = interfaceinvoke r1.<org.apache.http.message.LineParser: org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer)>(r14)
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : i2 = interfaceinvoke r0.<org.apache.http.io.SessionInputBuffer: int readLine(org.apache.http.util.CharArrayBuffer)>(r3)
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i18)
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if r2 != null goto r3 = null
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : r4 = null
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if r1 != null goto (branch)
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if r3 != null goto virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: void clear()>()", "org.apache.http.impl.io.AbstractMessageParser.parseHeaders")]
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if r3 != null goto virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: void clear()>()
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : goto [?= i18 = i18 + 1]
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : r3 = null
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : r4 = r3
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : goto [?= $i17 = interfaceinvoke r2.<java.util.List: int size()>()]
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if i0 <= 0 goto (branch)
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if i2 == -1 goto $i17 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : i18 = 0
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : $c6 = virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: char charAt(int)>(0)
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3)
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : $r9 = new org.apache.http.util.CharArrayBuffer
org.apache.http.impl.io.AbstractMessageParser.parseHeaders : if r0 != null goto (branch)
org.apache.http.impl.io.HttpTransportMetricsImpl.incrementBytesTransferred : $l1 = r0.<org.apache.http.impl.io.HttpTransportMetricsImpl: long bytesTransferred>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : $r9 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : if i0 <= 0 goto $z0 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean ascii>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : return i0
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : $r6 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : $z0 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean ascii>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : $r4 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : $r5 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : $r3 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromLineBuffer : i0 = i0 + -1
org.apache.http.util.ByteArrayBuffer.append : r0.<org.apache.http.util.ByteArrayBuffer: int len> = i2
org.apache.http.util.ByteArrayBuffer.append : specialinvoke r0.<org.apache.http.util.ByteArrayBuffer: void expand(int)>(i2)
org.apache.http.util.ByteArrayBuffer.append : if i1 != 0 goto $i8 = r0.<org.apache.http.util.ByteArrayBuffer: int len>
org.apache.http.util.ByteArrayBuffer.append : $i8 = r0.<org.apache.http.util.ByteArrayBuffer: int len>
org.apache.http.util.ByteArrayBuffer.append : if r1 != null goto (branch)
org.apache.http.util.ByteArrayBuffer.append : if i0 < 0 goto $r3 = new java.lang.IndexOutOfBoundsException
org.apache.http.util.ByteArrayBuffer.append : $r11 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.util.ByteArrayBuffer.append : $r12 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.createTransportMetrics : $r1 = new org.apache.http.impl.io.HttpTransportMetricsImpl
org.apache.http.message.HeaderGroup.setHeaders : virtualinvoke r0.<org.apache.http.message.HeaderGroup: void clear()>()
org.apache.http.message.HeaderGroup.setHeaders : i0 = 0
org.apache.http.message.HeaderGroup.setHeaders : $r2 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>
org.apache.http.message.HeaderGroup.setHeaders : if r1 != null goto i0 = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if i1 == -1 goto $z2 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $r4 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i8 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $z2 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if i0 != -1 goto $i16 = specialinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int lineFromLineBuffer(org.apache.http.util.CharArrayBuffer)>(r1)
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i13 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int maxLineLen>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i12 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if r1 != null goto i0 = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if z0 == 0 goto (branch)
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if z0 == 0 goto (branch)", "org.apache.http.impl.io.AbstractSessionInputBuffer.readLine")]
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i7 = i1 + 1
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $r6 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : z0 = 1
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : z0 = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : i1 = specialinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int locateLF()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i4 = i1 + 1
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : i0 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int fillBuffer()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : i0 = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if i0 != -1 goto $i13 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int maxLineLen>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i16 = specialinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int lineFromLineBuffer(org.apache.http.util.CharArrayBuffer)>(r1)
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i3 = specialinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int lineFromReadBuffer(org.apache.http.util.CharArrayBuffer,int)>(r1, i1)
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : goto [?= $i13 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int maxLineLen>]
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $r3 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.hasBufferedData : $i0 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.message.BasicLineParser.createRequestLine : $r4 = new org.apache.http.message.BasicRequestLine
org.apache.http.ProtocolVersion.getProtocol : $r1 = r0.<org.apache.http.ProtocolVersion: java.lang.String protocol>
org.apache.http.message.ParserCursor.getUpperBound : $i0 = r0.<org.apache.http.message.ParserCursor: int upperBound>
org.apache.http.message.AbstractHttpMessage.setHeaders : $r2 = r0.<org.apache.http.message.AbstractHttpMessage: org.apache.http.message.HeaderGroup headergroup>
org.apache.http.util.ByteArrayBuffer.length : $i0 = r0.<org.apache.http.util.ByteArrayBuffer: int len>
org.apache.http.message.BasicLineParser.skipWhitespace : virtualinvoke r2.<org.apache.http.message.ParserCursor: void updatePos(int)>(i0)
org.apache.http.message.BasicLineParser.skipWhitespace : if i0 >= i1 goto virtualinvoke r2.<org.apache.http.message.ParserCursor: void updatePos(int)>(i0)
org.apache.http.message.BasicLineParser.skipWhitespace : i0 = virtualinvoke r2.<org.apache.http.message.ParserCursor: int getPos()>()
org.apache.http.message.BasicLineParser.skipWhitespace : i0 = i0 + 1
org.apache.http.message.BasicLineParser.skipWhitespace : i1 = virtualinvoke r2.<org.apache.http.message.ParserCursor: int getUpperBound()>()
org.apache.http.message.BasicLineParser.parseHeader : $r2 = new org.apache.http.message.BufferedHeader
org.apache.http.util.CharArrayBuffer.clear : r0.<org.apache.http.util.CharArrayBuffer: int len> = 0
org.apache.http.params.BasicHttpParams.getParameter : $r2 = r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters>
org.apache.http.util.ByteArrayBuffer.buffer : $r1 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.util.CharArrayBuffer.append : $r12 = r0.<org.apache.http.util.CharArrayBuffer: char[] buffer>
org.apache.http.util.CharArrayBuffer.append : $r11 = r0.<org.apache.http.util.CharArrayBuffer: char[] buffer>
org.apache.http.util.CharArrayBuffer.append : if r1 != null goto $r2 = virtualinvoke r1.<org.apache.http.util.ByteArrayBuffer: byte[] buffer()>()
org.apache.http.util.CharArrayBuffer.append : i3 = i2 + i1
org.apache.http.util.CharArrayBuffer.append : i2 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.append : r0.<org.apache.http.util.CharArrayBuffer: int len> = i3
org.apache.http.util.CharArrayBuffer.append : if r1 != null goto (branch)
org.apache.http.util.CharArrayBuffer.append : i4 = i0
org.apache.http.util.CharArrayBuffer.append : $r2 = virtualinvoke r1.<org.apache.http.util.ByteArrayBuffer: byte[] buffer()>()
org.apache.http.util.CharArrayBuffer.append : if i0 < 0 goto $r3 = new java.lang.IndexOutOfBoundsException
org.apache.http.util.CharArrayBuffer.append : if i1 != 0 goto i2 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.message.BasicLineParser.createProtocolVersion : $r1 = r0.<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion protocol>
org.apache.http.impl.io.AbstractSessionInputBuffer.locateLF : return -1
org.apache.http.impl.io.AbstractSessionInputBuffer.locateLF : return i0
org.apache.http.impl.io.AbstractSessionInputBuffer.locateLF : $r1 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.locateLF : i0 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.message.BasicRequestLine.getMethod : $r1 = r0.<org.apache.http.message.BasicRequestLine: java.lang.String method>
