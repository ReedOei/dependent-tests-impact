org.apache.http.impl.io.AbstractSessionInputBuffer.init : if i0 > 0 goto (branch)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r10 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.nio.charset.Charset charset>
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r7 = new org.apache.http.util.ByteArrayBuffer
org.apache.http.impl.io.AbstractSessionInputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos> = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen> = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $i1 = interfaceinvoke r2.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.connection.max-line-length", -1)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : if r1 != null goto (branch)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : if r2 != null goto r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.io.InputStream instream> = r1
org.apache.http.impl.io.AbstractSessionInputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.io.InputStream instream> = r1
org.apache.http.impl.io.AbstractSessionInputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.nio.charset.CharsetDecoder decoder> = null
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $i2 = interfaceinvoke r2.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.connection.min-chunk-limit", 512)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r8 = staticinvoke <org.apache.http.params.HttpProtocolParams: java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams)>(r2)
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r12 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.init : $r6 = newarray (byte)[i0]
org.apache.http.impl.io.HttpTransportMetricsImpl.incrementBytesTransferred : $l1 = r0.<org.apache.http.impl.io.HttpTransportMetricsImpl: long bytesTransferred>
org.apache.http.util.EncodingUtils.getBytes : if r1 == null goto $r4 = new java.lang.IllegalArgumentException
org.apache.http.util.EncodingUtils.getBytes : $r5 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>(r1)
org.apache.http.util.EncodingUtils.getBytes : if r0 != null goto (branch)
org.apache.http.impl.io.AbstractSessionInputBuffer.read : $r2 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.read : $z0 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.read : $i7 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.impl.io.AbstractSessionInputBuffer.read : if r1 != null goto $z0 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.read : return i2
org.apache.http.impl.io.AbstractSessionInputBuffer.read : $i3 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : if i2 >= 0 goto $r12 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : lookupswitch(i0) {     case 1: goto $r7 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>;     case 3: goto $r2 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>;     default: goto $r16 = new java.lang.IllegalStateException; }
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r5 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : i0 = r0.<org.apache.http.impl.io.ChunkedInputStream: int state>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r7 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r2 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : if i1 != -1 goto $r5 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : if i3 != -1 goto $r10 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r11 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r6 = new org.apache.http.MalformedChunkCodingException
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r12 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r3 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.io.SessionInputBuffer in>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r10 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.util.CharArrayBuffer buffer>
org.apache.http.impl.io.ChunkedInputStream.getChunkSize : $r8 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.io.SessionInputBuffer in>
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : if r0 != null goto $r3 = interfaceinvoke r0.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.element-charset")
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : $r3 = interfaceinvoke r0.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.element-charset")
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : if r1 != null goto return r1
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : r1 = "US-ASCII"
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : return r1
org.apache.http.protocol.HTTP.isWhitespace : if c0 == 32 goto $z0 = 1
org.apache.http.impl.io.AbstractSessionInputBuffer.createTransportMetrics : $r1 = new org.apache.http.impl.io.HttpTransportMetricsImpl
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $r3 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $r4 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: java.io.InputStream instream>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $i3 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $r6 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.impl.io.HttpTransportMetricsImpl metrics>
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : return i8
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : if i8 != -1 goto $i9 = i1 + i8
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : $i9 = i1 + i8
org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer : i1 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferlen>
org.apache.http.util.CharArrayBuffer.length : $i0 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.ByteArrayBuffer.isEmpty : $i0 = r0.<org.apache.http.util.ByteArrayBuffer: int len>
org.apache.http.impl.io.AbstractSessionInputBuffer.hasBufferedData : $i0 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if z0 == 0 goto (branch)
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if z0 == 0 goto (branch)", "org.apache.http.impl.io.AbstractSessionInputBuffer.readLine")]
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : z0 = 1
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : i1 = specialinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int locateLF()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if i1 == -1 goto $z2 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : i0 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int fillBuffer()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if i0 != -1 goto $i13 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int maxLineLen>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : i0 = 0
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $z2 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i3 = specialinvoke r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int lineFromReadBuffer(org.apache.http.util.CharArrayBuffer,int)>(r1, i1)
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $i13 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int maxLineLen>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : $r3 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.util.ByteArrayBuffer linebuffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.readLine : if r1 != null goto i0 = 0
org.apache.http.util.CharArrayBuffer.indexOf : return -1
org.apache.http.util.CharArrayBuffer.indexOf : i3 = i1
org.apache.http.util.CharArrayBuffer.indexOf : if i1 >= 0 goto $i4 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.indexOf : $i1 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.indexOf : $i4 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.indexOf : $r1 = r0.<org.apache.http.util.CharArrayBuffer: char[] buffer>
org.apache.http.util.CharArrayBuffer.indexOf : if i1 <= i2 goto i3 = i1
org.apache.http.impl.io.ChunkedInputStream.read : $i0 = lengthof r1
org.apache.http.impl.io.ChunkedInputStream.read : $i10 = r0.<org.apache.http.impl.io.ChunkedInputStream: int pos>
org.apache.http.impl.io.ChunkedInputStream.read : $z1 = r0.<org.apache.http.impl.io.ChunkedInputStream: boolean eof>
org.apache.http.impl.io.ChunkedInputStream.read : $z2 = r0.<org.apache.http.impl.io.ChunkedInputStream: boolean eof>
org.apache.http.impl.io.ChunkedInputStream.read : if i2 == -1 goto r0.<org.apache.http.impl.io.ChunkedInputStream: boolean eof> = 1
org.apache.http.impl.io.ChunkedInputStream.read : $i3 = r0.<org.apache.http.impl.io.ChunkedInputStream: int state>
org.apache.http.impl.io.ChunkedInputStream.read : $z0 = r0.<org.apache.http.impl.io.ChunkedInputStream: boolean closed>
org.apache.http.impl.io.ChunkedInputStream.read : $i4 = r0.<org.apache.http.impl.io.ChunkedInputStream: int chunkSize>
org.apache.http.impl.io.ChunkedInputStream.read : r0.<org.apache.http.impl.io.ChunkedInputStream: int state> = 3
org.apache.http.impl.io.ChunkedInputStream.read : $r3 = r0.<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.io.SessionInputBuffer in>
org.apache.http.impl.io.ChunkedInputStream.read : $i8 = r0.<org.apache.http.impl.io.ChunkedInputStream: int pos>
org.apache.http.impl.io.ChunkedInputStream.read : return i2
org.apache.http.impl.io.ChunkedInputStream.read : specialinvoke r0.<org.apache.http.impl.io.ChunkedInputStream: void nextChunk()>()
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : $r4 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : $z0 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean ascii>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : if i0 <= 0 goto i2 = i0 - i1
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : $i3 = i0 + 1
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : i1 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : i2 = i0 - i1
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : i0 = i0 + -1
org.apache.http.impl.io.AbstractSessionInputBuffer.lineFromReadBuffer : return i2
org.apache.http.util.CharArrayBuffer.isEmpty : $i0 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.clear : r0.<org.apache.http.util.CharArrayBuffer: int len> = 0
org.apache.http.util.CharArrayBuffer.substringTrimmed : $i2 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.substringTrimmed : $r22 = new java.lang.String
org.apache.http.util.CharArrayBuffer.substringTrimmed : if i0 >= 0 goto $i2 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.substringTrimmed : if i0 >= i1 goto (branch)
org.apache.http.util.CharArrayBuffer.substringTrimmed : if i0 <= i1 goto (branch)
org.apache.http.util.CharArrayBuffer.substringTrimmed : if i1 <= i0 goto $r22 = new java.lang.String
org.apache.http.params.BasicHttpParams.getParameter : $r2 = r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters>
org.apache.http.util.CharArrayBuffer.append : $r12 = r0.<org.apache.http.util.CharArrayBuffer: char[] buffer>
org.apache.http.util.CharArrayBuffer.append : $r11 = r0.<org.apache.http.util.CharArrayBuffer: char[] buffer>
org.apache.http.util.CharArrayBuffer.append : i3 = i2 + i1
org.apache.http.util.CharArrayBuffer.append : i2 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.util.CharArrayBuffer.append : r0.<org.apache.http.util.CharArrayBuffer: int len> = i3
org.apache.http.util.CharArrayBuffer.append : if r1 != null goto (branch)
org.apache.http.util.CharArrayBuffer.append : i4 = i0
org.apache.http.util.CharArrayBuffer.append : if i0 < 0 goto $r3 = new java.lang.IndexOutOfBoundsException
org.apache.http.util.CharArrayBuffer.append : if i1 != 0 goto i2 = r0.<org.apache.http.util.CharArrayBuffer: int len>
org.apache.http.params.AbstractHttpParams.getIntParameter : return i0
org.apache.http.params.AbstractHttpParams.getIntParameter : r2 = virtualinvoke r0.<org.apache.http.params.AbstractHttpParams: java.lang.Object getParameter(java.lang.String)>(r1)
org.apache.http.params.AbstractHttpParams.getIntParameter : if r2 != null goto $r3 = (java.lang.Integer) r2
org.apache.http.impl.io.AbstractSessionInputBuffer.locateLF : return -1
org.apache.http.impl.io.AbstractSessionInputBuffer.locateLF : return i0
org.apache.http.impl.io.AbstractSessionInputBuffer.locateLF : $r1 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: byte[] buffer>
org.apache.http.impl.io.AbstractSessionInputBuffer.locateLF : i0 = r0.<org.apache.http.impl.io.AbstractSessionInputBuffer: int bufferpos>
org.apache.http.impl.io.ChunkedInputStream.nextChunk : r0.<org.apache.http.impl.io.ChunkedInputStream: int pos> = 0
org.apache.http.impl.io.ChunkedInputStream.nextChunk : $i1 = r0.<org.apache.http.impl.io.ChunkedInputStream: int chunkSize>
org.apache.http.impl.io.ChunkedInputStream.nextChunk : $i0 = specialinvoke r0.<org.apache.http.impl.io.ChunkedInputStream: int getChunkSize()>()
org.apache.http.impl.io.ChunkedInputStream.nextChunk : $i2 = r0.<org.apache.http.impl.io.ChunkedInputStream: int chunkSize>
org.apache.http.impl.io.ChunkedInputStream.nextChunk : r0.<org.apache.http.impl.io.ChunkedInputStream: int state> = 2
