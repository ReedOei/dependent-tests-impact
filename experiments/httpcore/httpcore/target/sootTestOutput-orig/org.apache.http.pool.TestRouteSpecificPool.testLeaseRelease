org.apache.http.pool.RouteSpecificPool.free : if z0 == 0 goto return
org.apache.http.pool.RouteSpecificPool.free : if r1 != null goto $r3 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.pool.RouteSpecificPool.free : $r10 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.RouteSpecificPool.free : $r3 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.pool.RouteSpecificPool.free : if z1 != 0 goto (branch)
org.apache.http.pool.PoolEntry.getState : $r1 = r0.<org.apache.http.pool.PoolEntry: java.lang.Object state>
org.apache.http.pool.TestRouteSpecificPool$LocalRoutePool.createEntry : $r2 = new org.apache.http.pool.TestRouteSpecificPool$LocalPoolEntry
org.apache.http.pool.TestRouteSpecificPool$LocalRoutePool.createEntry : $r2 = (org.apache.http.HttpConnection) r1
org.apache.http.pool.RouteSpecificPool.getRoute : $r1 = r0.<org.apache.http.pool.RouteSpecificPool: java.lang.Object route>
org.apache.http.pool.RouteSpecificPool.add : return r2
org.apache.http.pool.RouteSpecificPool.add : $r3 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.pool.RouteSpecificPool.add : r2 = virtualinvoke r0.<org.apache.http.pool.RouteSpecificPool: org.apache.http.pool.PoolEntry createEntry(java.lang.Object)>(r1)
org.apache.http.pool.RouteSpecificPool.getPendingCount : $r1 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList pending>
org.apache.http.pool.RouteSpecificPool.getAllocatedCount : $r1 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.RouteSpecificPool.getFree : return r12
org.apache.http.pool.RouteSpecificPool.getFree : $z4 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.http.pool.RouteSpecificPool.getFree : return null
org.apache.http.pool.RouteSpecificPool.getFree : if r1 == null goto $r9 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.RouteSpecificPool.getFree : $r14 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.pool.RouteSpecificPool.getFree : $r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.http.pool.RouteSpecificPool.getFree : interfaceinvoke r10.<java.util.Iterator: void remove()>()
org.apache.http.pool.RouteSpecificPool.getFree : $r9 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.RouteSpecificPool.getFree : $r4 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.RouteSpecificPool.getFree : $r13 = virtualinvoke r12.<org.apache.http.pool.PoolEntry: java.lang.Object getState()>()
org.apache.http.pool.RouteSpecificPool.getLeasedCount : $r1 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.pool.RouteSpecificPool.getAvailableCount : $r1 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.RouteSpecificPool.getLastUsed : $r2 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.pool.RouteSpecificPool.getLastUsed : $r1 = r0.<org.apache.http.pool.RouteSpecificPool: java.util.LinkedList available>
