org.apache.http.impl.io.ContentLengthOutputStream.flush : $r1 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: org.apache.http.io.SessionOutputBuffer out>
org.apache.http.message.AbstractHttpMessage.getFirstHeader : $r2 = r0.<org.apache.http.message.AbstractHttpMessage: org.apache.http.message.HeaderGroup headergroup>
org.apache.http.impl.io.HttpTransportMetricsImpl.incrementBytesTransferred : $l1 = r0.<org.apache.http.impl.io.HttpTransportMetricsImpl: long bytesTransferred>
org.apache.http.message.BasicHeader.getName : $r1 = r0.<org.apache.http.message.BasicHeader: java.lang.String name>
org.apache.http.impl.entity.StrictContentLengthStrategy.determineLength : l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r21)
org.apache.http.impl.entity.StrictContentLengthStrategy.determineLength : if r3 == null goto return -1L
org.apache.http.impl.entity.StrictContentLengthStrategy.determineLength : if r2 == null goto (branch)
org.apache.http.impl.entity.StrictContentLengthStrategy.determineLength : r2 = interfaceinvoke r1.<org.apache.http.HttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>("Transfer-Encoding")
org.apache.http.impl.entity.StrictContentLengthStrategy.determineLength : r21 = interfaceinvoke r3.<org.apache.http.Header: java.lang.String getValue()>()
org.apache.http.impl.entity.StrictContentLengthStrategy.determineLength : $b1 = l0 cmp 0L
org.apache.http.impl.entity.StrictContentLengthStrategy.determineLength : return l0
org.apache.http.impl.entity.StrictContentLengthStrategy.determineLength : r3 = interfaceinvoke r1.<org.apache.http.HttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>("Content-Length")
org.apache.http.impl.entity.StrictContentLengthStrategy.determineLength : if r1 != null goto r2 = interfaceinvoke r1.<org.apache.http.HttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>("Transfer-Encoding")
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : if r0 != null goto $r3 = interfaceinvoke r0.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.element-charset")
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : $r3 = interfaceinvoke r0.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.element-charset")
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : if r1 != null goto return r1
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : r1 = "US-ASCII"
org.apache.http.params.HttpProtocolParams.getHttpElementCharset : return r1
org.apache.http.util.ByteArrayBuffer.clear : r0.<org.apache.http.util.ByteArrayBuffer: int len> = 0
org.apache.http.impl.io.ContentLengthOutputStream.close : $z0 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: boolean closed>
org.apache.http.impl.io.ContentLengthOutputStream.close : r0.<org.apache.http.impl.io.ContentLengthOutputStream: boolean closed> = 1
org.apache.http.impl.io.ContentLengthOutputStream.close : $r1 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: org.apache.http.io.SessionOutputBuffer out>
org.apache.http.util.ByteArrayBuffer.append : r0.<org.apache.http.util.ByteArrayBuffer: int len> = i2
org.apache.http.util.ByteArrayBuffer.append : if i1 != 0 goto $i8 = r0.<org.apache.http.util.ByteArrayBuffer: int len>
org.apache.http.util.ByteArrayBuffer.append : $i8 = r0.<org.apache.http.util.ByteArrayBuffer: int len>
org.apache.http.util.ByteArrayBuffer.append : if r1 != null goto (branch)
org.apache.http.util.ByteArrayBuffer.append : if i0 < 0 goto $r3 = new java.lang.IndexOutOfBoundsException
org.apache.http.util.ByteArrayBuffer.append : $r11 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.util.ByteArrayBuffer.append : $r12 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.message.HeaderGroup.getFirstHeader : return r2
org.apache.http.message.HeaderGroup.getFirstHeader : return null
org.apache.http.message.HeaderGroup.getFirstHeader : i0 = 0
org.apache.http.message.HeaderGroup.getFirstHeader : $r6 = interfaceinvoke r2.<org.apache.http.Header: java.lang.String getName()>()
org.apache.http.message.HeaderGroup.getFirstHeader : $r4 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>
org.apache.http.entity.ByteArrayEntity.writeTo : if r1 != null goto $r3 = r0.<org.apache.http.entity.ByteArrayEntity: byte[] b>
org.apache.http.entity.ByteArrayEntity.writeTo : $r3 = r0.<org.apache.http.entity.ByteArrayEntity: byte[] b>
org.apache.http.entity.ByteArrayEntity.writeTo : virtualinvoke r1.<java.io.OutputStream: void flush()>()
org.apache.http.message.BasicHeader.getValue : $r1 = r0.<org.apache.http.message.BasicHeader: java.lang.String value>
org.apache.http.impl.io.AbstractSessionOutputBuffer.createTransportMetrics : $r1 = new org.apache.http.impl.io.HttpTransportMetricsImpl
org.apache.http.impl.io.AbstractSessionOutputBuffer.flush : $r1 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: java.io.OutputStream outstream>
org.apache.http.impl.io.AbstractSessionOutputBuffer.flush : virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: void flushBuffer()>()
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : $r11 = virtualinvoke r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics()>()
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : if i0 > 0 goto (branch)
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : if r2 != null goto r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: java.io.OutputStream outstream> = r1
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : $i1 = interfaceinvoke r2.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.connection.min-chunk-limit", 512)
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : $r6 = new org.apache.http.util.ByteArrayBuffer
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : if r1 != null goto (branch)
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: java.nio.charset.CharsetEncoder encoder> = null
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : $r9 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: java.nio.charset.Charset charset>
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: java.io.OutputStream outstream> = r1
org.apache.http.impl.io.AbstractSessionOutputBuffer.init : $r7 = staticinvoke <org.apache.http.params.HttpProtocolParams: java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams)>(r2)
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : $i3 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: int minChunkLimit>
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : $r7 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.util.ByteArrayBuffer buffer>
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : if i1 <= i2 goto $r7 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.util.ByteArrayBuffer buffer>
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : $r5 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.util.ByteArrayBuffer buffer>
org.apache.http.impl.io.AbstractSessionOutputBuffer.write : if r1 != null goto $i3 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: int minChunkLimit>
org.apache.http.util.ByteArrayBuffer.capacity : $r1 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.message.AbstractHttpMessage.addHeader : $r4 = r0.<org.apache.http.message.AbstractHttpMessage: org.apache.http.message.HeaderGroup headergroup>
org.apache.http.message.AbstractHttpMessage.addHeader : if r1 != null goto $r4 = r0.<org.apache.http.message.AbstractHttpMessage: org.apache.http.message.HeaderGroup headergroup>
org.apache.http.util.ByteArrayBuffer.length : $i0 = r0.<org.apache.http.util.ByteArrayBuffer: int len>
org.apache.http.impl.SessionOutputBufferMock.getData : $r2 = r0.<org.apache.http.impl.SessionOutputBufferMock: java.io.ByteArrayOutputStream buffer>
org.apache.http.impl.SessionOutputBufferMock.getData : $r1 = r0.<org.apache.http.impl.SessionOutputBufferMock: java.io.ByteArrayOutputStream buffer>
org.apache.http.impl.entity.EntitySerializer.doSerialize : $r6 = new org.apache.http.impl.io.ContentLengthOutputStream
org.apache.http.impl.entity.EntitySerializer.doSerialize : $r3 = r0.<org.apache.http.impl.entity.EntitySerializer: org.apache.http.entity.ContentLengthStrategy lenStrategy>
org.apache.http.impl.entity.EntitySerializer.doSerialize : $b2 = l0 cmp -1L
org.apache.http.impl.entity.EntitySerializer.doSerialize : $b1 = l0 cmp -2L
org.apache.http.message.HeaderGroup.addHeader : $r2 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>
org.apache.http.message.HeaderGroup.addHeader : if r1 != null goto $r2 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>
org.apache.http.util.ByteArrayBuffer.buffer : $r1 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>
org.apache.http.params.BasicHttpParams.getParameter : $r2 = r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters>
org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer : $r2 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: java.io.OutputStream outstream>
org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer : $r6 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.impl.io.HttpTransportMetricsImpl metrics>
org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer : $r5 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.util.ByteArrayBuffer buffer>
org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer : $r1 = r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.util.ByteArrayBuffer buffer>
org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer : if i0 <= 0 goto return
org.apache.http.impl.io.ContentLengthOutputStream.write : $z0 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: boolean closed>
org.apache.http.impl.io.ContentLengthOutputStream.write : $r3 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: org.apache.http.io.SessionOutputBuffer out>
org.apache.http.impl.io.ContentLengthOutputStream.write : $l6 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: long contentLength>
org.apache.http.impl.io.ContentLengthOutputStream.write : $l3 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: long total>
org.apache.http.impl.io.ContentLengthOutputStream.write : $l8 = (long) i1
org.apache.http.impl.io.ContentLengthOutputStream.write : $l10 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: long total>
org.apache.http.impl.entity.EntitySerializer.serialize : r4 = virtualinvoke r0.<org.apache.http.impl.entity.EntitySerializer: java.io.OutputStream doSerialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage)>(r1, r2)
org.apache.http.impl.entity.EntitySerializer.serialize : if r1 != null goto (branch)
org.apache.http.impl.entity.EntitySerializer.serialize : interfaceinvoke r3.<org.apache.http.HttpEntity: void writeTo(java.io.OutputStream)>(r4)
org.apache.http.impl.entity.EntitySerializer.serialize : virtualinvoke r4.<java.io.OutputStream: void close()>()
org.apache.http.impl.entity.EntitySerializer.serialize : if r3 != null goto r4 = virtualinvoke r0.<org.apache.http.impl.entity.EntitySerializer: java.io.OutputStream doSerialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage)>(r1, r2)
org.apache.http.impl.entity.EntitySerializer.serialize : if r2 != null goto (branch)
org.apache.http.params.AbstractHttpParams.getIntParameter : return i0
org.apache.http.params.AbstractHttpParams.getIntParameter : r2 = virtualinvoke r0.<org.apache.http.params.AbstractHttpParams: java.lang.Object getParameter(java.lang.String)>(r1)
org.apache.http.params.AbstractHttpParams.getIntParameter : if r2 != null goto $r3 = (java.lang.Integer) r2
