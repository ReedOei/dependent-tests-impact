org.apache.http.nio.pool.RouteSpecificPool.getAvailableCount : $r1 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.nio.pool.RouteSpecificPool.addPending : $r3 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.Map pending>
org.apache.http.nio.pool.RouteSpecificPool.getPendingCount : $r1 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.Map pending>
org.apache.http.nio.pool.RouteSpecificPool.removeRequest : return r2
org.apache.http.nio.pool.RouteSpecificPool.removeRequest : if r2 != null goto return r2
org.apache.http.nio.pool.RouteSpecificPool.removeRequest : $r3 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.Map pending>
org.apache.http.nio.pool.RouteSpecificPool.cancelled : virtualinvoke r2.<org.apache.http.concurrent.BasicFuture: boolean cancel(boolean)>(1)
org.apache.http.nio.pool.RouteSpecificPool.cancelled : r2 = specialinvoke r0.<org.apache.http.nio.pool.RouteSpecificPool: org.apache.http.concurrent.BasicFuture removeRequest(org.apache.http.nio.reactor.SessionRequest)>(r1)
org.apache.http.nio.pool.RouteSpecificPool.getAllocatedCount : $r1 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.nio.pool.RouteSpecificPool.getLeasedCount : $r1 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.Set leased>
