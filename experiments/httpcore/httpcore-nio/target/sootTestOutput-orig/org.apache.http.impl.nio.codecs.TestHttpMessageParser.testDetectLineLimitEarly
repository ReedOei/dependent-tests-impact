org.apache.http.nio.util.ExpandableBuffer.length : $r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.nio.util.ExpandableBuffer.length : virtualinvoke r0.<org.apache.http.nio.util.ExpandableBuffer: void setOutputMode()>()
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $r5 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.util.CharArrayBuffer lineBuf>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : return null
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $r4 = new org.apache.http.util.CharArrayBuffer
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : goto [?= $i11 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state>]
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $i0 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $i11 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : if z0 != 0 goto $i6 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $i1 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int maxLineLen>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $r3 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.util.CharArrayBuffer lineBuf>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $r6 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.nio.reactor.SessionInputBuffer sessionBuffer>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $r10 = new java.io.IOException
org.apache.http.nio.util.ExpandableBuffer.expand : if i0 >= 0 goto specialinvoke r0.<org.apache.http.nio.util.ExpandableBuffer: void expandCapacity(int)>(i0)
org.apache.http.nio.util.ExpandableBuffer.expand : specialinvoke r0.<org.apache.http.nio.util.ExpandableBuffer: void expandCapacity(int)>(i0)
org.apache.http.nio.util.ExpandableBuffer.expand : $r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.nio.util.ExpandableBuffer.setInputMode : r0.<org.apache.http.nio.util.ExpandableBuffer: int mode> = 0
org.apache.http.nio.util.ExpandableBuffer.setInputMode : $r2 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.nio.util.ExpandableBuffer.setInputMode : $i0 = r0.<org.apache.http.nio.util.ExpandableBuffer: int mode>
org.apache.http.nio.util.ExpandableBuffer.setInputMode : $r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.nio.util.HeapByteBufferAllocator.allocate : $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i0)
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : if z0 == 0 goto return 0
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : if b2 != 10 goto i1 = i1 + 1
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r5 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : z1 = 0
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r3 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : return 0
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: void setOutputMode()>()
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : if z1 != 0 goto $r8 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : i0 = -1
org.apache.http.impl.nio.codecs.TestHttpMessageParser.newChannel : $r1 = staticinvoke <org.apache.http.impl.nio.codecs.TestHttpMessageParser: java.nio.channels.ReadableByteChannel newChannel(java.lang.String,java.lang.String)>(r0, "US-ASCII")
org.apache.http.impl.nio.codecs.TestHttpMessageParser.newChannel : $r2 = new java.io.ByteArrayInputStream
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: void expand()>()
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : return i0
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : $r4 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : $r3 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: void setInputMode()>()
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : if r1 != null goto virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: void setInputMode()>()
org.apache.http.nio.util.ExpandableBuffer.expandCapacity : virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer flip()>()
org.apache.http.nio.util.ExpandableBuffer.expandCapacity : $r2 = r0.<org.apache.http.nio.util.ExpandableBuffer: org.apache.http.nio.util.ByteBufferAllocator allocator>
org.apache.http.nio.util.ExpandableBuffer.expandCapacity : $r5 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.nio.util.ExpandableBuffer.expandCapacity : r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.nio.util.ExpandableBuffer.setOutputMode : $i0 = r0.<org.apache.http.nio.util.ExpandableBuffer: int mode>
org.apache.http.nio.util.ExpandableBuffer.setOutputMode : r0.<org.apache.http.nio.util.ExpandableBuffer: int mode> = 1
org.apache.http.nio.util.ExpandableBuffer.setOutputMode : $r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.codecs.AbstractMessageParser.fillBuffer : return i0
org.apache.http.impl.nio.codecs.AbstractMessageParser.fillBuffer : $r2 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.nio.reactor.SessionInputBuffer sessionBuffer>
org.apache.http.impl.nio.codecs.AbstractMessageParser.fillBuffer : if i0 != -1 goto return i0
