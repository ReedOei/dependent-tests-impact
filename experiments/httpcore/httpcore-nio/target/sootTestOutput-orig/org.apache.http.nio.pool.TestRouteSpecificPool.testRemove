org.apache.http.nio.pool.RouteSpecificPool.remove : $r3 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.nio.pool.RouteSpecificPool.remove : return 1
org.apache.http.nio.pool.RouteSpecificPool.remove : return 0
org.apache.http.nio.pool.RouteSpecificPool.remove : if r1 != null goto $r3 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.nio.pool.RouteSpecificPool.remove : $r4 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.nio.pool.RouteSpecificPool.completed : return r4
org.apache.http.nio.pool.RouteSpecificPool.completed : r3 = specialinvoke r0.<org.apache.http.nio.pool.RouteSpecificPool: org.apache.http.concurrent.BasicFuture removeRequest(org.apache.http.nio.reactor.SessionRequest)>(r1)
org.apache.http.nio.pool.RouteSpecificPool.completed : $r6 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.nio.pool.RouteSpecificPool.completed : $r5 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.lang.Object route>
org.apache.http.nio.pool.RouteSpecificPool.completed : virtualinvoke r3.<org.apache.http.concurrent.BasicFuture: boolean completed(java.lang.Object)>(r4)
org.apache.http.nio.pool.RouteSpecificPool.getAvailableCount : $r1 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.nio.pool.RouteSpecificPool.addPending : $r3 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.Map pending>
org.apache.http.nio.pool.TestRouteSpecificPool$LocalRoutePool.createEntry : $r3 = new org.apache.http.nio.pool.TestRouteSpecificPool$LocalPoolEntry
org.apache.http.nio.pool.TestRouteSpecificPool$LocalRoutePool.createEntry : $r3 = (java.lang.String) r1
org.apache.http.nio.pool.RouteSpecificPool.getPendingCount : $r1 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.Map pending>
org.apache.http.nio.pool.RouteSpecificPool.removeRequest : return r2
org.apache.http.nio.pool.RouteSpecificPool.removeRequest : if r2 != null goto return r2
org.apache.http.nio.pool.RouteSpecificPool.removeRequest : $r3 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.Map pending>
org.apache.http.nio.pool.RouteSpecificPool.free : if z0 == 0 goto return
org.apache.http.nio.pool.RouteSpecificPool.free : if r1 != null goto $r3 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.nio.pool.RouteSpecificPool.free : $r10 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.nio.pool.RouteSpecificPool.free : if z1 != 0 goto (branch)
org.apache.http.nio.pool.RouteSpecificPool.free : $r3 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.Set leased>
org.apache.http.nio.pool.RouteSpecificPool.getAllocatedCount : $r1 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.LinkedList available>
org.apache.http.nio.pool.RouteSpecificPool.getLeasedCount : $r1 = r0.<org.apache.http.nio.pool.RouteSpecificPool: java.util.Set leased>
