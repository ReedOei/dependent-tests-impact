org.apache.http.impl.nio.reactor.IOReactorConfig.getIoThreadCount : $i0 = r0.<org.apache.http.impl.nio.reactor.IOReactorConfig: int ioThreadCount>
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.connect : $r10 = r0.<org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor: org.apache.http.impl.nio.reactor.IOReactorConfig config>
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.connect : return r6
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.connect : $r12 = r0.<org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.connect : $r9 = new org.apache.http.impl.nio.reactor.SessionRequestImpl
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.connect : $r7 = r0.<org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.connect : $r11 = r0.<org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor: java.util.Queue requestQueue>
org.apache.http.impl.nio.reactor.AbstractIOReactor.getStatus : $r1 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.nio.protocol.Job.setResult : virtualinvoke r0.<java.lang.Object: void notifyAll()>()
org.apache.http.nio.protocol.Job.setResult : r0.<org.apache.http.nio.protocol.Job: java.lang.String result> = r1
org.apache.http.nio.protocol.Job.setResult : $z0 = r0.<org.apache.http.nio.protocol.Job: boolean completed>
org.apache.http.nio.protocol.Job.setResult : r0.<org.apache.http.nio.protocol.Job: int statusCode> = i0
org.apache.http.nio.protocol.Job.setResult : r0.<org.apache.http.nio.protocol.Job: boolean completed> = 1
org.apache.http.testserver.HttpServerNio.setExceptionHandler : $r2 = r0.<org.apache.http.testserver.HttpServerNio: org.apache.http.impl.nio.reactor.DefaultListeningIOReactor ioReactor>
org.apache.http.impl.nio.reactor.AbstractIOReactor$1.sessionClosed : $r2 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor$1: org.apache.http.impl.nio.reactor.AbstractIOReactor this$0>
org.apache.http.impl.nio.DefaultClientIOEventDispatch.inputReady : $r4 = r0.<org.apache.http.impl.nio.DefaultClientIOEventDispatch: org.apache.http.nio.NHttpClientHandler handler>
org.apache.http.impl.nio.DefaultClientIOEventDispatch.inputReady : specialinvoke r0.<org.apache.http.impl.nio.DefaultClientIOEventDispatch: void ensureNotNull(org.apache.http.nio.NHttpClientIOTarget)>(r2)
org.apache.http.impl.nio.DefaultClientIOEventDispatch.inputReady : $r3 = interfaceinvoke r1.<org.apache.http.nio.reactor.IOSession: java.lang.Object getAttribute(java.lang.String)>("http.connection")
org.apache.http.impl.nio.DefaultClientIOEventDispatch.inputReady : goto [?= return]
org.apache.http.impl.nio.DefaultServerIOEventDispatch.createConnection : $r2 = new org.apache.http.impl.nio.DefaultNHttpServerConnection
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.reset : r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.HttpRequest request> = null
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.reset : r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.HttpResponse response> = null
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.reset : virtualinvoke r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: void finishOutput()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.reset : virtualinvoke r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: void finishInput()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.reset : r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.HttpException httpex> = null
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.reset : r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: boolean handled> = 0
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.reset : r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: java.io.IOException ioex> = null
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.reset : r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.nio.protocol.NHttpRequestHandler requestHandler> = null
org.apache.http.impl.nio.NHttpConnectionBase.createConnectionMetrics : $r3 = new org.apache.http.impl.HttpConnectionMetricsImpl
org.apache.http.impl.nio.reactor.IOSessionImpl.hasBufferedInput : if r1 == null goto $z1 = 0
org.apache.http.impl.nio.reactor.IOSessionImpl.hasBufferedInput : r1 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: org.apache.http.nio.reactor.SessionBufferStatus bufferStatus>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parseHeadLine : $r1 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.util.CharArrayBuffer lineBuf>
org.apache.http.testserver.HttpServerNio.start : $r3 = r0.<org.apache.http.testserver.HttpServerNio: org.apache.http.impl.nio.reactor.DefaultListeningIOReactor ioReactor>
org.apache.http.testserver.HttpServerNio.start : $r6 = r0.<org.apache.http.testserver.HttpServerNio: org.apache.http.testserver.HttpServerNio$IOReactorThread thread>
org.apache.http.testserver.HttpServerNio.start : $r5 = new org.apache.http.testserver.HttpServerNio$IOReactorThread
org.apache.http.impl.nio.DefaultClientIOEventDispatch.createHttpResponseFactory : $r1 = new org.apache.http.impl.DefaultHttpResponseFactory
org.apache.http.nio.protocol.Job.waitFor : virtualinvoke r0.<java.lang.Object: void wait()>()
org.apache.http.nio.protocol.Job.waitFor : $z0 = r0.<org.apache.http.nio.protocol.Job: boolean completed>
org.apache.http.impl.nio.reactor.ChannelEntry.getSessionRequest : $r1 = r0.<org.apache.http.impl.nio.reactor.ChannelEntry: org.apache.http.impl.nio.reactor.SessionRequestImpl sessionRequest>
org.apache.http.impl.nio.reactor.IOSessionImpl.resetLastRead : r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: long lastAccessTime> = l0
org.apache.http.impl.nio.reactor.IOSessionImpl.resetLastRead : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.impl.nio.reactor.IOSessionImpl.resetLastRead : r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: long lastReadTime> = l0
org.apache.http.impl.nio.DefaultNHttpClientConnection.produceOutput : interfaceinvoke r1.<org.apache.http.nio.NHttpClientHandler: void requestReady(org.apache.http.nio.NHttpClientConnection)>(r0)
org.apache.http.impl.nio.DefaultNHttpClientConnection.produceOutput : $r8 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.impl.nio.reactor.SessionOutputBufferImpl outbuf>
org.apache.http.impl.nio.DefaultNHttpClientConnection.produceOutput : $r7 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.impl.io.HttpTransportMetricsImpl outTransportMetrics>
org.apache.http.impl.nio.DefaultNHttpClientConnection.produceOutput : $r3 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.impl.nio.reactor.SessionOutputBufferImpl outbuf>
org.apache.http.impl.nio.DefaultNHttpClientConnection.produceOutput : $i4 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: int status>
org.apache.http.impl.nio.DefaultNHttpClientConnection.produceOutput : $r11 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.nio.ContentEncoder contentEncoder>
org.apache.http.impl.nio.DefaultNHttpClientConnection.produceOutput : $r14 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.nio.ContentEncoder contentEncoder>
org.apache.http.impl.nio.DefaultNHttpClientConnection.produceOutput : $i2 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: int status>
org.apache.http.impl.nio.DefaultNHttpClientConnection.produceOutput : $r4 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.impl.nio.reactor.SessionOutputBufferImpl outbuf>
org.apache.http.impl.nio.DefaultNHttpClientConnection.produceOutput : $r17 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.nio.reactor.IOSession session>
org.apache.http.impl.nio.DefaultNHttpClientConnection.produceOutput : $i3 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: int status>
org.apache.http.impl.nio.DefaultNHttpClientConnection.produceOutput : if i0 <= 0 goto $r8 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.impl.nio.reactor.SessionOutputBufferImpl outbuf>
org.apache.http.impl.nio.DefaultNHttpClientConnection.produceOutput : goto [?= return]
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeSessions : interfaceinvoke r3.<org.apache.http.nio.reactor.IOSession: void close()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeSessions : exitmonitor r1
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeSessions : $r6 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Set sessions>
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeSessions : $r5 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Set sessions>
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeSessions : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeSessions : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.http.impl.nio.reactor.BaseIOReactor.readable : $z0 = interfaceinvoke r2.<org.apache.http.nio.reactor.IOSession: boolean hasBufferedInput()>()
org.apache.http.impl.nio.reactor.BaseIOReactor.readable : $r4 = r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: org.apache.http.nio.reactor.IOEventDispatch eventDispatch>
org.apache.http.impl.nio.reactor.BaseIOReactor.readable : goto [?= return]
org.apache.http.impl.nio.reactor.BaseIOReactor.readable : r2 = virtualinvoke r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: org.apache.http.nio.reactor.IOSession getSession(java.nio.channels.SelectionKey)>(r1)
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $r5 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.util.CharArrayBuffer lineBuf>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $r22 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.HttpMessage message>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $i0 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $i11 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $z2 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: boolean endOfStream>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $i1 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int maxLineLen>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $r14 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.util.CharArrayBuffer lineBuf>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : return null
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $r4 = new org.apache.http.util.CharArrayBuffer
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : specialinvoke r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: void parseHeadLine()>()
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : goto [?= $z2 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: boolean endOfStream>]
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $r19 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: java.util.List headerBufs>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : goto [?= i12 = i12 + 1]
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $r28 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.HttpMessage message>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $r6 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.nio.reactor.SessionInputBuffer sessionBuffer>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : specialinvoke r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: void parseHeader()>()
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $i6 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $i8 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int maxHeaderCount>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : goto [?= r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state> = 1]
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : goto [?= $i11 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state>]
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $r3 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.util.CharArrayBuffer lineBuf>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state> = 2
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : i12 = 0
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state> = 1
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$i0 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state>", "org.apache.http.impl.nio.codecs.AbstractMessageParser.parse")]
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : if z0 != 0 goto $i6 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state>
org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState.getOutputState : $i0 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: int outputState>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.closed : virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: void reset()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.closed : $r9 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: org.apache.http.nio.protocol.EventListener eventListener>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.closed : r2 = interfaceinvoke r1.<org.apache.http.nio.NHttpServerConnection: org.apache.http.protocol.HttpContext getContext()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.closed : $r5 = interfaceinvoke r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.nio.conn-state")
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.closed : goto [?= $r9 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: org.apache.http.nio.protocol.EventListener eventListener>]
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.closed : $r10 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: org.apache.http.nio.protocol.EventListener eventListener>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.responseReady : specialinvoke r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: void sendResponse(org.apache.http.nio.NHttpServerConnection,org.apache.http.HttpRequest,org.apache.http.HttpResponse)>(r1, r4, r14)
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.responseReady : if r5 == null goto r6 = virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.HttpException getHttpException()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.responseReady : r2 = interfaceinvoke r1.<org.apache.http.nio.NHttpServerConnection: org.apache.http.protocol.HttpContext getContext()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.responseReady : r14 = virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.HttpResponse getResponse()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.responseReady : r4 = virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.HttpRequest getRequest()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.responseReady : r5 = virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: java.io.IOException getIOException()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.responseReady : r6 = virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.HttpException getHttpException()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.responseReady : if r6 == null goto r14 = virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.HttpResponse getResponse()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.responseReady : $z0 = virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: boolean isHandled()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.responseReady : virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: void setHandled(boolean)>(1)
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.responseReady : $r8 = interfaceinvoke r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.nio.conn-state")
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.responseReady : goto [?= return]
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.responseReady : goto [?= return]
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.responseReady : if r14 == null goto (branch)
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r21 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r28 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.lang.Object statusMutex>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void hardShutdown()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r1 = <org.apache.http.nio.reactor.IOReactorStatus: org.apache.http.nio.reactor.IOReactorStatus ACTIVE>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r8 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $z1 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: boolean interestOpsQueueing>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : if i0 <= 0 goto $r19 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void closeSessions()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r23 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$r8 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>", "org.apache.http.impl.nio.reactor.AbstractIOReactor.execute")]
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : goto [?= virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void hardShutdown()>()]
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r13 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r15 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : goto [?= $r13 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>]
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : exitmonitor r27
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : specialinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void processNewChannels()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : specialinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void processClosedSessions()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r17 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void closeNewChannels()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r19 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : goto [?= return]
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r26 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.lang.Object statusMutex>
org.apache.http.nio.protocol.RequestExecutionHandler.submitRequest : return null
org.apache.http.nio.protocol.RequestExecutionHandler.submitRequest : interfaceinvoke r1.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("job", r3)
org.apache.http.nio.protocol.RequestExecutionHandler.submitRequest : if r2 != null goto $r6 = interfaceinvoke r2.<java.util.Queue: java.lang.Object poll()>()
org.apache.http.nio.protocol.RequestExecutionHandler.submitRequest : $r7 = virtualinvoke r0.<org.apache.http.nio.protocol.RequestExecutionHandler: org.apache.http.HttpRequest generateRequest(org.apache.http.nio.protocol.Job)>(r3)
org.apache.http.nio.protocol.RequestExecutionHandler.submitRequest : if r3 == null goto return null
org.apache.http.nio.protocol.RequestExecutionHandler.submitRequest : $r6 = interfaceinvoke r2.<java.util.Queue: java.lang.Object poll()>()
org.apache.http.nio.protocol.RequestExecutionHandler.submitRequest : $r4 = interfaceinvoke r1.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("queue")
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.setRequestHandler : r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.nio.protocol.NHttpRequestHandler requestHandler> = r1
org.apache.http.impl.nio.reactor.IOSessionImpl.removeAttribute : $r2 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.util.Map attributes>
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : $b6 = l2 cmp 0L
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : l2 = l0
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : exitmonitor r1
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : $b4 = l0 cmp 0L
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : $r4 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : $r3 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.lang.Object statusMutex>
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : $r6 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.lang.Object statusMutex>
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.nio.protocol.RequestExecutionHandler.initalizeContext : interfaceinvoke r1.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("queue", r2)
org.apache.http.impl.nio.DefaultNHttpClientConnection.createResponseParser : $r4 = new org.apache.http.impl.nio.codecs.DefaultHttpResponseParser
org.apache.http.impl.nio.codecs.DefaultHttpRequestParser.createMessage : $r2 = new org.apache.http.message.ParserCursor
org.apache.http.impl.nio.codecs.DefaultHttpRequestParser.createMessage : $r6 = r0.<org.apache.http.impl.nio.codecs.DefaultHttpRequestParser: org.apache.http.HttpRequestFactory requestFactory>
org.apache.http.impl.nio.codecs.DefaultHttpRequestParser.createMessage : $r5 = r0.<org.apache.http.impl.nio.codecs.DefaultHttpRequestParser: org.apache.http.message.LineParser lineParser>
org.apache.http.impl.nio.codecs.DefaultHttpRequestParser.createMessage : $r2 = virtualinvoke r0.<org.apache.http.impl.nio.codecs.DefaultHttpRequestParser: org.apache.http.HttpRequest createMessage(org.apache.http.util.CharArrayBuffer)>(r1)
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ResponseTriggerImpl.submitResponse : $z0 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ResponseTriggerImpl: boolean triggered>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ResponseTriggerImpl.submitResponse : r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ResponseTriggerImpl: boolean triggered> = 1
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ResponseTriggerImpl.submitResponse : $r5 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ResponseTriggerImpl: org.apache.http.nio.IOControl iocontrol>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ResponseTriggerImpl.submitResponse : if r1 != null goto $z0 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ResponseTriggerImpl: boolean triggered>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ResponseTriggerImpl.submitResponse : $r4 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ResponseTriggerImpl: org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState connState>
org.apache.http.impl.nio.reactor.IOReactorConfig.isTcpNoDelay : $z0 = r0.<org.apache.http.impl.nio.reactor.IOReactorConfig: boolean tcpNoDelay>
org.apache.http.impl.nio.DefaultClientIOEventDispatch.ensureNotNull : if r1 != null goto return
org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState.getProducingEntity : $r1 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: org.apache.http.nio.entity.ProducingNHttpEntity producingEntity>
org.apache.http.impl.nio.codecs.DefaultHttpResponseParser.createMessage : $r2 = new org.apache.http.message.ParserCursor
org.apache.http.impl.nio.codecs.DefaultHttpResponseParser.createMessage : $r2 = virtualinvoke r0.<org.apache.http.impl.nio.codecs.DefaultHttpResponseParser: org.apache.http.HttpResponse createMessage(org.apache.http.util.CharArrayBuffer)>(r1)
org.apache.http.impl.nio.codecs.DefaultHttpResponseParser.createMessage : $r6 = r0.<org.apache.http.impl.nio.codecs.DefaultHttpResponseParser: org.apache.http.HttpResponseFactory responseFactory>
org.apache.http.impl.nio.codecs.DefaultHttpResponseParser.createMessage : $r5 = r0.<org.apache.http.impl.nio.codecs.DefaultHttpResponseParser: org.apache.http.message.LineParser lineParser>
org.apache.http.impl.nio.NHttpConnectionBase.requestOutput : $r1 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.nio.reactor.IOSession session>
org.apache.http.impl.nio.DefaultClientIOEventDispatch.connected : interfaceinvoke r2.<org.apache.http.nio.NHttpClientIOTarget: void setSocketTimeout(int)>(i0)
org.apache.http.impl.nio.DefaultClientIOEventDispatch.connected : interfaceinvoke r1.<org.apache.http.nio.reactor.IOSession: void setAttribute(java.lang.String,java.lang.Object)>("http.connection", r2)
org.apache.http.impl.nio.DefaultClientIOEventDispatch.connected : $r4 = r0.<org.apache.http.impl.nio.DefaultClientIOEventDispatch: org.apache.http.params.HttpParams params>
org.apache.http.impl.nio.DefaultClientIOEventDispatch.connected : r2 = virtualinvoke r0.<org.apache.http.impl.nio.DefaultClientIOEventDispatch: org.apache.http.nio.NHttpClientIOTarget createConnection(org.apache.http.nio.reactor.IOSession)>(r1)
org.apache.http.impl.nio.DefaultClientIOEventDispatch.connected : r3 = interfaceinvoke r1.<org.apache.http.nio.reactor.IOSession: java.lang.Object getAttribute(java.lang.String)>("http.session.attachment")
org.apache.http.impl.nio.DefaultClientIOEventDispatch.connected : goto [?= return]
org.apache.http.impl.nio.DefaultClientIOEventDispatch.connected : $r5 = r0.<org.apache.http.impl.nio.DefaultClientIOEventDispatch: org.apache.http.nio.NHttpClientHandler handler>
org.apache.http.testserver.HttpClientNio.createIOEventDispatch : $r3 = new org.apache.http.impl.nio.DefaultClientIOEventDispatch
org.apache.http.impl.nio.reactor.ListenerEndpointImpl.waitFor : exitmonitor r1
org.apache.http.impl.nio.reactor.ListenerEndpointImpl.waitFor : $z0 = r0.<org.apache.http.impl.nio.reactor.ListenerEndpointImpl: boolean completed>
org.apache.http.impl.nio.reactor.ListenerEndpointImpl.waitFor : $z1 = r0.<org.apache.http.impl.nio.reactor.ListenerEndpointImpl: boolean completed>
org.apache.http.impl.nio.reactor.ListenerEndpointImpl.waitFor : r1 = r0
org.apache.http.impl.nio.reactor.ListenerEndpointImpl.waitFor : virtualinvoke r0.<java.lang.Object: void wait()>()
org.apache.http.impl.nio.DefaultNHttpClientConnection.submitRequest : $r9 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.impl.HttpConnectionMetricsImpl connMetrics>
org.apache.http.impl.nio.DefaultNHttpClientConnection.submitRequest : if r1 != null goto virtualinvoke r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: void assertNotClosed()>()
org.apache.http.impl.nio.DefaultNHttpClientConnection.submitRequest : $r10 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.nio.reactor.IOSession session>
org.apache.http.impl.nio.DefaultNHttpClientConnection.submitRequest : $r3 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.HttpRequest request>
org.apache.http.impl.nio.DefaultNHttpClientConnection.submitRequest : virtualinvoke r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: void assertNotClosed()>()
org.apache.http.impl.nio.DefaultNHttpClientConnection.submitRequest : $r6 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.impl.nio.reactor.SessionOutputBufferImpl outbuf>
org.apache.http.impl.nio.DefaultNHttpClientConnection.submitRequest : $r5 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.nio.NHttpMessageWriter requestWriter>
org.apache.http.impl.nio.DefaultNHttpClientConnection.submitRequest : $z1 = r1 instanceof org.apache.http.HttpEntityEnclosingRequest
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker.getException : $r1 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker: java.lang.Exception exception>
org.apache.http.nio.protocol.AsyncNHttpClientHandler.initialize : r3 = interfaceinvoke r1.<org.apache.http.nio.NHttpClientConnection: org.apache.http.protocol.HttpContext getContext()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.initialize : interfaceinvoke r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.connection", r1)
org.apache.http.nio.protocol.AsyncNHttpClientHandler.initialize : $r4 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler: org.apache.http.nio.protocol.NHttpRequestExecutionHandler execHandler>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.setHandled : r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: boolean handled> = z0
org.apache.http.impl.nio.reactor.IOSessionImpl.clearEvent : $r10 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.SelectionKey key>
org.apache.http.impl.nio.reactor.IOSessionImpl.clearEvent : $r7 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.SelectionKey key>
org.apache.http.impl.nio.reactor.IOSessionImpl.clearEvent : $r2 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: org.apache.http.impl.nio.reactor.InterestOpsCallback interestOpsCallback>
org.apache.http.impl.nio.reactor.IOSessionImpl.clearEvent : $r8 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.SelectionKey key>
org.apache.http.impl.nio.reactor.IOSessionImpl.clearEvent : $i1 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: int status>
org.apache.http.impl.nio.NHttpConnectionBase.setSession : $r2 = new org.apache.http.impl.nio.SessionHttpContext
org.apache.http.impl.nio.NHttpConnectionBase.setSession : $r5 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.nio.reactor.IOSession session>
org.apache.http.impl.nio.NHttpConnectionBase.setSession : r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.nio.reactor.IOSession session> = r1
org.apache.http.impl.nio.NHttpConnectionBase.setSession : $r4 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.nio.reactor.IOSession session>
org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState.setResponse : r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: org.apache.http.HttpResponse response> = r1
org.apache.http.impl.nio.NHttpConnectionBase.hasBufferedInput : $z0 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: boolean hasBufferedInput>
org.apache.http.impl.nio.NHttpConnectionBase.getRemotePort : $r2 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.nio.reactor.IOSession session>
org.apache.http.impl.nio.NHttpConnectionBase.getRemotePort : $r3 = (java.net.InetSocketAddress) r1
org.apache.http.impl.nio.NHttpConnectionBase.getRemotePort : $z0 = r1 instanceof java.net.InetSocketAddress
org.apache.http.testserver.HttpServerNio.join : $r1 = r0.<org.apache.http.testserver.HttpServerNio: org.apache.http.testserver.HttpServerNio$IOReactorThread thread>
org.apache.http.testserver.HttpServerNio.join : $r2 = r0.<org.apache.http.testserver.HttpServerNio: org.apache.http.testserver.HttpServerNio$IOReactorThread thread>
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeNewChannels : $r5 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Queue newChannels>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.getResponse : $r1 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.HttpResponse response>
org.apache.http.impl.nio.reactor.AbstractIOReactor.queueClosedSession : $r2 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Queue closedSessions>
org.apache.http.impl.nio.reactor.AbstractIOReactor.queueClosedSession : if r1 == null goto return
org.apache.http.impl.nio.reactor.IOSessionImpl.setSocketTimeout : r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: int socketTimeout> = i0
org.apache.http.impl.nio.reactor.IOSessionImpl.setSocketTimeout : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker.run : $r2 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker: org.apache.http.impl.nio.reactor.BaseIOReactor dispatcher>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker.run : goto [?= return]
org.apache.http.impl.nio.reactor.IOReactorConfig.getSoLinger : $i0 = r0.<org.apache.http.impl.nio.reactor.IOReactorConfig: int soLinger>
org.apache.http.impl.nio.reactor.IOSessionImpl.close : goto [?= $r6 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: org.apache.http.impl.nio.reactor.SessionClosedCallback sessionClosedCallback>]
org.apache.http.impl.nio.reactor.IOSessionImpl.close : $r10 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.SelectionKey key>
org.apache.http.impl.nio.reactor.IOSessionImpl.close : $r3 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.SelectionKey key>
org.apache.http.impl.nio.reactor.IOSessionImpl.close : $r2 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.SelectionKey key>
org.apache.http.impl.nio.reactor.IOSessionImpl.close : $r8 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.SelectionKey key>
org.apache.http.impl.nio.reactor.IOSessionImpl.close : $r7 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: org.apache.http.impl.nio.reactor.SessionClosedCallback sessionClosedCallback>
org.apache.http.impl.nio.reactor.IOSessionImpl.close : r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: int status> = 2147483647
org.apache.http.impl.nio.reactor.IOSessionImpl.close : $i0 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: int status>
org.apache.http.impl.nio.reactor.IOSessionImpl.close : $r6 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: org.apache.http.impl.nio.reactor.SessionClosedCallback sessionClosedCallback>
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests : $r24 = r0.<org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests : goto [?= $r22 = new org.apache.http.impl.nio.reactor.SessionRequestHandle]
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$r5 = r0.<org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor: java.util.Queue requestQueue>", "org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests")]
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests : virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>(0)
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests : $r17 = virtualinvoke r1.<org.apache.http.impl.nio.reactor.SessionRequestImpl: java.net.SocketAddress getRemoteAddress()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests : $r11 = virtualinvoke r1.<org.apache.http.impl.nio.reactor.SessionRequestImpl: java.net.SocketAddress getLocalAddress()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests : $r12 = virtualinvoke r1.<org.apache.http.impl.nio.reactor.SessionRequestImpl: java.net.SocketAddress getRemoteAddress()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests : $z0 = virtualinvoke r1.<org.apache.http.impl.nio.reactor.SessionRequestImpl: boolean isCompleted()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests : virtualinvoke r1.<org.apache.http.impl.nio.reactor.SessionRequestImpl: void setKey(java.nio.channels.SelectionKey)>(r25)
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests : r2 = staticinvoke <java.nio.channels.SocketChannel: java.nio.channels.SocketChannel open()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests : $r5 = r0.<org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor: java.util.Queue requestQueue>
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests : $r22 = new org.apache.http.impl.nio.reactor.SessionRequestHandle
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests : goto [?= (branch)]
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests : goto [?= virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>(0)]
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests : if z2 == 0 goto (branch)
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processSessionRequests : $r13 = virtualinvoke r1.<org.apache.http.impl.nio.reactor.SessionRequestImpl: java.net.SocketAddress getLocalAddress()>()
org.apache.http.impl.nio.reactor.BaseIOReactor.sessionClosed : goto [?= return]
org.apache.http.impl.nio.reactor.BaseIOReactor.sessionClosed : $r3 = r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: org.apache.http.nio.reactor.IOEventDispatch eventDispatch>
org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState.isValid : $z0 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: boolean valid>
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.flush : return i0
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.flush : if r1 != null goto virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: void setOutputMode()>()
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.flush : $r3 = r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.flush : virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: void setOutputMode()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.setHandlerResolver : r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: org.apache.http.nio.protocol.NHttpRequestHandlerResolver handlerResolver> = r1
org.apache.http.impl.nio.codecs.AbstractMessageWriter.write : $r11 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageWriter: org.apache.http.nio.reactor.SessionOutputBuffer sessionBuffer>
org.apache.http.impl.nio.codecs.AbstractMessageWriter.write : if r1 != null goto virtualinvoke r0.<org.apache.http.impl.nio.codecs.AbstractMessageWriter: void writeHeadLine(org.apache.http.HttpMessage)>(r1)
org.apache.http.impl.nio.codecs.AbstractMessageWriter.write : $r10 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageWriter: org.apache.http.util.CharArrayBuffer lineBuf>
org.apache.http.impl.nio.codecs.AbstractMessageWriter.write : $r6 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageWriter: org.apache.http.nio.reactor.SessionOutputBuffer sessionBuffer>
org.apache.http.impl.nio.codecs.AbstractMessageWriter.write : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.http.impl.nio.codecs.AbstractMessageWriter.write : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.http.impl.nio.codecs.AbstractMessageWriter.write : virtualinvoke r0.<org.apache.http.impl.nio.codecs.AbstractMessageWriter: void writeHeadLine(org.apache.http.HttpMessage)>(r1)
org.apache.http.impl.nio.codecs.AbstractMessageWriter.write : r2 = interfaceinvoke r1.<org.apache.http.HttpMessage: org.apache.http.HeaderIterator headerIterator()>()
org.apache.http.impl.nio.NHttpConnectionBase.createTransportMetrics : $r1 = new org.apache.http.impl.io.HttpTransportMetricsImpl
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.setResponse : r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.HttpResponse response> = r1
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.finishOutput : $r1 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.nio.entity.ProducingNHttpEntity producingEntity>
org.apache.http.impl.nio.SessionHttpContext.getAttribute : $r2 = r0.<org.apache.http.impl.nio.SessionHttpContext: org.apache.http.nio.reactor.IOSession iosession>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.getRequestHandler : return r2
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.getRequestHandler : $r6 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: org.apache.http.nio.protocol.NHttpRequestHandlerResolver handlerResolver>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.getRequestHandler : $r5 = interfaceinvoke r1.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.getRequestHandler : $r4 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: org.apache.http.nio.protocol.NHttpRequestHandlerResolver handlerResolver>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.getRequestHandler : r2 = null
org.apache.http.nio.protocol.Job.getPattern : $r1 = r0.<org.apache.http.nio.protocol.Job: java.lang.String pattern>
org.apache.http.nio.protocol.Job.getStatusCode : $i0 = r0.<org.apache.http.nio.protocol.Job: int statusCode>
org.apache.http.impl.nio.DefaultClientIOEventDispatch.outputReady : $r4 = r0.<org.apache.http.impl.nio.DefaultClientIOEventDispatch: org.apache.http.nio.NHttpClientHandler handler>
org.apache.http.impl.nio.DefaultClientIOEventDispatch.outputReady : specialinvoke r0.<org.apache.http.impl.nio.DefaultClientIOEventDispatch: void ensureNotNull(org.apache.http.nio.NHttpClientIOTarget)>(r2)
org.apache.http.impl.nio.DefaultClientIOEventDispatch.outputReady : $r3 = interfaceinvoke r1.<org.apache.http.nio.reactor.IOSession: java.lang.Object getAttribute(java.lang.String)>("http.connection")
org.apache.http.impl.nio.DefaultClientIOEventDispatch.outputReady : goto [?= return]
org.apache.http.nio.protocol.NHttpHandlerBase.setEventListener : r0.<org.apache.http.nio.protocol.NHttpHandlerBase: org.apache.http.nio.protocol.EventListener eventListener> = r1
org.apache.http.nio.protocol.AsyncNHttpClientHandler.processResponse : interfaceinvoke r1.<org.apache.http.nio.NHttpClientConnection: void requestOutput()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.processResponse : $z2 = interfaceinvoke r1.<org.apache.http.nio.NHttpClientConnection: boolean isOpen()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.processResponse : r3 = interfaceinvoke r1.<org.apache.http.nio.NHttpClientConnection: org.apache.http.protocol.HttpContext getContext()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.processResponse : $z0 = virtualinvoke r2.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: boolean isValid()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.processResponse : $r5 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler: org.apache.http.nio.protocol.NHttpRequestExecutionHandler execHandler>
org.apache.http.nio.protocol.AsyncNHttpClientHandler.processResponse : $r6 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler: org.apache.http.ConnectionReuseStrategy connStrategy>
org.apache.http.nio.protocol.AsyncNHttpClientHandler.processResponse : virtualinvoke r2.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: void resetInput()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.processResponse : virtualinvoke r2.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: void resetOutput()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.processResponse : r4 = virtualinvoke r2.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: org.apache.http.HttpResponse getResponse()>()
org.apache.http.impl.nio.DefaultNHttpServerConnection.produceOutput : $r11 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.ContentEncoder contentEncoder>
org.apache.http.impl.nio.DefaultNHttpServerConnection.produceOutput : $i4 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: int status>
org.apache.http.impl.nio.DefaultNHttpServerConnection.produceOutput : $r17 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.reactor.IOSession session>
org.apache.http.impl.nio.DefaultNHttpServerConnection.produceOutput : $r4 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.impl.nio.reactor.SessionOutputBufferImpl outbuf>
org.apache.http.impl.nio.DefaultNHttpServerConnection.produceOutput : $r3 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.impl.nio.reactor.SessionOutputBufferImpl outbuf>
org.apache.http.impl.nio.DefaultNHttpServerConnection.produceOutput : $i3 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: int status>
org.apache.http.impl.nio.DefaultNHttpServerConnection.produceOutput : $r8 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.impl.nio.reactor.SessionOutputBufferImpl outbuf>
org.apache.http.impl.nio.DefaultNHttpServerConnection.produceOutput : if i0 <= 0 goto $r8 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.impl.nio.reactor.SessionOutputBufferImpl outbuf>
org.apache.http.impl.nio.DefaultNHttpServerConnection.produceOutput : $r14 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.ContentEncoder contentEncoder>
org.apache.http.impl.nio.DefaultNHttpServerConnection.produceOutput : interfaceinvoke r1.<org.apache.http.nio.NHttpServiceHandler: void responseReady(org.apache.http.nio.NHttpServerConnection)>(r0)
org.apache.http.impl.nio.DefaultNHttpServerConnection.produceOutput : goto [?= return]
org.apache.http.impl.nio.DefaultNHttpServerConnection.produceOutput : $r7 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.impl.io.HttpTransportMetricsImpl outTransportMetrics>
org.apache.http.impl.nio.DefaultNHttpServerConnection.produceOutput : $i2 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: int status>
org.apache.http.impl.nio.reactor.BaseIOReactor.sessionCreated : $r4 = r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: org.apache.http.nio.reactor.IOEventDispatch eventDispatch>
org.apache.http.impl.nio.reactor.BaseIOReactor.sessionCreated : goto [?= return]
org.apache.http.impl.nio.DefaultNHttpServerConnection.resetInput : r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.HttpRequest request> = null
org.apache.http.impl.nio.DefaultNHttpServerConnection.resetInput : r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.ContentDecoder contentDecoder> = null
org.apache.http.impl.nio.DefaultNHttpServerConnection.resetInput : $r1 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.NHttpMessageParser requestParser>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.addChannel : $i0 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: int currentWorker>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.addChannel : $r3 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.impl.nio.reactor.BaseIOReactor[] dispatchers>
org.apache.http.impl.nio.DefaultNHttpServerConnection.createRequestParser : $r4 = new org.apache.http.impl.nio.codecs.DefaultHttpRequestParser
org.apache.http.impl.nio.NHttpConnectionBase.requestInput : $r1 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.nio.reactor.IOSession session>
org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState.setRequest : r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: org.apache.http.HttpRequest request> = r1
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.setRequest : r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.HttpRequest request> = r1
org.apache.http.testserver.SimpleNHttpRequestHandlerResolver.lookup : $r2 = r0.<org.apache.http.testserver.SimpleNHttpRequestHandlerResolver: org.apache.http.nio.protocol.NHttpRequestHandler handler>
org.apache.http.impl.nio.DefaultNHttpServerConnection.submitResponse : $r6 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.impl.nio.reactor.SessionOutputBufferImpl outbuf>
org.apache.http.impl.nio.DefaultNHttpServerConnection.submitResponse : $r9 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>()
org.apache.http.impl.nio.DefaultNHttpServerConnection.submitResponse : virtualinvoke r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: void assertNotClosed()>()
org.apache.http.impl.nio.DefaultNHttpServerConnection.submitResponse : $r7 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>()
org.apache.http.impl.nio.DefaultNHttpServerConnection.submitResponse : $r5 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.NHttpMessageWriter responseWriter>
org.apache.http.impl.nio.DefaultNHttpServerConnection.submitResponse : $r8 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.impl.HttpConnectionMetricsImpl connMetrics>
org.apache.http.impl.nio.DefaultNHttpServerConnection.submitResponse : if r1 != null goto virtualinvoke r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: void assertNotClosed()>()
org.apache.http.impl.nio.DefaultNHttpServerConnection.submitResponse : $r3 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.HttpResponse response>
org.apache.http.impl.nio.DefaultNHttpServerConnection.submitResponse : $r10 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.reactor.IOSession session>
org.apache.http.impl.nio.DefaultNHttpServerConnection.submitResponse : $r10 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.reactor.IOSession session>
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeCRLF : $r1 = <org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: byte[] CRLF>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.getHttpException : $r1 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.HttpException httpex>
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvents : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvents : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvents : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvents : interfaceinvoke r1.<java.util.Set: void clear()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvents : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void processEvent(java.nio.channels.SelectionKey)>(r3)
org.apache.http.impl.nio.reactor.IOSessionImpl.resetLastWrite : r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: long lastAccessTime> = l0
org.apache.http.impl.nio.reactor.IOSessionImpl.resetLastWrite : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.impl.nio.reactor.IOSessionImpl.resetLastWrite : r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: long lastWriteTime> = l0
org.apache.http.impl.nio.reactor.SessionRequestImpl.getRemoteAddress : $r1 = r0.<org.apache.http.impl.nio.reactor.SessionRequestImpl: java.net.SocketAddress remoteAddress>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : virtualinvoke r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: void resetInput()>()
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $r14 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.HttpRequest request>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : interfaceinvoke r1.<org.apache.http.nio.NHttpServiceHandler: void requestReceived(org.apache.http.nio.NHttpServerConnection)>(r0)
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $r10 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.NHttpMessageParser requestParser>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $r5 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.HttpRequest request>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $r21 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.ContentDecoder contentDecoder>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : if i0 <= 0 goto $r14 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.HttpRequest request>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $r24 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.impl.nio.reactor.SessionInputBufferImpl inbuf>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : virtualinvoke r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: void close()>()
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $r9 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.impl.io.HttpTransportMetricsImpl inTransportMetrics>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $r6 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.NHttpMessageParser requestParser>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $i1 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: int status>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : if i0 <= 0 goto $r10 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.NHttpMessageParser requestParser>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $r15 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.HttpRequest request>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : goto [?= return]
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $r19 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.impl.HttpConnectionMetricsImpl connMetrics>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $r20 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.ContentDecoder contentDecoder>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : if i0 != -1 goto $r21 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.ContentDecoder contentDecoder>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$DefaultThreadFactory.newThread : $r2 = new java.lang.Thread
org.apache.http.nio.util.ExpandableBuffer.hasData : $r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.nio.util.ExpandableBuffer.hasData : virtualinvoke r0.<org.apache.http.nio.util.ExpandableBuffer: void setOutputMode()>()
org.apache.http.testserver.HttpClientNio.setExceptionHandler : $r2 = r0.<org.apache.http.testserver.HttpClientNio: org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor ioReactor>
org.apache.http.impl.nio.NHttpConnectionBase.close : $r3 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.nio.reactor.IOSession session>
org.apache.http.impl.nio.NHttpConnectionBase.close : $i0 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: int status>
org.apache.http.impl.nio.NHttpConnectionBase.close : $r1 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.impl.nio.reactor.SessionOutputBufferImpl outbuf>
org.apache.http.impl.nio.NHttpConnectionBase.close : r0.<org.apache.http.impl.nio.NHttpConnectionBase: int status> = 2
org.apache.http.impl.nio.NHttpConnectionBase.close : r0.<org.apache.http.impl.nio.NHttpConnectionBase: int status> = 1
org.apache.http.impl.nio.reactor.BaseIOReactor.validate : $l1 = r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: long lastTimeoutCheck>
org.apache.http.impl.nio.reactor.BaseIOReactor.validate : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.impl.nio.reactor.BaseIOReactor.validate : $r6 = r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: java.util.Set bufferingSessions>
org.apache.http.impl.nio.reactor.IOReactorConfig.getConnectTimeout : $i0 = r0.<org.apache.http.impl.nio.reactor.IOReactorConfig: int connectTimeout>
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void writable(java.nio.channels.SelectionKey)>(r1)
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : virtualinvoke r1.<java.nio.channels.SelectionKey: java.lang.Object attach(java.lang.Object)>(null)
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : $z3 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isWritable()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void queueClosedSession(org.apache.http.nio.reactor.IOSession)>(r2)
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : r3 = $r5
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void readable(java.nio.channels.SelectionKey)>(r1)
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : $z1 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isConnectable()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : $z2 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isReadable()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : virtualinvoke r2.<org.apache.http.impl.nio.reactor.IOSessionImpl: void resetLastRead()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : $z0 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isAcceptable()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : $r4 = virtualinvoke r1.<java.nio.channels.SelectionKey: java.lang.Object attachment()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : goto [?= return]
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : virtualinvoke r2.<org.apache.http.impl.nio.reactor.IOSessionImpl: void resetLastWrite()>()
org.apache.http.impl.nio.reactor.ListenerEndpointImpl.completed : r0.<org.apache.http.impl.nio.reactor.ListenerEndpointImpl: boolean completed> = 1
org.apache.http.impl.nio.reactor.ListenerEndpointImpl.completed : r0.<org.apache.http.impl.nio.reactor.ListenerEndpointImpl: java.net.SocketAddress address> = r1
org.apache.http.impl.nio.reactor.ListenerEndpointImpl.completed : virtualinvoke r0.<java.lang.Object: void notifyAll()>()
org.apache.http.impl.nio.reactor.ListenerEndpointImpl.completed : exitmonitor r2
org.apache.http.impl.nio.reactor.ListenerEndpointImpl.completed : if r1 != null goto $z0 = r0.<org.apache.http.impl.nio.reactor.ListenerEndpointImpl: boolean completed>
org.apache.http.impl.nio.reactor.ListenerEndpointImpl.completed : r2 = r0
org.apache.http.impl.nio.reactor.ListenerEndpointImpl.completed : $z0 = r0.<org.apache.http.impl.nio.reactor.ListenerEndpointImpl: boolean completed>
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : $r10 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.nio.NHttpMessageParser responseParser>
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : $r14 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.HttpResponse response>
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : $r18 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.HttpResponse response>
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : $r15 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.HttpResponse response>
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : $r19 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.impl.HttpConnectionMetricsImpl connMetrics>
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : $r5 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.HttpResponse response>
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : $r21 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.nio.ContentDecoder contentDecoder>
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : $r20 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.nio.ContentDecoder contentDecoder>
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : if i0 <= 0 goto $r14 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.HttpResponse response>
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : $r6 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.nio.NHttpMessageParser responseParser>
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : virtualinvoke r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: void resetInput()>()
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : $i1 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: int status>
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : if i0 <= 0 goto $r10 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.nio.NHttpMessageParser responseParser>
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : $r17 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.HttpResponse response>
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : goto [?= return]
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : interfaceinvoke r1.<org.apache.http.nio.NHttpClientHandler: void responseReceived(org.apache.http.nio.NHttpClientConnection)>(r0)
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : $r24 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.impl.nio.reactor.SessionInputBufferImpl inbuf>
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : if i0 != -1 goto $r21 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.nio.ContentDecoder contentDecoder>
org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput : $r9 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.impl.io.HttpTransportMetricsImpl inTransportMetrics>
org.apache.http.impl.nio.DefaultServerIOEventDispatch.disconnected : if r2 == null goto return
org.apache.http.impl.nio.DefaultServerIOEventDispatch.disconnected : $r3 = interfaceinvoke r1.<org.apache.http.nio.reactor.IOSession: java.lang.Object getAttribute(java.lang.String)>("http.connection")
org.apache.http.impl.nio.DefaultServerIOEventDispatch.disconnected : $r4 = r0.<org.apache.http.impl.nio.DefaultServerIOEventDispatch: org.apache.http.nio.NHttpServiceHandler handler>
org.apache.http.impl.nio.reactor.BaseIOReactor.execute : r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: org.apache.http.nio.reactor.IOEventDispatch eventDispatch> = r1
org.apache.http.impl.nio.reactor.BaseIOReactor.execute : virtualinvoke r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: void execute()>()
org.apache.http.impl.nio.reactor.BaseIOReactor.execute : if r1 != null goto r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: org.apache.http.nio.reactor.IOEventDispatch eventDispatch> = r1
org.apache.http.nio.util.ExpandableBuffer.setInputMode : r0.<org.apache.http.nio.util.ExpandableBuffer: int mode> = 0
org.apache.http.nio.util.ExpandableBuffer.setInputMode : $i0 = r0.<org.apache.http.nio.util.ExpandableBuffer: int mode>
org.apache.http.nio.util.ExpandableBuffer.setInputMode : $r4 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.nio.util.ExpandableBuffer.setInputMode : $r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.testserver.HttpClientNio.openConnection : $r3 = r0.<org.apache.http.testserver.HttpClientNio: org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor ioReactor>
org.apache.http.testserver.HttpServerNio.getParams : $r1 = r0.<org.apache.http.testserver.HttpServerNio: org.apache.http.params.HttpParams params>
org.apache.http.nio.protocol.TestAsyncNHttpHandlers$8.generateRequest : $r8 = new org.apache.http.message.BasicHttpRequest
org.apache.http.nio.protocol.TestAsyncNHttpHandlers$8.generateRequest : $r2 = new java.lang.StringBuilder
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : exitmonitor r1
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : $r9 = <org.apache.http.nio.reactor.IOReactorStatus: org.apache.http.nio.reactor.IOReactorStatus SHUTDOWN_REQUEST>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: void awaitShutdown(long)>(l0)
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : $r11 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : $r6 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: void shutdown(long)>(2000L)
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : $r3 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.lang.Object statusLock>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : goto [?= return]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : $r4 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.DefaultServerIOEventDispatch.outputReady : $r3 = interfaceinvoke r1.<org.apache.http.nio.reactor.IOSession: java.lang.Object getAttribute(java.lang.String)>("http.connection")
org.apache.http.impl.nio.DefaultServerIOEventDispatch.outputReady : specialinvoke r0.<org.apache.http.impl.nio.DefaultServerIOEventDispatch: void ensureNotNull(org.apache.http.nio.NHttpServerIOTarget)>(r2)
org.apache.http.impl.nio.DefaultServerIOEventDispatch.outputReady : goto [?= return]
org.apache.http.impl.nio.DefaultServerIOEventDispatch.outputReady : $r4 = r0.<org.apache.http.impl.nio.DefaultServerIOEventDispatch: org.apache.http.nio.NHttpServiceHandler handler>
org.apache.http.impl.nio.reactor.SessionRequestImpl.getLocalAddress : $r1 = r0.<org.apache.http.impl.nio.reactor.SessionRequestImpl: java.net.SocketAddress localAddress>
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.cancelRequests : $r2 = r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: java.util.Queue requestQueue>
org.apache.http.nio.protocol.NHttpHandlerBase.canResponseHaveBody : return 0
org.apache.http.nio.protocol.NHttpHandlerBase.canResponseHaveBody : if r1 == null goto $r6 = interfaceinvoke r2.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>()
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.listen : return r3
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.listen : r3 = specialinvoke r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: org.apache.http.impl.nio.reactor.ListenerEndpointImpl createEndpoint(java.net.SocketAddress)>(r1)
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.listen : $r6 = r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: java.util.Queue requestQueue>
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.listen : $r4 = r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.listen : $r7 = r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.prepareSocket : $r3 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.impl.nio.reactor.IOReactorConfig config>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.prepareSocket : $r2 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.impl.nio.reactor.IOReactorConfig config>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.prepareSocket : if i0 < 0 goto return
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.prepareSocket : $r4 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.impl.nio.reactor.IOReactorConfig config>
org.apache.http.testserver.HttpServerNio.getStatus : $r1 = r0.<org.apache.http.testserver.HttpServerNio: org.apache.http.impl.nio.reactor.DefaultListeningIOReactor ioReactor>
org.apache.http.testserver.HttpClientNio.start : $r2 = new org.apache.http.testserver.HttpClientNio$IOReactorThread
org.apache.http.testserver.HttpClientNio.start : $r3 = r0.<org.apache.http.testserver.HttpClientNio: org.apache.http.testserver.HttpClientNio$IOReactorThread thread>
org.apache.http.impl.nio.NHttpConnectionBase.getHttpRequest : $r1 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.HttpRequest request>
org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState.getRequest : $r1 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: org.apache.http.HttpRequest request>
org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState.resetOutput : r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: org.apache.http.HttpRequest request> = null
org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState.resetOutput : $r1 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: org.apache.http.nio.entity.ProducingNHttpEntity producingEntity>
org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState.resetOutput : r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: int outputState> = 0
org.apache.http.impl.nio.codecs.DefaultHttpRequestWriter.writeHeadLine : $r6 = r0.<org.apache.http.impl.nio.codecs.DefaultHttpRequestWriter: org.apache.http.nio.reactor.SessionOutputBuffer sessionBuffer>
org.apache.http.impl.nio.codecs.DefaultHttpRequestWriter.writeHeadLine : $r3 = r0.<org.apache.http.impl.nio.codecs.DefaultHttpRequestWriter: org.apache.http.message.LineFormatter lineFormatter>
org.apache.http.impl.nio.codecs.DefaultHttpRequestWriter.writeHeadLine : $r2 = (org.apache.http.HttpRequest) r1
org.apache.http.nio.protocol.RequestHandler.handle : $r13 = new java.lang.StringBuilder
org.apache.http.nio.protocol.RequestHandler.handle : $r15 = new org.apache.http.nio.entity.NStringEntity
org.apache.http.nio.protocol.RequestHandler.handle : if i0 != -1 goto r5 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.http.nio.protocol.RequestHandler.handle : n0 = null
org.apache.http.nio.protocol.RequestHandler.handle : $z0 = r1 instanceof org.apache.http.HttpEntityEnclosingRequest
org.apache.http.nio.protocol.RequestHandler.handle : $i3 = i0 + 1
org.apache.http.nio.protocol.RequestHandler.handle : i0 = virtualinvoke r10.<java.lang.String: int indexOf(int)>(120)
org.apache.http.nio.protocol.RequestHandler.handle : interfaceinvoke r2.<org.apache.http.HttpResponse: void setEntity(org.apache.http.HttpEntity)>(r16)
org.apache.http.nio.protocol.RequestHandler.handle : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
org.apache.http.nio.protocol.RequestHandler.handle : r5 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.http.nio.protocol.RequestHandler.handle : i2 = 0
org.apache.http.nio.protocol.RequestHandler.handle : $z1 = r0.<org.apache.http.nio.protocol.RequestHandler: boolean chunking>
org.apache.http.nio.protocol.RequestHandler.handle : $r9 = interfaceinvoke r1.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>()
org.apache.http.nio.protocol.RequestHandler.handle : r8 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.http.impl.nio.reactor.IOSessionImpl.getAttribute : $r2 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.util.Map attributes>
org.apache.http.impl.nio.reactor.ListenerEndpointImpl.setKey : r0.<org.apache.http.impl.nio.reactor.ListenerEndpointImpl: java.nio.channels.SelectionKey key> = r1
org.apache.http.impl.nio.reactor.IOSessionImpl.getRemoteAddress : $z0 = r1 instanceof java.nio.channels.SocketChannel
org.apache.http.impl.nio.reactor.IOSessionImpl.getRemoteAddress : r1 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.ByteChannel channel>
org.apache.http.impl.nio.reactor.IOSessionImpl.getRemoteAddress : $r2 = (java.nio.channels.SocketChannel) r1
org.apache.http.impl.nio.codecs.AbstractMessageParser.reset : r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: boolean endOfStream> = 0
org.apache.http.impl.nio.codecs.AbstractMessageParser.reset : $r1 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: java.util.List headerBufs>
org.apache.http.impl.nio.codecs.AbstractMessageParser.reset : r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.HttpMessage message> = null
org.apache.http.impl.nio.codecs.AbstractMessageParser.reset : r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state> = 0
org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState.reset : virtualinvoke r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: void resetOutput()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState.reset : virtualinvoke r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: void resetInput()>()
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.write : i1 = lengthof r1
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.write : virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: void ensureCapacity(int)>(i2)
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.write : $r3 = r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.write : virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: void setInputMode()>()
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.write : if r1 != null goto virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: void setInputMode()>()
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.write : $r2 = r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.write : b0 = 0
org.apache.http.impl.nio.reactor.SessionRequestImpl.waitFor : exitmonitor r1
org.apache.http.impl.nio.reactor.SessionRequestImpl.waitFor : $z0 = r0.<org.apache.http.impl.nio.reactor.SessionRequestImpl: boolean completed>
org.apache.http.impl.nio.reactor.SessionRequestImpl.waitFor : $z1 = r0.<org.apache.http.impl.nio.reactor.SessionRequestImpl: boolean completed>
org.apache.http.impl.nio.reactor.SessionRequestImpl.waitFor : r1 = r0
org.apache.http.impl.nio.reactor.SessionRequestImpl.waitFor : virtualinvoke r0.<java.lang.Object: void wait()>()
org.apache.http.nio.protocol.SimpleNHttpRequestHandler.handle : virtualinvoke r0.<org.apache.http.nio.protocol.SimpleNHttpRequestHandler: void handle(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r1, r2, r4)
org.apache.http.nio.protocol.SimpleNHttpRequestHandler.handle : interfaceinvoke r3.<org.apache.http.nio.protocol.NHttpResponseTrigger: void submitResponse(org.apache.http.HttpResponse)>(r2)
org.apache.http.impl.nio.NHttpConnectionBase.getRemoteAddress : $r2 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.nio.reactor.IOSession session>
org.apache.http.impl.nio.NHttpConnectionBase.getRemoteAddress : $r3 = (java.net.InetSocketAddress) r1
org.apache.http.impl.nio.NHttpConnectionBase.getRemoteAddress : $z0 = r1 instanceof java.net.InetSocketAddress
org.apache.http.impl.nio.reactor.SessionRequestImpl.completed : if r1 != null goto $z0 = r0.<org.apache.http.impl.nio.reactor.SessionRequestImpl: boolean completed>
org.apache.http.impl.nio.reactor.SessionRequestImpl.completed : $z0 = r0.<org.apache.http.impl.nio.reactor.SessionRequestImpl: boolean completed>
org.apache.http.impl.nio.reactor.SessionRequestImpl.completed : virtualinvoke r0.<java.lang.Object: void notifyAll()>()
org.apache.http.impl.nio.reactor.SessionRequestImpl.completed : exitmonitor r2
org.apache.http.impl.nio.reactor.SessionRequestImpl.completed : r2 = r0
org.apache.http.impl.nio.reactor.SessionRequestImpl.completed : $r6 = r0.<org.apache.http.impl.nio.reactor.SessionRequestImpl: org.apache.http.nio.reactor.SessionRequestCallback callback>
org.apache.http.impl.nio.reactor.SessionRequestImpl.completed : r0.<org.apache.http.impl.nio.reactor.SessionRequestImpl: org.apache.http.nio.reactor.IOSession session> = r1
org.apache.http.impl.nio.reactor.SessionRequestImpl.completed : r0.<org.apache.http.impl.nio.reactor.SessionRequestImpl: boolean completed> = 1
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : $r8 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler: org.apache.http.nio.protocol.NHttpRequestExecutionHandler execHandler>
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : if r6 == null goto virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: void setRequest(org.apache.http.HttpRequest)>(r4)
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : $r9 = new org.apache.http.params.DefaultedHttpParams
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : $r12 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler: org.apache.http.protocol.HttpProcessor httpProcessor>
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : $z0 = r4 instanceof org.apache.http.HttpEntityEnclosingRequest
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : if r4 != null goto $r9 = new org.apache.http.params.DefaultedHttpParams
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : interfaceinvoke r1.<org.apache.http.nio.NHttpClientConnection: void submitRequest(org.apache.http.HttpRequest)>(r4)
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : r6 = null
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: void setOutputState(int)>(1)
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : if r5 == null goto $r16 = virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: org.apache.http.nio.entity.ProducingNHttpEntity getProducingEntity()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: void setRequest(org.apache.http.HttpRequest)>(r4)
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : $r7 = interfaceinvoke r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.nio.conn-state")
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : interfaceinvoke r2.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.request", r4)
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : $z1 = r6 instanceof org.apache.http.nio.entity.ProducingNHttpEntity
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : $i1 = virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: int getOutputState()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : goto [?= return]
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : r2 = interfaceinvoke r1.<org.apache.http.nio.NHttpClientConnection: org.apache.http.protocol.HttpContext getContext()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.requestReady : r5 = null
org.apache.http.impl.nio.DefaultNHttpClientConnection.createRequestWriter : $r3 = new org.apache.http.impl.nio.codecs.DefaultHttpRequestWriter
org.apache.http.testserver.HttpClientNio.getParams : $r1 = r0.<org.apache.http.testserver.HttpClientNio: org.apache.http.params.HttpParams params>
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.validateAddress : $z1 = virtualinvoke r2.<java.net.InetSocketAddress: boolean isUnresolved()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.validateAddress : r2 = (java.net.InetSocketAddress) r1
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.validateAddress : $z0 = r1 instanceof java.net.InetSocketAddress
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.validateAddress : if r1 != null goto $z0 = r1 instanceof java.net.InetSocketAddress
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : r5 = virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: org.apache.http.HttpRequest getRequest()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : $r9 = new org.apache.http.params.DefaultedHttpParams
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : r4 = interfaceinvoke r1.<org.apache.http.nio.NHttpClientConnection: org.apache.http.HttpResponse getHttpResponse()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : interfaceinvoke r1.<org.apache.http.nio.NHttpClientConnection: void resetInput()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : $i2 = virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: int getOutputState()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : $i3 = virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: int getOutputState()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : $z0 = virtualinvoke r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler: boolean canResponseHaveBody(org.apache.http.HttpRequest,org.apache.http.HttpResponse)>(r5, r4)
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: void setResponse(org.apache.http.HttpResponse)>(r4)
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : $r12 = interfaceinvoke r4.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : if i0 >= 200 goto virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: void setResponse(org.apache.http.HttpResponse)>(r4)
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : $r13 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler: org.apache.http.protocol.HttpProcessor httpProcessor>
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : $r8 = interfaceinvoke r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.nio.conn-state")
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : interfaceinvoke r2.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.response", r4)
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : specialinvoke r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler: void processResponse(org.apache.http.nio.NHttpClientConnection,org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState)>(r1, r3)
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : goto [?= return]
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : r2 = interfaceinvoke r1.<org.apache.http.nio.NHttpClientConnection: org.apache.http.protocol.HttpContext getContext()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.responseReceived : interfaceinvoke r4.<org.apache.http.HttpResponse: void setEntity(org.apache.http.HttpEntity)>(null)
org.apache.http.nio.util.HeapByteBufferAllocator.allocate : $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i0)
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.isHandled : $z0 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: boolean handled>
org.apache.http.impl.nio.reactor.AbstractIOReactor.addChannel : $r4 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractIOReactor.addChannel : $r3 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Queue newChannels>
org.apache.http.impl.nio.reactor.AbstractIOReactor.addChannel : if r1 != null goto $r3 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Queue newChannels>
org.apache.http.impl.nio.DefaultServerIOEventDispatch.connected : $r3 = r0.<org.apache.http.impl.nio.DefaultServerIOEventDispatch: org.apache.http.params.HttpParams params>
org.apache.http.impl.nio.DefaultServerIOEventDispatch.connected : r2 = virtualinvoke r0.<org.apache.http.impl.nio.DefaultServerIOEventDispatch: org.apache.http.nio.NHttpServerIOTarget createConnection(org.apache.http.nio.reactor.IOSession)>(r1)
org.apache.http.impl.nio.DefaultServerIOEventDispatch.connected : interfaceinvoke r1.<org.apache.http.nio.reactor.IOSession: void setAttribute(java.lang.String,java.lang.Object)>("http.connection", r2)
org.apache.http.impl.nio.DefaultServerIOEventDispatch.connected : goto [?= return]
org.apache.http.impl.nio.DefaultServerIOEventDispatch.connected : interfaceinvoke r1.<org.apache.http.nio.reactor.IOSession: void setSocketTimeout(int)>(i0)
org.apache.http.impl.nio.DefaultServerIOEventDispatch.connected : $r4 = r0.<org.apache.http.impl.nio.DefaultServerIOEventDispatch: org.apache.http.nio.NHttpServiceHandler handler>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.requestReceived : $r11 = new org.apache.http.params.DefaultedHttpParams
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.requestReceived : virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: void setRequest(org.apache.http.HttpRequest)>(r4)
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.requestReceived : r5 = specialinvoke r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: org.apache.http.nio.protocol.NHttpRequestHandler getRequestHandler(org.apache.http.HttpRequest)>(r4)
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.requestReceived : specialinvoke r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: void processRequest(org.apache.http.nio.NHttpServerConnection,org.apache.http.HttpRequest)>(r1, r4)
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.requestReceived : virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: void setRequestHandler(org.apache.http.nio.protocol.NHttpRequestHandler)>(r5)
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.requestReceived : r2 = interfaceinvoke r1.<org.apache.http.nio.NHttpServerConnection: org.apache.http.protocol.HttpContext getContext()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.requestReceived : $r10 = interfaceinvoke r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.nio.conn-state")
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.requestReceived : $r15 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_1>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.requestReceived : $r14 = interfaceinvoke r4.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.requestReceived : goto [?= return]
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.requestReceived : r4 = interfaceinvoke r1.<org.apache.http.nio.NHttpServerConnection: org.apache.http.HttpRequest getHttpRequest()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.requestReceived : interfaceinvoke r1.<org.apache.http.nio.NHttpServerConnection: void suspendInput()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.requestReceived : $z1 = r4 instanceof org.apache.http.HttpEntityEnclosingRequest
org.apache.http.impl.nio.reactor.AbstractIOReactor.getSession : $r2 = virtualinvoke r1.<java.nio.channels.SelectionKey: java.lang.Object attachment()>()
org.apache.http.impl.nio.reactor.BaseIOReactor.setExceptionHandler : r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: org.apache.http.nio.reactor.IOReactorExceptionHandler exceptionHandler> = r1
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.processRequest : $r13 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: org.apache.http.protocol.HttpProcessor httpProcessor>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.processRequest : r7 = virtualinvoke r4.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.nio.protocol.NHttpRequestHandler getRequestHandler()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.processRequest : $r11 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_1>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.processRequest : $r9 = interfaceinvoke r3.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.nio.conn-state")
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.processRequest : r3 = interfaceinvoke r1.<org.apache.http.nio.NHttpServerConnection: org.apache.http.protocol.HttpContext getContext()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.processRequest : $r14 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: org.apache.http.HttpResponseFactory responseFactory>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.processRequest : if r7 == null goto $r18 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: org.apache.http.HttpResponseFactory responseFactory>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.processRequest : $r10 = interfaceinvoke r2.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.processRequest : goto [?= return]
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.processRequest : goto [?= (branch)]
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.processRequest : $r15 = new org.apache.http.params.DefaultedHttpParams
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.processRequest : $r12 = new org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ResponseTriggerImpl
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.processRequest : interfaceinvoke r7.<org.apache.http.nio.protocol.NHttpRequestHandler: void handle(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.nio.protocol.NHttpResponseTrigger,org.apache.http.protocol.HttpContext)>(r2, r8, r6, r3)
org.apache.http.nio.protocol.AsyncNHttpClientHandler.closed : $r9 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler: org.apache.http.nio.protocol.NHttpRequestExecutionHandler execHandler>
org.apache.http.nio.protocol.AsyncNHttpClientHandler.closed : $r11 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler: org.apache.http.nio.protocol.EventListener eventListener>
org.apache.http.nio.protocol.AsyncNHttpClientHandler.closed : virtualinvoke r3.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: void reset()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.closed : $r5 = interfaceinvoke r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.nio.conn-state")
org.apache.http.nio.protocol.AsyncNHttpClientHandler.closed : r2 = interfaceinvoke r1.<org.apache.http.nio.NHttpClientConnection: org.apache.http.protocol.HttpContext getContext()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.closed : $r10 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler: org.apache.http.nio.protocol.EventListener eventListener>
org.apache.http.nio.protocol.AsyncNHttpClientHandler.closed : goto [?= $r9 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler: org.apache.http.nio.protocol.NHttpRequestExecutionHandler execHandler>]
org.apache.http.impl.nio.NHttpConnectionBase.createContentDecoder : $r6 = new org.apache.http.impl.nio.codecs.LengthDelimitedDecoder
org.apache.http.impl.nio.NHttpConnectionBase.createContentDecoder : $b2 = l0 cmp -1L
org.apache.http.impl.nio.NHttpConnectionBase.createContentDecoder : $b1 = l0 cmp -2L
org.apache.http.impl.nio.codecs.AbstractMessageParser.parseHeader : $r4 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.util.CharArrayBuffer lineBuf>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parseHeader : $r9 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: java.util.List headerBufs>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parseHeader : r1 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.util.CharArrayBuffer lineBuf>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parseHeader : r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.util.CharArrayBuffer lineBuf> = null
org.apache.http.impl.nio.codecs.AbstractMessageParser.parseHeader : $r3 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: java.util.List headerBufs>
org.apache.http.nio.util.ExpandableBuffer.ensureCapacity : $r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.testserver.HttpServerNio.createIOEventDispatch : $r3 = new org.apache.http.impl.nio.DefaultServerIOEventDispatch
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : $b6 = l2 cmp 0L
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : l2 = l0
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : exitmonitor r1
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : $b4 = l0 cmp 0L
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : $r6 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.lang.Object statusLock>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : $r3 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.lang.Object statusLock>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : $r4 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.nio.protocol.Job.getFailureMessage : $r1 = r0.<org.apache.http.nio.protocol.Job: java.lang.String failureMessage>
org.apache.http.testserver.HttpServerNio$IOReactorThread.run : goto [?= return]
org.apache.http.testserver.HttpServerNio$IOReactorThread.run : $r2 = r0.<org.apache.http.testserver.HttpServerNio$IOReactorThread: org.apache.http.testserver.HttpServerNio this$0>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.getIOException : $r1 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: java.io.IOException ioex>
org.apache.http.impl.nio.reactor.IOSessionImpl.setAttribute : $r3 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.util.Map attributes>
org.apache.http.impl.nio.reactor.IOReactorConfig.getSelectInterval : $l0 = r0.<org.apache.http.impl.nio.reactor.IOReactorConfig: long selectInterval>
org.apache.http.impl.nio.reactor.BaseIOReactor.writable : $r4 = r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: org.apache.http.nio.reactor.IOEventDispatch eventDispatch>
org.apache.http.impl.nio.reactor.BaseIOReactor.writable : goto [?= return]
org.apache.http.impl.nio.reactor.BaseIOReactor.writable : r2 = virtualinvoke r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: org.apache.http.nio.reactor.IOSession getSession(java.nio.channels.SelectionKey)>(r1)
org.apache.http.impl.nio.reactor.IOReactorConfig.isInterestOpQueued : $z0 = r0.<org.apache.http.impl.nio.reactor.IOReactorConfig: boolean interestOpQueued>
org.apache.http.impl.nio.reactor.SessionRequestImpl.setConnectTimeout : $i1 = r0.<org.apache.http.impl.nio.reactor.SessionRequestImpl: int connectTimeout>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.connected : interfaceinvoke r2.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.connection", r1)
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.connected : $r5 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: org.apache.http.nio.protocol.EventListener eventListener>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.connected : r2 = interfaceinvoke r1.<org.apache.http.nio.NHttpServerConnection: org.apache.http.protocol.HttpContext getContext()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.connected : interfaceinvoke r2.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.nio.conn-state", r3)
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.connected : $r6 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: org.apache.http.nio.protocol.EventListener eventListener>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.connected : $r4 = new org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState
org.apache.http.impl.nio.NHttpConnectionBase.prepareDecoder : return r3
org.apache.http.impl.nio.NHttpConnectionBase.prepareDecoder : r4 = interfaceinvoke r1.<org.apache.http.HttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>("Content-Type")
org.apache.http.impl.nio.NHttpConnectionBase.prepareDecoder : $r2 = new org.apache.http.entity.BasicHttpEntity
org.apache.http.impl.nio.NHttpConnectionBase.prepareDecoder : virtualinvoke r3.<org.apache.http.entity.BasicHttpEntity: void setContentType(org.apache.http.Header)>(r4)
org.apache.http.impl.nio.NHttpConnectionBase.prepareDecoder : virtualinvoke r3.<org.apache.http.entity.BasicHttpEntity: void setChunked(boolean)>(0)
org.apache.http.impl.nio.NHttpConnectionBase.prepareDecoder : $r7 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.nio.reactor.IOSession session>
org.apache.http.impl.nio.NHttpConnectionBase.prepareDecoder : $b1 = l0 cmp -2L
org.apache.http.impl.nio.NHttpConnectionBase.prepareDecoder : $b2 = l0 cmp -1L
org.apache.http.impl.nio.NHttpConnectionBase.prepareDecoder : virtualinvoke r3.<org.apache.http.entity.BasicHttpEntity: void setContentLength(long)>(l0)
org.apache.http.impl.nio.NHttpConnectionBase.prepareDecoder : r5 = interfaceinvoke r1.<org.apache.http.HttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>("Content-Encoding")
org.apache.http.impl.nio.NHttpConnectionBase.prepareDecoder : if r4 == null goto r5 = interfaceinvoke r1.<org.apache.http.HttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>("Content-Encoding")
org.apache.http.impl.nio.NHttpConnectionBase.prepareDecoder : $r6 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.entity.ContentLengthStrategy incomingContentStrategy>
org.apache.http.impl.nio.NHttpConnectionBase.prepareDecoder : if r5 == null goto return r3
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : $r5 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : interfaceinvoke r4.<org.apache.http.nio.reactor.IOSession: void close()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : goto [?= return]
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : if r4 == null goto (branch)
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : $r7 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : r4 = virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOSession getSession(java.nio.channels.SelectionKey)>(r3)
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.http.nio.protocol.Job.getCount : $i0 = r0.<org.apache.http.nio.protocol.Job: int count>
org.apache.http.impl.nio.DefaultClientIOEventDispatch.disconnected : $r4 = r0.<org.apache.http.impl.nio.DefaultClientIOEventDispatch: org.apache.http.nio.NHttpClientHandler handler>
org.apache.http.impl.nio.DefaultClientIOEventDispatch.disconnected : if r2 == null goto return
org.apache.http.impl.nio.DefaultClientIOEventDispatch.disconnected : $r3 = interfaceinvoke r1.<org.apache.http.nio.reactor.IOSession: java.lang.Object getAttribute(java.lang.String)>("http.connection")
org.apache.http.impl.nio.NHttpConnectionBase.getHttpResponse : $r1 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.HttpResponse response>
org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState.resetInput : $r1 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: org.apache.http.nio.entity.ConsumingNHttpEntity consumingEntity>
org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState.resetInput : r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: org.apache.http.HttpResponse response> = null
org.apache.http.testserver.HttpServerNio.execute : $r3 = r0.<org.apache.http.testserver.HttpServerNio: org.apache.http.params.HttpParams params>
org.apache.http.testserver.HttpServerNio.execute : $r4 = r0.<org.apache.http.testserver.HttpServerNio: org.apache.http.impl.nio.reactor.DefaultListeningIOReactor ioReactor>
org.apache.http.testserver.HttpServerNio.getListenerEndpoint : $r1 = r0.<org.apache.http.testserver.HttpServerNio: org.apache.http.nio.reactor.ListenerEndpoint endpoint>
org.apache.http.testserver.HttpServerNio.access$000 : specialinvoke r0.<org.apache.http.testserver.HttpServerNio: void execute(org.apache.http.nio.NHttpServiceHandler)>(r1)
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : i12 = i12 + -1
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r15 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.charset.CharsetDecoder chardecoder>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r11 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r9 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r13 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.charset.CharsetDecoder chardecoder>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void setLength(int)>(i17)
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void ensureCapacity(int)>(i7)
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $i15 = i12 - 1
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r20 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.CharBuffer charbuffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r5 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r33 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.CharBuffer charbuffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : z1 = 1
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $i13 = i12 - 1
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : z1 = 0
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r28 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.charset.CharsetDecoder chardecoder>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r24 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.CharBuffer charbuffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : goto [?= (branch)]
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : i0 = -1
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r34 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.CharBuffer charbuffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : if z0 == 0 goto return 0
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r8 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $z4 = virtualinvoke r2.<java.nio.charset.CoderResult: boolean isOverflow()>()
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : i17 = i12 + -1
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : goto [?= $r26 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>]
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : return 1
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : return 0
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r31 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.CharBuffer charbuffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$r15 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.charset.CharsetDecoder chardecoder>", "org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine")]
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : i0 = i1 + 1
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void setLength(int)>(i12)
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : if i12 <= 0 goto return 1
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $z3 = virtualinvoke r2.<java.nio.charset.CoderResult: boolean isError()>()
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : if b2 != 10 goto i1 = i1 + 1
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $z5 = virtualinvoke r2.<java.nio.charset.CoderResult: boolean isUnderflow()>()
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r3 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r26 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r18 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.CharBuffer charbuffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : i12 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: int length()>()
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: void setOutputMode()>()
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : if z1 != 0 goto $r8 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.DefaultServerIOEventDispatch.ensureNotNull : if r1 != null goto return
org.apache.http.testserver.HttpClientNio.join : $r1 = r0.<org.apache.http.testserver.HttpClientNio: org.apache.http.testserver.HttpClientNio$IOReactorThread thread>
org.apache.http.testserver.HttpClientNio.join : $r2 = r0.<org.apache.http.testserver.HttpClientNio: org.apache.http.testserver.HttpClientNio$IOReactorThread thread>
org.apache.http.testserver.HttpClientNio.execute : $r3 = r0.<org.apache.http.testserver.HttpClientNio: org.apache.http.params.HttpParams params>
org.apache.http.testserver.HttpClientNio.execute : $r4 = r0.<org.apache.http.testserver.HttpClientNio: org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor ioReactor>
org.apache.http.impl.nio.NHttpConnectionBase.isOpen : $i0 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: int status>
org.apache.http.nio.protocol.AsyncNHttpClientHandler.connected : r3 = interfaceinvoke r1.<org.apache.http.nio.NHttpClientConnection: org.apache.http.protocol.HttpContext getContext()>()
org.apache.http.nio.protocol.AsyncNHttpClientHandler.connected : virtualinvoke r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler: void requestReady(org.apache.http.nio.NHttpClientConnection)>(r1)
org.apache.http.nio.protocol.AsyncNHttpClientHandler.connected : $r6 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler: org.apache.http.nio.protocol.EventListener eventListener>
org.apache.http.nio.protocol.AsyncNHttpClientHandler.connected : $r7 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler: org.apache.http.nio.protocol.EventListener eventListener>
org.apache.http.nio.protocol.AsyncNHttpClientHandler.connected : $r5 = new org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState
org.apache.http.nio.protocol.AsyncNHttpClientHandler.connected : interfaceinvoke r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.nio.conn-state", r4)
org.apache.http.nio.protocol.AsyncNHttpClientHandler.connected : specialinvoke r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler: void initialize(org.apache.http.nio.NHttpClientConnection,java.lang.Object)>(r1, r2)
org.apache.http.testserver.HttpServerNio.shutdown : $r2 = r0.<org.apache.http.testserver.HttpServerNio: org.apache.http.impl.nio.reactor.DefaultListeningIOReactor ioReactor>
org.apache.http.testserver.HttpServerNio.shutdown : goto [?= return]
org.apache.http.testserver.HttpServerNio.shutdown : virtualinvoke r0.<org.apache.http.testserver.HttpServerNio: void join(long)>(500L)
org.apache.http.impl.nio.reactor.IOReactorConfig.getSoTimeout : $i0 = r0.<org.apache.http.impl.nio.reactor.IOReactorConfig: int soTimeout>
org.apache.http.impl.nio.reactor.ChannelEntry.getAttachment : $r1 = r0.<org.apache.http.impl.nio.reactor.ChannelEntry: org.apache.http.impl.nio.reactor.SessionRequestImpl sessionRequest>
org.apache.http.impl.nio.reactor.ChannelEntry.getAttachment : return null
org.apache.http.impl.nio.reactor.ChannelEntry.getAttachment : $r2 = r0.<org.apache.http.impl.nio.reactor.ChannelEntry: org.apache.http.impl.nio.reactor.SessionRequestImpl sessionRequest>
org.apache.http.impl.nio.codecs.DefaultHttpResponseWriter.writeHeadLine : $r3 = r0.<org.apache.http.impl.nio.codecs.DefaultHttpResponseWriter: org.apache.http.message.LineFormatter lineFormatter>
org.apache.http.impl.nio.codecs.DefaultHttpResponseWriter.writeHeadLine : $r6 = r0.<org.apache.http.impl.nio.codecs.DefaultHttpResponseWriter: org.apache.http.nio.reactor.SessionOutputBuffer sessionBuffer>
org.apache.http.impl.nio.codecs.DefaultHttpResponseWriter.writeHeadLine : $r2 = (org.apache.http.HttpResponse) r1
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processSessionRequests : virtualinvoke r22.<java.nio.channels.SelectionKey: java.lang.Object attach(java.lang.Object)>(r1)
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processSessionRequests : virtualinvoke r1.<org.apache.http.impl.nio.reactor.ListenerEndpointImpl: void setKey(java.nio.channels.SelectionKey)>(r22)
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processSessionRequests : $r21 = r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processSessionRequests : goto [?= virtualinvoke r3.<java.nio.channels.ServerSocketChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>(0)]
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processSessionRequests : $r11 = virtualinvoke r3.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>()
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processSessionRequests : goto [?= $r21 = r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: java.nio.channels.Selector selector>]
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processSessionRequests : goto [?= $r27 = r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: java.util.Set endpoints>]
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processSessionRequests : $r5 = r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: java.util.Queue requestQueue>
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processSessionRequests : r3 = staticinvoke <java.nio.channels.ServerSocketChannel: java.nio.channels.ServerSocketChannel open()>()
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processSessionRequests : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$r5 = r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: java.util.Queue requestQueue>", "org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processSessionRequests")]
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processSessionRequests : virtualinvoke r3.<java.nio.channels.ServerSocketChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>(0)
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processSessionRequests : r2 = virtualinvoke r1.<org.apache.http.impl.nio.reactor.ListenerEndpointImpl: java.net.SocketAddress getAddress()>()
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processSessionRequests : $r28 = virtualinvoke r3.<java.nio.channels.ServerSocketChannel: java.net.ServerSocket socket()>()
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processSessionRequests : $r27 = r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: java.util.Set endpoints>
org.apache.http.impl.nio.DefaultServerIOEventDispatch.createByteBufferAllocator : $r1 = new org.apache.http.nio.util.HeapByteBufferAllocator
org.apache.http.testserver.HttpClientNio.getStatus : $r1 = r0.<org.apache.http.testserver.HttpClientNio: org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor ioReactor>
org.apache.http.impl.nio.reactor.SessionRequestImpl.getSession : $r4 = r0.<org.apache.http.impl.nio.reactor.SessionRequestImpl: org.apache.http.nio.reactor.IOSession session>
org.apache.http.impl.nio.reactor.SessionRequestImpl.getSession : r2 = r0
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents : $l2 = r0.<org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor: long lastTimeoutCheck>
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents : specialinvoke r0.<org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor: void processEvent(java.nio.channels.SelectionKey)>(r3)
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents : l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents : $r4 = r0.<org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents : specialinvoke r0.<org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor: void processSessionRequests()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents : if i0 <= 0 goto l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents : interfaceinvoke r1.<java.util.Set: void clear()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : $r17 = new org.apache.http.impl.nio.reactor.AbstractIOReactor$1
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : r2 = virtualinvoke r1.<org.apache.http.impl.nio.reactor.ChannelEntry: java.nio.channels.SocketChannel getChannel()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : $z0 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: boolean interestOpsQueueing>
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : $r12 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : if r26 == null goto virtualinvoke r3.<java.nio.channels.SelectionKey: java.lang.Object attach(java.lang.Object)>(r6)
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : interfaceinvoke r6.<org.apache.http.nio.reactor.IOSession: void setSocketTimeout(int)>(i0)
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : virtualinvoke r2.<java.nio.channels.SocketChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>(0)
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : r26 = virtualinvoke r1.<org.apache.http.impl.nio.reactor.ChannelEntry: org.apache.http.impl.nio.reactor.SessionRequestImpl getSessionRequest()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : $r8 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Queue newChannels>
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : goto [?= $r17 = new org.apache.http.impl.nio.reactor.AbstractIOReactor$1]
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : $r22 = virtualinvoke r2.<java.nio.channels.SocketChannel: java.net.Socket socket()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : virtualinvoke r3.<java.nio.channels.SelectionKey: java.lang.Object attach(java.lang.Object)>(r6)
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : virtualinvoke r26.<org.apache.http.impl.nio.reactor.SessionRequestImpl: void completed(org.apache.http.nio.reactor.IOSession)>(r6)
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$r8 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Queue newChannels>", "org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels")]
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : i0 = 0
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : goto [?= $r24 = virtualinvoke r1.<org.apache.http.impl.nio.reactor.ChannelEntry: java.lang.Object getAttachment()>()]
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void sessionCreated(java.nio.channels.SelectionKey,org.apache.http.nio.reactor.IOSession)>(r3, r6)
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : r19 = null
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : $r25 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Set sessions>
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : $r21 = new org.apache.http.impl.nio.reactor.IOSessionImpl
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : goto [?= (branch)]
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : $r24 = virtualinvoke r1.<org.apache.http.impl.nio.reactor.ChannelEntry: java.lang.Object getAttachment()>()
org.apache.http.impl.nio.reactor.SessionRequestImpl.setKey : r0.<org.apache.http.impl.nio.reactor.SessionRequestImpl: java.nio.channels.SelectionKey key> = r1
org.apache.http.impl.nio.reactor.AbstractIOReactor.processClosedSessions : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$r3 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Queue closedSessions>", "org.apache.http.impl.nio.reactor.AbstractIOReactor.processClosedSessions")]
org.apache.http.impl.nio.reactor.AbstractIOReactor.processClosedSessions : $r3 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Queue closedSessions>
org.apache.http.impl.nio.reactor.AbstractIOReactor.processClosedSessions : $r6 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Set sessions>
org.apache.http.impl.nio.reactor.AbstractIOReactor.processClosedSessions : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void sessionClosed(org.apache.http.nio.reactor.IOSession)>(r1)
org.apache.http.impl.nio.DefaultClientIOEventDispatch.createConnection : $r2 = new org.apache.http.impl.nio.DefaultNHttpClientConnection
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r34 = virtualinvoke r31.<org.apache.http.impl.nio.reactor.BaseIOReactor: org.apache.http.nio.reactor.IOReactorStatus getStatus()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : virtualinvoke r31.<org.apache.http.impl.nio.reactor.BaseIOReactor: void awaitShutdown(long)>(l3)
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : virtualinvoke r40.<java.lang.Thread: void join(long)>(l3)
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r17 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : if r4 == null goto (branch)
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : r4 = virtualinvoke r3.<java.nio.channels.SelectionKey: java.nio.channels.SelectableChannel channel()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: void cancelRequests()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : i6 = 0
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r15 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r9 = <org.apache.http.nio.reactor.IOReactorStatus: org.apache.http.nio.reactor.IOReactorStatus SHUTTING_DOWN>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : i1 = 0
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : exitmonitor r1
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : r20 = interfaceinvoke r19.<java.util.Set: java.util.Iterator iterator()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r29 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.impl.nio.reactor.IOReactorConfig config>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : goto [?= return]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : goto [?= i1 = 0]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : interfaceinvoke r4.<java.nio.channels.Channel: void close()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r30 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.impl.nio.reactor.BaseIOReactor[] dispatchers>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : goto [?= $r15 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.nio.channels.Selector selector>]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r7 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r32 = virtualinvoke r31.<org.apache.http.impl.nio.reactor.BaseIOReactor: org.apache.http.nio.reactor.IOReactorStatus getStatus()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r27 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.impl.nio.reactor.BaseIOReactor[] dispatchers>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : goto [?= $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : if r40 == null goto i6 = i6 + 1
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r24 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r18 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : virtualinvoke r28.<org.apache.http.impl.nio.reactor.BaseIOReactor: void gracefulShutdown()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r6 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.lang.Object statusLock>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r39 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.lang.Thread[] threads>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r21 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : i4 = 0
org.apache.http.nio.protocol.Job.getResult : $r1 = r0.<org.apache.http.nio.protocol.Job: java.lang.String result>
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : if i0 <= 0 goto z6 = 1
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : $r3 = r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: java.nio.charset.CharsetEncoder charencoder>
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: void setInputMode()>()
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : $z7 = virtualinvoke r18.<java.nio.charset.CoderResult: boolean isError()>()
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : $z9 = virtualinvoke r18.<java.nio.charset.CoderResult: boolean isUnderflow()>()
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : $r9 = r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: java.nio.CharBuffer charbuffer>
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : i2 = i0
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : i1 = 0
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : i0 = i0 - i2
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : if z6 == 0 goto specialinvoke r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: void writeCRLF()>()
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : z1 = 1
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : if z1 == 0 goto $r14 = r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: java.nio.CharBuffer charbuffer>
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : $r16 = r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: java.nio.charset.CharsetEncoder charencoder>
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : $r5 = r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: java.nio.CharBuffer charbuffer>
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : if r1 != null goto $i3 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: int length()>()
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : $z8 = virtualinvoke r18.<java.nio.charset.CoderResult: boolean isOverflow()>()
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : $z3 = virtualinvoke r2.<java.nio.charset.CoderResult: boolean isOverflow()>()
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if i0 <= 0 goto z6 = 1", "org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine")]
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : i0 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: int length()>()
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : $z2 = virtualinvoke r2.<java.nio.charset.CoderResult: boolean isError()>()
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : i1 = i1 + i2
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : z6 = 1
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : $r11 = r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: java.nio.charset.CharsetEncoder charencoder>
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : $r6 = r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: java.nio.CharBuffer charbuffer>
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : z0 = 1
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : z0 = 0
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : $r14 = r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: java.nio.CharBuffer charbuffer>
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : specialinvoke r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: void writeCRLF()>()
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : if i0 > i2 goto $r6 = r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: java.nio.CharBuffer charbuffer>
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if z6 == 0 goto specialinvoke r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: void writeCRLF()>()", "org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine")]
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if z1 == 0 goto $r14 = r0.<org.apache.http.impl.nio.reactor.SessionOutputBufferImpl: java.nio.CharBuffer charbuffer>", "org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine")]
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : $i3 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: int length()>()
org.apache.http.impl.nio.reactor.SessionOutputBufferImpl.writeLine : $z4 = virtualinvoke r2.<java.nio.charset.CoderResult: boolean isUnderflow()>()
org.apache.http.impl.nio.reactor.ListenerEndpointImpl.getAddress : $r1 = r0.<org.apache.http.impl.nio.reactor.ListenerEndpointImpl: java.net.SocketAddress address>
org.apache.http.impl.nio.NHttpConnectionBase.getContext : $r1 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.protocol.HttpContext context>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : return i0
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : $r4 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : $r3 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: void setInputMode()>()
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : if r1 != null goto virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: void setInputMode()>()
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.createEndpoint : return r4
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.createEndpoint : $r2 = new org.apache.http.impl.nio.reactor.ListenerEndpointImpl
org.apache.http.impl.nio.reactor.AbstractIOReactor.hardShutdown : specialinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void processClosedSessions()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.hardShutdown : exitmonitor r1
org.apache.http.impl.nio.reactor.AbstractIOReactor.hardShutdown : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void closeNewChannels()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.hardShutdown : $r4 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractIOReactor.hardShutdown : $r3 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.lang.Object statusMutex>
org.apache.http.impl.nio.reactor.AbstractIOReactor.hardShutdown : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void closeActiveChannels()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.hardShutdown : $r6 = <org.apache.http.nio.reactor.IOReactorStatus: org.apache.http.nio.reactor.IOReactorStatus SHUT_DOWN>
org.apache.http.nio.protocol.RequestExecutionHandler.finalizeContext : if r2 == null goto return
org.apache.http.nio.protocol.RequestExecutionHandler.finalizeContext : $r3 = interfaceinvoke r1.<org.apache.http.protocol.HttpContext: java.lang.Object removeAttribute(java.lang.String)>("job")
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent : $r7 = virtualinvoke r1.<java.nio.channels.SelectionKey: java.lang.Object attachment()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent : $r9 = virtualinvoke r2.<java.nio.channels.SocketChannel: java.net.Socket socket()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent : goto [?= $r15 = new org.apache.http.impl.nio.reactor.ChannelEntry]
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent : $r15 = new org.apache.http.impl.nio.reactor.ChannelEntry
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent : $r6 = virtualinvoke r1.<java.nio.channels.SelectionKey: java.nio.channels.SelectableChannel channel()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent : $z0 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isConnectable()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent : virtualinvoke r0.<org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor: void addChannel(org.apache.http.impl.nio.reactor.ChannelEntry)>(r16)
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent : virtualinvoke r2.<java.nio.channels.SocketChannel: boolean finishConnect()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent : r4 = virtualinvoke r3.<org.apache.http.impl.nio.reactor.SessionRequestHandle: org.apache.http.impl.nio.reactor.SessionRequestImpl getSessionRequest()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent : $z2 = virtualinvoke r2.<java.nio.channels.SocketChannel: boolean isConnected()>()
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent : goto [?= return]
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent : goto [?= (branch)]
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent : goto [?= virtualinvoke r1.<java.nio.channels.SelectionKey: void cancel()>()]
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent : virtualinvoke r1.<java.nio.channels.SelectionKey: void cancel()>()
org.apache.http.impl.nio.NHttpConnectionBase.suspendInput : $r1 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.nio.reactor.IOSession session>
org.apache.http.testserver.HttpClientNio$IOReactorThread.run : $r2 = r0.<org.apache.http.testserver.HttpClientNio$IOReactorThread: org.apache.http.testserver.HttpClientNio this$0>
org.apache.http.testserver.HttpClientNio$IOReactorThread.run : goto [?= return]
org.apache.http.nio.protocol.RequestExecutionHandler.handleResponse : r5 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>()
org.apache.http.nio.protocol.RequestExecutionHandler.handleResponse : $r9 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>()
org.apache.http.nio.protocol.RequestExecutionHandler.handleResponse : if r5 == null goto virtualinvoke r3.<org.apache.http.nio.protocol.Job: void setResult(int,java.lang.String)>(i0, r4)
org.apache.http.nio.protocol.RequestExecutionHandler.handleResponse : $r7 = interfaceinvoke r2.<org.apache.http.protocol.HttpContext: java.lang.Object removeAttribute(java.lang.String)>("job")
org.apache.http.nio.protocol.RequestExecutionHandler.handleResponse : virtualinvoke r3.<org.apache.http.nio.protocol.Job: void setResult(int,java.lang.String)>(i0, r4)
org.apache.http.nio.protocol.RequestExecutionHandler.handleResponse : r4 = null
org.apache.http.nio.protocol.RequestExecutionHandler.handleResponse : if r3 != null goto $r9 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>()
org.apache.http.testserver.HttpClientNio.access$000 : specialinvoke r0.<org.apache.http.testserver.HttpClientNio: void execute(org.apache.http.nio.NHttpClientHandler)>(r1)
org.apache.http.impl.nio.NHttpConnectionBase.setSocketTimeout : $r1 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.nio.reactor.IOSession session>
org.apache.http.nio.entity.NStringEntity.getContentLength : $r1 = r0.<org.apache.http.nio.entity.NStringEntity: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.DefaultServerIOEventDispatch.createHttpRequestFactory : $r1 = new org.apache.http.impl.DefaultHttpRequestFactory
org.apache.http.impl.nio.reactor.SessionRequestImpl.getException : $r4 = r0.<org.apache.http.impl.nio.reactor.SessionRequestImpl: java.io.IOException exception>
org.apache.http.impl.nio.reactor.SessionRequestImpl.getException : r2 = r0
org.apache.http.impl.nio.reactor.SessionRequestImpl.isCompleted : $z0 = r0.<org.apache.http.impl.nio.reactor.SessionRequestImpl: boolean completed>
org.apache.http.impl.nio.DefaultServerIOEventDispatch.inputReady : $r3 = interfaceinvoke r1.<org.apache.http.nio.reactor.IOSession: java.lang.Object getAttribute(java.lang.String)>("http.connection")
org.apache.http.impl.nio.DefaultServerIOEventDispatch.inputReady : specialinvoke r0.<org.apache.http.impl.nio.DefaultServerIOEventDispatch: void ensureNotNull(org.apache.http.nio.NHttpServerIOTarget)>(r2)
org.apache.http.impl.nio.DefaultServerIOEventDispatch.inputReady : goto [?= return]
org.apache.http.impl.nio.DefaultServerIOEventDispatch.inputReady : $r4 = r0.<org.apache.http.impl.nio.DefaultServerIOEventDispatch: org.apache.http.nio.NHttpServiceHandler handler>
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvent : $r10 = virtualinvoke r3.<java.nio.channels.SocketChannel: java.net.Socket socket()>()
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvent : r3 = null
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvent : $r16 = new org.apache.http.impl.nio.reactor.ChannelEntry
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvent : goto [?= $r16 = new org.apache.http.impl.nio.reactor.ChannelEntry]
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvent : if r3 == null goto (branch)
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvent : r3 = virtualinvoke r2.<java.nio.channels.ServerSocketChannel: java.nio.channels.SocketChannel accept()>()
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvent : $z0 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isAcceptable()>()
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvent : goto [?= return]
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvent : virtualinvoke r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: void addChannel(org.apache.http.impl.nio.reactor.ChannelEntry)>(r17)
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvent : $r5 = virtualinvoke r1.<java.nio.channels.SelectionKey: java.nio.channels.SelectableChannel channel()>()
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvent : goto [?= (branch)]
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : interfaceinvoke r1.<org.apache.http.nio.NHttpServerConnection: void requestInput()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : interfaceinvoke r1.<org.apache.http.nio.NHttpServerConnection: void requestInput()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : interfaceinvoke r4.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.request", null)
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : virtualinvoke r5.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: void reset()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : virtualinvoke r5.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: void reset()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : $r12 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: org.apache.http.ConnectionReuseStrategy connStrategy>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : $r12 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: org.apache.http.ConnectionReuseStrategy connStrategy>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : $r7 = interfaceinvoke r4.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.nio.conn-state")
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : $r9 = interfaceinvoke r3.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : virtualinvoke r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: void responseComplete(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r3, r4)
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : virtualinvoke r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: void responseComplete(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r3, r4)
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : if r6 != null goto return
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : if r6 == null goto interfaceinvoke r1.<org.apache.http.nio.NHttpServerConnection: void submitResponse(org.apache.http.HttpResponse)>(r3)
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : virtualinvoke r5.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: void finishInput()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : interfaceinvoke r4.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.request", r2)
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : $r8 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler: org.apache.http.protocol.HttpProcessor httpProcessor>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : r6 = interfaceinvoke r3.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : r4 = interfaceinvoke r1.<org.apache.http.nio.NHttpServerConnection: org.apache.http.protocol.HttpContext getContext()>()
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : interfaceinvoke r3.<org.apache.http.HttpResponse: void setEntity(org.apache.http.HttpEntity)>(null)
org.apache.http.nio.protocol.AsyncNHttpServiceHandler.sendResponse : interfaceinvoke r1.<org.apache.http.nio.NHttpServerConnection: void submitResponse(org.apache.http.HttpResponse)>(r3)
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r55 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r25 = <org.apache.http.nio.reactor.IOReactorStatus: org.apache.http.nio.reactor.IOReactorStatus ACTIVE>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r28 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorExceptionHandler exceptionHandler>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r47 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.lang.Thread[] threads>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : r59 = virtualinvoke r58.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker: java.lang.Exception getException()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r13 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r32 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker[] workers>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$r49 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.nio.channels.Selector selector>", "org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute")]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : if r1 != null goto $r12 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.lang.Object statusLock>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r34 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.lang.Thread[] threads>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : goto [?= virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: void doShutdown()>()]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r17 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r27 = new org.apache.http.impl.nio.reactor.BaseIOReactor
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r29 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.impl.nio.reactor.BaseIOReactor[] dispatchers>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : exitmonitor r2
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: void processEvents(int)>(i10)
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : goto [?= return]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r61 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r57 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker[] workers>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r30 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.impl.nio.reactor.BaseIOReactor[] dispatchers>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : i5 = 0
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r49 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r12 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.lang.Object statusLock>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r40 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : i12 = 0
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : if r59 == null goto i12 = i12 + 1
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : goto [?= $r55 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : i0 = 0
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : i7 = 0
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.getRequestHandler : $r1 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.nio.protocol.NHttpRequestHandler requestHandler>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.finishInput : $r1 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.nio.entity.ConsumingNHttpEntity consumingEntity>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.setExceptionHandler : r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorExceptionHandler exceptionHandler> = r1
org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState.getResponse : $r1 = r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: org.apache.http.HttpResponse response>
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.cancelRequests : $r2 = r0.<org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor: java.util.Queue requestQueue>
org.apache.http.impl.nio.DefaultNHttpClientConnection.resetInput : r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.nio.ContentDecoder contentDecoder> = null
org.apache.http.impl.nio.DefaultNHttpClientConnection.resetInput : $r1 = r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.nio.NHttpMessageParser responseParser>
org.apache.http.impl.nio.DefaultNHttpClientConnection.resetInput : r0.<org.apache.http.impl.nio.DefaultNHttpClientConnection: org.apache.http.HttpResponse response> = null
org.apache.http.impl.nio.SessionHttpContext.removeAttribute : $r2 = r0.<org.apache.http.impl.nio.SessionHttpContext: org.apache.http.nio.reactor.IOSession iosession>
org.apache.http.impl.nio.reactor.SessionRequestHandle.getSessionRequest : $r1 = r0.<org.apache.http.impl.nio.reactor.SessionRequestHandle: org.apache.http.impl.nio.reactor.SessionRequestImpl sessionRequest>
org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState.setOutputState : r0.<org.apache.http.nio.protocol.AsyncNHttpClientHandler$ClientConnState: int outputState> = i0
org.apache.http.impl.nio.NHttpConnectionBase.assertNotClosed : $i0 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: int status>
org.apache.http.impl.nio.SessionHttpContext.setAttribute : $r3 = r0.<org.apache.http.impl.nio.SessionHttpContext: org.apache.http.nio.reactor.IOSession iosession>
org.apache.http.nio.util.ExpandableBuffer.setOutputMode : $i0 = r0.<org.apache.http.nio.util.ExpandableBuffer: int mode>
org.apache.http.nio.util.ExpandableBuffer.setOutputMode : r0.<org.apache.http.nio.util.ExpandableBuffer: int mode> = 1
org.apache.http.nio.util.ExpandableBuffer.setOutputMode : $r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.IOSessionImpl.setBufferStatus : r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: org.apache.http.nio.reactor.SessionBufferStatus bufferStatus> = r1
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvents : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvents : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvents : $z0 = r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: boolean paused>
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvents : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvents : $r4 = r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvents : interfaceinvoke r1.<java.util.Set: void clear()>()
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvents : specialinvoke r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: void processEvent(java.nio.channels.SelectionKey)>(r3)
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvents : if i0 <= 0 goto return
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.processEvents : specialinvoke r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: void processSessionRequests()>()
org.apache.http.testserver.HttpClientNio.shutdown : virtualinvoke r0.<org.apache.http.testserver.HttpClientNio: void join(long)>(500L)
org.apache.http.testserver.HttpClientNio.shutdown : $r2 = r0.<org.apache.http.testserver.HttpClientNio: org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor ioReactor>
org.apache.http.testserver.HttpClientNio.shutdown : goto [?= return]
org.apache.http.impl.nio.reactor.AbstractIOReactor.gracefulShutdown : exitmonitor r1
org.apache.http.impl.nio.reactor.AbstractIOReactor.gracefulShutdown : $r8 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractIOReactor.gracefulShutdown : $r4 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractIOReactor.gracefulShutdown : $r3 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.lang.Object statusMutex>
org.apache.http.impl.nio.reactor.AbstractIOReactor.gracefulShutdown : $r6 = <org.apache.http.nio.reactor.IOReactorStatus: org.apache.http.nio.reactor.IOReactorStatus SHUTTING_DOWN>
org.apache.http.impl.nio.codecs.AbstractMessageParser.fillBuffer : return i0
org.apache.http.impl.nio.codecs.AbstractMessageParser.fillBuffer : r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: boolean endOfStream> = 1
org.apache.http.impl.nio.codecs.AbstractMessageParser.fillBuffer : $r2 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.nio.reactor.SessionInputBuffer sessionBuffer>
org.apache.http.impl.nio.codecs.AbstractMessageParser.fillBuffer : if i0 != -1 goto return i0
org.apache.http.impl.nio.DefaultClientIOEventDispatch.createByteBufferAllocator : $r1 = new org.apache.http.nio.util.HeapByteBufferAllocator
org.apache.http.impl.nio.reactor.IOReactorConfig.getShutdownGracePeriod : $l0 = r0.<org.apache.http.impl.nio.reactor.IOReactorConfig: long shutdownGracePeriod>
org.apache.http.impl.nio.reactor.IOSessionImpl.channel : $r1 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.ByteChannel channel>
org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState.getRequest : $r1 = r0.<org.apache.http.nio.protocol.AsyncNHttpServiceHandler$ServerConnState: org.apache.http.HttpRequest request>
org.apache.http.impl.nio.reactor.ChannelEntry.getChannel : $r1 = r0.<org.apache.http.impl.nio.reactor.ChannelEntry: java.nio.channels.SocketChannel channel>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.getStatus : $r1 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.IOSessionImpl.isClosed : $i0 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: int status>
org.apache.http.impl.nio.reactor.IOSessionImpl.setEvent : $r10 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.SelectionKey key>
org.apache.http.impl.nio.reactor.IOSessionImpl.setEvent : $r7 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.SelectionKey key>
org.apache.http.impl.nio.reactor.IOSessionImpl.setEvent : $r2 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: org.apache.http.impl.nio.reactor.InterestOpsCallback interestOpsCallback>
org.apache.http.impl.nio.reactor.IOSessionImpl.setEvent : $r8 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.SelectionKey key>
org.apache.http.impl.nio.reactor.IOSessionImpl.setEvent : $i1 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: int status>
org.apache.http.impl.nio.reactor.SessionRequestImpl.getAttachment : $r1 = r0.<org.apache.http.impl.nio.reactor.SessionRequestImpl: java.lang.Object attachment>
org.apache.http.impl.nio.DefaultNHttpServerConnection.createResponseWriter : $r3 = new org.apache.http.impl.nio.codecs.DefaultHttpResponseWriter
