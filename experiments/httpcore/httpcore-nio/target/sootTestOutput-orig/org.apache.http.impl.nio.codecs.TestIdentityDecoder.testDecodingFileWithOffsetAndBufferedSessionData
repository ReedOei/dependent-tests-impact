org.apache.http.ReadableByteChannelMock.prepareChunk : r0.<org.apache.http.ReadableByteChannelMock: boolean closed> = 1
org.apache.http.ReadableByteChannelMock.prepareChunk : $r7 = r0.<org.apache.http.ReadableByteChannelMock: java.lang.String charset>
org.apache.http.ReadableByteChannelMock.prepareChunk : $i3 = r0.<org.apache.http.ReadableByteChannelMock: int chunkCount>
org.apache.http.ReadableByteChannelMock.prepareChunk : $r2 = r0.<org.apache.http.ReadableByteChannelMock: java.nio.ByteBuffer currentChunk>
org.apache.http.ReadableByteChannelMock.prepareChunk : $i0 = r0.<org.apache.http.ReadableByteChannelMock: int chunkCount>
org.apache.http.ReadableByteChannelMock.prepareChunk : goto [?= return]
org.apache.http.ReadableByteChannelMock.prepareChunk : $r5 = r0.<org.apache.http.ReadableByteChannelMock: java.lang.String[] chunks>
org.apache.http.impl.nio.codecs.AbstractContentDecoder.isCompleted : $z0 = r0.<org.apache.http.impl.nio.codecs.AbstractContentDecoder: boolean completed>
org.apache.http.nio.util.ExpandableBuffer.hasData : $r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.nio.util.ExpandableBuffer.hasData : virtualinvoke r0.<org.apache.http.nio.util.ExpandableBuffer: void setOutputMode()>()
org.apache.http.nio.util.ExpandableBuffer.setInputMode : $i0 = r0.<org.apache.http.nio.util.ExpandableBuffer: int mode>
org.apache.http.nio.util.HeapByteBufferAllocator.allocate : $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i0)
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.read : $r2 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.read : if r1 != null goto virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: void setOutputMode()>()
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.read : virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: void setOutputMode()>()
org.apache.http.impl.nio.codecs.TestIdentityDecoder.deleteWithCheck : $z0 = virtualinvoke r1.<java.io.File: boolean delete()>()
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : return i0
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : $r4 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : $r3 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: void setInputMode()>()
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : if r1 != null goto virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: void setInputMode()>()
org.apache.http.impl.nio.codecs.TestIdentityDecoder.readFromFile : $r8 = new java.io.InputStreamReader
org.apache.http.impl.nio.codecs.TestIdentityDecoder.readFromFile : $r1 = new java.io.FileInputStream
org.apache.http.impl.nio.codecs.TestIdentityDecoder.readFromFile : r5 = newarray (char)[2048]
org.apache.http.impl.nio.codecs.TestIdentityDecoder.readFromFile : $i1 = virtualinvoke r3.<java.io.InputStreamReader: int read(char[])>(r5)
org.apache.http.impl.nio.codecs.TestIdentityDecoder.readFromFile : r6 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.http.impl.nio.codecs.TestIdentityDecoder.readFromFile : $r9 = new java.lang.StringBuilder
org.apache.http.impl.nio.codecs.TestIdentityDecoder.readFromFile : virtualinvoke r3.<java.io.InputStreamReader: void close()>()
org.apache.http.impl.nio.codecs.TestIdentityDecoder.readFromFile : virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r5, 0, i0)
org.apache.http.ReadableByteChannelMock.read : return -1
org.apache.http.ReadableByteChannelMock.read : return i0
org.apache.http.ReadableByteChannelMock.read : specialinvoke r0.<org.apache.http.ReadableByteChannelMock: void prepareChunk()>()
org.apache.http.ReadableByteChannelMock.read : $z0 = r0.<org.apache.http.ReadableByteChannelMock: boolean closed>
org.apache.http.ReadableByteChannelMock.read : i0 = i0 + 1
org.apache.http.ReadableByteChannelMock.read : $z1 = virtualinvoke r1.<java.nio.ByteBuffer: boolean hasRemaining()>()
org.apache.http.ReadableByteChannelMock.read : i0 = 0
org.apache.http.ReadableByteChannelMock.read : $r3 = r0.<org.apache.http.ReadableByteChannelMock: java.nio.ByteBuffer currentChunk>
org.apache.http.nio.util.ExpandableBuffer.setOutputMode : $i0 = r0.<org.apache.http.nio.util.ExpandableBuffer: int mode>
org.apache.http.nio.util.ExpandableBuffer.setOutputMode : r0.<org.apache.http.nio.util.ExpandableBuffer: int mode> = 1
org.apache.http.nio.util.ExpandableBuffer.setOutputMode : $r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.codecs.IdentityDecoder.transfer : virtualinvoke r1.<java.nio.channels.FileChannel: java.nio.channels.FileChannel position(long)>(l0)
org.apache.http.impl.nio.codecs.IdentityDecoder.transfer : $r4 = r0.<org.apache.http.impl.nio.codecs.IdentityDecoder: org.apache.http.nio.reactor.SessionInputBuffer buffer>
org.apache.http.impl.nio.codecs.IdentityDecoder.transfer : $b9 = l2 cmp 0L
org.apache.http.impl.nio.codecs.IdentityDecoder.transfer : r0.<org.apache.http.impl.nio.codecs.IdentityDecoder: boolean completed> = 1
org.apache.http.impl.nio.codecs.IdentityDecoder.transfer : $z0 = r0.<org.apache.http.impl.nio.codecs.IdentityDecoder: boolean completed>
org.apache.http.impl.nio.codecs.IdentityDecoder.transfer : $r2 = r0.<org.apache.http.impl.nio.codecs.IdentityDecoder: org.apache.http.nio.reactor.SessionInputBuffer buffer>
org.apache.http.impl.nio.codecs.IdentityDecoder.transfer : $r5 = r0.<org.apache.http.impl.nio.codecs.IdentityDecoder: java.nio.channels.ReadableByteChannel channel>
org.apache.http.impl.nio.codecs.IdentityDecoder.transfer : return l2
org.apache.http.impl.nio.codecs.IdentityDecoder.transfer : $r14 = r0.<org.apache.http.impl.nio.codecs.IdentityDecoder: java.nio.channels.ReadableByteChannel channel>
org.apache.http.impl.nio.codecs.IdentityDecoder.transfer : $b10 = l2 cmp -1L
org.apache.http.impl.nio.codecs.IdentityDecoder.transfer : $r17 = r0.<org.apache.http.impl.nio.codecs.IdentityDecoder: org.apache.http.impl.io.HttpTransportMetricsImpl metrics>
org.apache.http.impl.nio.codecs.IdentityDecoder.transfer : l2 = -1L
org.apache.http.impl.nio.codecs.IdentityDecoder.transfer : if r1 != null goto $z0 = r0.<org.apache.http.impl.nio.codecs.IdentityDecoder: boolean completed>
org.apache.http.impl.nio.codecs.IdentityDecoder.transfer : $l4 = virtualinvoke r1.<java.nio.channels.FileChannel: long size()>()
org.apache.http.impl.nio.codecs.IdentityDecoder.transfer : $b7 = l2 cmp 0L
org.apache.http.ReadableByteChannelMock.isOpen : $z0 = r0.<org.apache.http.ReadableByteChannelMock: boolean closed>
