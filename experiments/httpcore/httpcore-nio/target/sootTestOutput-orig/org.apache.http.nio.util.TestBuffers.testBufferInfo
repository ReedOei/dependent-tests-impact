org.apache.http.impl.nio.reactor.AbstractIOReactor.getStatus : $r1 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractIOReactor$1.sessionClosed : $r2 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor$1: org.apache.http.impl.nio.reactor.AbstractIOReactor this$0>
org.apache.http.nio.util.ExpandableBuffer.length : $r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.nio.util.ExpandableBuffer.length : virtualinvoke r0.<org.apache.http.nio.util.ExpandableBuffer: void setOutputMode()>()
org.apache.http.impl.nio.reactor.IOSessionImpl.hasBufferedInput : if r1 == null goto $z1 = 0
org.apache.http.impl.nio.reactor.IOSessionImpl.hasBufferedInput : r1 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: org.apache.http.nio.reactor.SessionBufferStatus bufferStatus>
org.apache.http.nio.util.SharedInputBuffer.close : $r4 = r0.<org.apache.http.nio.util.SharedInputBuffer: java.util.concurrent.locks.ReentrantLock lock>
org.apache.http.nio.util.SharedInputBuffer.close : r0.<org.apache.http.nio.util.SharedInputBuffer: boolean endOfStream> = 1
org.apache.http.nio.util.SharedInputBuffer.close : $z0 = r0.<org.apache.http.nio.util.SharedInputBuffer: boolean shutdown>
org.apache.http.nio.util.SharedInputBuffer.close : goto [?= return]
org.apache.http.nio.util.SharedInputBuffer.close : $r3 = r0.<org.apache.http.nio.util.SharedInputBuffer: java.util.concurrent.locks.Condition condition>
org.apache.http.nio.util.SharedInputBuffer.close : $r2 = r0.<org.apache.http.nio.util.SharedInputBuffer: java.util.concurrent.locks.ReentrantLock lock>
org.apache.http.impl.nio.reactor.IOSessionImpl.resetLastRead : r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: long lastAccessTime> = l0
org.apache.http.impl.nio.reactor.IOSessionImpl.resetLastRead : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.impl.nio.reactor.IOSessionImpl.resetLastRead : r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: long lastReadTime> = l0
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeSessions : interfaceinvoke r3.<org.apache.http.nio.reactor.IOSession: void close()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeSessions : exitmonitor r1
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeSessions : $r6 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Set sessions>
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeSessions : $r5 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Set sessions>
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeSessions : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeSessions : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.http.impl.nio.reactor.BaseIOReactor.readable : $z0 = interfaceinvoke r2.<org.apache.http.nio.reactor.IOSession: boolean hasBufferedInput()>()
org.apache.http.impl.nio.reactor.BaseIOReactor.readable : $r4 = r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: org.apache.http.nio.reactor.IOEventDispatch eventDispatch>
org.apache.http.impl.nio.reactor.BaseIOReactor.readable : goto [?= return]
org.apache.http.impl.nio.reactor.BaseIOReactor.readable : r2 = virtualinvoke r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: org.apache.http.nio.reactor.IOSession getSession(java.nio.channels.SelectionKey)>(r1)
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $r5 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.util.CharArrayBuffer lineBuf>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : return null
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : goto [?= $i11 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state>]
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $i0 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $i11 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : if z0 != 0 goto $i6 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int state>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $i1 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: int maxLineLen>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $r3 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.util.CharArrayBuffer lineBuf>
org.apache.http.impl.nio.codecs.AbstractMessageParser.parse : $r6 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.nio.reactor.SessionInputBuffer sessionBuffer>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r21 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r28 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.lang.Object statusMutex>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void hardShutdown()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r8 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $z1 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: boolean interestOpsQueueing>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : if i0 <= 0 goto $r19 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void closeSessions()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r23 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$r8 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>", "org.apache.http.impl.nio.reactor.AbstractIOReactor.execute")]
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : goto [?= virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void hardShutdown()>()]
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r13 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r15 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : goto [?= $r13 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>]
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : exitmonitor r27
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : specialinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void processNewChannels()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : specialinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void processClosedSessions()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r17 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void closeNewChannels()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r19 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : goto [?= return]
org.apache.http.impl.nio.reactor.AbstractIOReactor.execute : $r26 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.lang.Object statusMutex>
org.apache.http.impl.nio.reactor.IOSessionImpl.removeAttribute : $r2 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.util.Map attributes>
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : $b6 = l2 cmp 0L
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : l2 = l0
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : exitmonitor r1
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : $b4 = l0 cmp 0L
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : $r4 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : $r3 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.lang.Object statusMutex>
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : $r6 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.lang.Object statusMutex>
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.awaitShutdown : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.nio.util.SharedOutputBuffer.shutdown : $r4 = r0.<org.apache.http.nio.util.SharedOutputBuffer: java.util.concurrent.locks.ReentrantLock lock>
org.apache.http.nio.util.SharedOutputBuffer.shutdown : $r3 = r0.<org.apache.http.nio.util.SharedOutputBuffer: java.util.concurrent.locks.Condition condition>
org.apache.http.nio.util.SharedOutputBuffer.shutdown : $z0 = r0.<org.apache.http.nio.util.SharedOutputBuffer: boolean shutdown>
org.apache.http.nio.util.SharedOutputBuffer.shutdown : goto [?= return]
org.apache.http.nio.util.SharedOutputBuffer.shutdown : r0.<org.apache.http.nio.util.SharedOutputBuffer: boolean shutdown> = 1
org.apache.http.nio.util.SharedOutputBuffer.shutdown : $r2 = r0.<org.apache.http.nio.util.SharedOutputBuffer: java.util.concurrent.locks.ReentrantLock lock>
org.apache.http.nio.util.ExpandableBuffer.available : virtualinvoke r0.<org.apache.http.nio.util.ExpandableBuffer: void setInputMode()>()
org.apache.http.nio.util.ExpandableBuffer.available : $r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker.getException : $r1 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker: java.lang.Exception exception>
org.apache.http.impl.nio.NHttpConnectionBase.hasBufferedInput : $z0 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: boolean hasBufferedInput>
org.apache.http.testserver.HttpServerNio.join : $r1 = r0.<org.apache.http.testserver.HttpServerNio: org.apache.http.testserver.HttpServerNio$IOReactorThread thread>
org.apache.http.testserver.HttpServerNio.join : $r2 = r0.<org.apache.http.testserver.HttpServerNio: org.apache.http.testserver.HttpServerNio$IOReactorThread thread>
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeNewChannels : $r5 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Queue newChannels>
org.apache.http.impl.nio.reactor.AbstractIOReactor.queueClosedSession : $r2 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Queue closedSessions>
org.apache.http.impl.nio.reactor.AbstractIOReactor.queueClosedSession : if r1 == null goto return
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker.run : goto [?= return]
org.apache.http.impl.nio.reactor.IOSessionImpl.close : goto [?= $r6 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: org.apache.http.impl.nio.reactor.SessionClosedCallback sessionClosedCallback>]
org.apache.http.impl.nio.reactor.IOSessionImpl.close : $r10 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.SelectionKey key>
org.apache.http.impl.nio.reactor.IOSessionImpl.close : $r3 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.SelectionKey key>
org.apache.http.impl.nio.reactor.IOSessionImpl.close : $r2 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.SelectionKey key>
org.apache.http.impl.nio.reactor.IOSessionImpl.close : $r8 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.SelectionKey key>
org.apache.http.impl.nio.reactor.IOSessionImpl.close : $r7 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: org.apache.http.impl.nio.reactor.SessionClosedCallback sessionClosedCallback>
org.apache.http.impl.nio.reactor.IOSessionImpl.close : r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: int status> = 2147483647
org.apache.http.impl.nio.reactor.IOSessionImpl.close : $i0 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: int status>
org.apache.http.impl.nio.reactor.IOSessionImpl.close : $r6 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: org.apache.http.impl.nio.reactor.SessionClosedCallback sessionClosedCallback>
org.apache.http.impl.nio.reactor.BaseIOReactor.sessionClosed : goto [?= return]
org.apache.http.impl.nio.reactor.BaseIOReactor.sessionClosed : $r3 = r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: org.apache.http.nio.reactor.IOEventDispatch eventDispatch>
org.apache.http.impl.nio.SessionHttpContext.getAttribute : $r2 = r0.<org.apache.http.impl.nio.SessionHttpContext: org.apache.http.nio.reactor.IOSession iosession>
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvents : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvents : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvents : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvents : interfaceinvoke r1.<java.util.Set: void clear()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvents : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void processEvent(java.nio.channels.SelectionKey)>(r3)
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : virtualinvoke r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: void close()>()
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $r6 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.NHttpMessageParser requestParser>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $r14 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.HttpRequest request>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : if i0 <= 0 goto $r10 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.NHttpMessageParser requestParser>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $i1 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: int status>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $r10 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.NHttpMessageParser requestParser>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $r5 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.HttpRequest request>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : goto [?= return]
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $r21 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.ContentDecoder contentDecoder>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : if i0 <= 0 goto $r14 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.HttpRequest request>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : $r24 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.impl.nio.reactor.SessionInputBufferImpl inbuf>
org.apache.http.impl.nio.DefaultNHttpServerConnection.consumeInput : if i0 != -1 goto $r21 = r0.<org.apache.http.impl.nio.DefaultNHttpServerConnection: org.apache.http.nio.ContentDecoder contentDecoder>
org.apache.http.nio.protocol.ThrottlingHttpClientHandler.closed : $r9 = r0.<org.apache.http.nio.protocol.ThrottlingHttpClientHandler: org.apache.http.nio.protocol.HttpRequestExecutionHandler execHandler>
org.apache.http.nio.protocol.ThrottlingHttpClientHandler.closed : r4 = r3
org.apache.http.nio.protocol.ThrottlingHttpClientHandler.closed : $r11 = r0.<org.apache.http.nio.protocol.ThrottlingHttpClientHandler: org.apache.http.nio.protocol.EventListener eventListener>
org.apache.http.nio.protocol.ThrottlingHttpClientHandler.closed : $r6 = interfaceinvoke r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.nio.conn-state")
org.apache.http.nio.protocol.ThrottlingHttpClientHandler.closed : exitmonitor r4
org.apache.http.nio.protocol.ThrottlingHttpClientHandler.closed : if r3 == null goto $r9 = r0.<org.apache.http.nio.protocol.ThrottlingHttpClientHandler: org.apache.http.nio.protocol.HttpRequestExecutionHandler execHandler>
org.apache.http.nio.protocol.ThrottlingHttpClientHandler.closed : $r10 = r0.<org.apache.http.nio.protocol.ThrottlingHttpClientHandler: org.apache.http.nio.protocol.EventListener eventListener>
org.apache.http.nio.protocol.ThrottlingHttpClientHandler.closed : virtualinvoke r3.<java.lang.Object: void notifyAll()>()
org.apache.http.nio.protocol.ThrottlingHttpClientHandler.closed : r2 = interfaceinvoke r1.<org.apache.http.nio.NHttpClientConnection: org.apache.http.protocol.HttpContext getContext()>()
org.apache.http.nio.protocol.ThrottlingHttpClientHandler.closed : virtualinvoke r3.<org.apache.http.nio.protocol.ThrottlingHttpClientHandler$ClientConnState: void close()>()
org.apache.http.nio.util.ExpandableBuffer.hasData : $r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.nio.util.ExpandableBuffer.hasData : virtualinvoke r0.<org.apache.http.nio.util.ExpandableBuffer: void setOutputMode()>()
org.apache.http.impl.nio.NHttpConnectionBase.close : $r3 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.nio.reactor.IOSession session>
org.apache.http.impl.nio.NHttpConnectionBase.close : $i0 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: int status>
org.apache.http.impl.nio.NHttpConnectionBase.close : $r1 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.impl.nio.reactor.SessionOutputBufferImpl outbuf>
org.apache.http.impl.nio.NHttpConnectionBase.close : r0.<org.apache.http.impl.nio.NHttpConnectionBase: int status> = 2
org.apache.http.impl.nio.NHttpConnectionBase.close : r0.<org.apache.http.impl.nio.NHttpConnectionBase: int status> = 1
org.apache.http.impl.nio.reactor.BaseIOReactor.validate : $l1 = r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: long lastTimeoutCheck>
org.apache.http.impl.nio.reactor.BaseIOReactor.validate : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.impl.nio.reactor.BaseIOReactor.validate : $r6 = r0.<org.apache.http.impl.nio.reactor.BaseIOReactor: java.util.Set bufferingSessions>
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : virtualinvoke r1.<java.nio.channels.SelectionKey: java.lang.Object attach(java.lang.Object)>(null)
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : $z3 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isWritable()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void queueClosedSession(org.apache.http.nio.reactor.IOSession)>(r2)
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : r3 = $r5
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void readable(java.nio.channels.SelectionKey)>(r1)
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : $z1 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isConnectable()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : $z2 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isReadable()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : virtualinvoke r2.<org.apache.http.impl.nio.reactor.IOSessionImpl: void resetLastRead()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : $z0 = virtualinvoke r1.<java.nio.channels.SelectionKey: boolean isAcceptable()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent : $r4 = virtualinvoke r1.<java.nio.channels.SelectionKey: java.lang.Object attachment()>()
org.apache.http.impl.nio.DefaultServerIOEventDispatch.disconnected : if r2 == null goto return
org.apache.http.impl.nio.DefaultServerIOEventDispatch.disconnected : $r3 = interfaceinvoke r1.<org.apache.http.nio.reactor.IOSession: java.lang.Object getAttribute(java.lang.String)>("http.connection")
org.apache.http.impl.nio.DefaultServerIOEventDispatch.disconnected : $r4 = r0.<org.apache.http.impl.nio.DefaultServerIOEventDispatch: org.apache.http.nio.NHttpServiceHandler handler>
org.apache.http.nio.util.ExpandableBuffer.setInputMode : $r2 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.nio.util.ExpandableBuffer.setInputMode : r0.<org.apache.http.nio.util.ExpandableBuffer: int mode> = 0
org.apache.http.nio.util.ExpandableBuffer.setInputMode : $i0 = r0.<org.apache.http.nio.util.ExpandableBuffer: int mode>
org.apache.http.nio.util.ExpandableBuffer.setInputMode : $r4 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.nio.util.ExpandableBuffer.setInputMode : $r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : exitmonitor r1
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : $r9 = <org.apache.http.nio.reactor.IOReactorStatus: org.apache.http.nio.reactor.IOReactorStatus SHUTDOWN_REQUEST>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: void awaitShutdown(long)>(l0)
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : $r11 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : $r6 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: void shutdown(long)>(2000L)
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : $r3 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.lang.Object statusLock>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : goto [?= return]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.shutdown : $r4 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.DefaultListeningIOReactor.cancelRequests : $r2 = r0.<org.apache.http.impl.nio.reactor.DefaultListeningIOReactor: java.util.Queue requestQueue>
org.apache.http.nio.util.DirectByteBufferAllocator.allocate : $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(i0)
org.apache.http.impl.nio.reactor.IOSessionImpl.getAttribute : $r2 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.util.Map attributes>
org.apache.http.impl.nio.reactor.AbstractIOReactor.getSession : $r2 = virtualinvoke r1.<java.nio.channels.SelectionKey: java.lang.Object attachment()>()
org.apache.http.nio.util.ExpandableBuffer.ensureCapacity : specialinvoke r0.<org.apache.http.nio.util.ExpandableBuffer: void expandCapacity(int)>(i0)
org.apache.http.nio.util.ExpandableBuffer.ensureCapacity : $r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : $b6 = l2 cmp 0L
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : l2 = l0
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : exitmonitor r1
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : $b4 = l0 cmp 0L
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : $r6 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.lang.Object statusLock>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : $r3 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.lang.Object statusLock>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : $r4 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.awaitShutdown : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.http.testserver.HttpServerNio$IOReactorThread.run : goto [?= return]
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : $r5 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : interfaceinvoke r4.<org.apache.http.nio.reactor.IOSession: void close()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : if r4 == null goto (branch)
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : goto [?= return]
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : $r7 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : r4 = virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOSession getSession(java.nio.channels.SelectionKey)>(r3)
org.apache.http.impl.nio.reactor.AbstractIOReactor.closeActiveChannels : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.http.impl.nio.DefaultClientIOEventDispatch.disconnected : $r4 = r0.<org.apache.http.impl.nio.DefaultClientIOEventDispatch: org.apache.http.nio.NHttpClientHandler handler>
org.apache.http.impl.nio.DefaultClientIOEventDispatch.disconnected : if r2 == null goto return
org.apache.http.impl.nio.DefaultClientIOEventDispatch.disconnected : $r3 = interfaceinvoke r1.<org.apache.http.nio.reactor.IOSession: java.lang.Object getAttribute(java.lang.String)>("http.connection")
org.apache.http.nio.protocol.ThrottlingHttpClientHandler$ClientConnState.close : $r2 = r0.<org.apache.http.nio.protocol.ThrottlingHttpClientHandler$ClientConnState: org.apache.http.nio.util.SharedOutputBuffer outbuffer>
org.apache.http.nio.protocol.ThrottlingHttpClientHandler$ClientConnState.close : r0.<org.apache.http.nio.protocol.ThrottlingHttpClientHandler$ClientConnState: int inputState> = -1
org.apache.http.nio.protocol.ThrottlingHttpClientHandler$ClientConnState.close : $r1 = r0.<org.apache.http.nio.protocol.ThrottlingHttpClientHandler$ClientConnState: org.apache.http.nio.util.SharedInputBuffer inbuffer>
org.apache.http.nio.protocol.ThrottlingHttpClientHandler$ClientConnState.close : r0.<org.apache.http.nio.protocol.ThrottlingHttpClientHandler$ClientConnState: int outputState> = -1
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : if z0 == 0 goto return 0
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : z1 = 0
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : $r3 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : return 0
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: void setOutputMode()>()
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : if z1 != 0 goto $r8 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.readLine : i0 = -1
org.apache.http.impl.nio.DefaultServerIOEventDispatch.ensureNotNull : if r1 != null goto return
org.apache.http.testserver.HttpClientNio.join : $r1 = r0.<org.apache.http.testserver.HttpClientNio: org.apache.http.testserver.HttpClientNio$IOReactorThread thread>
org.apache.http.testserver.HttpClientNio.join : $r2 = r0.<org.apache.http.testserver.HttpClientNio: org.apache.http.testserver.HttpClientNio$IOReactorThread thread>
org.apache.http.testserver.HttpServerNio.shutdown : $r2 = r0.<org.apache.http.testserver.HttpServerNio: org.apache.http.impl.nio.reactor.DefaultListeningIOReactor ioReactor>
org.apache.http.testserver.HttpServerNio.shutdown : goto [?= return]
org.apache.http.testserver.HttpServerNio.shutdown : virtualinvoke r0.<org.apache.http.testserver.HttpServerNio: void join(long)>(500L)
org.apache.http.impl.nio.reactor.AbstractIOReactor.processNewChannels : $r8 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Queue newChannels>
org.apache.http.impl.nio.reactor.AbstractIOReactor.processClosedSessions : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$r3 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Queue closedSessions>", "org.apache.http.impl.nio.reactor.AbstractIOReactor.processClosedSessions")]
org.apache.http.impl.nio.reactor.AbstractIOReactor.processClosedSessions : $r3 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Queue closedSessions>
org.apache.http.impl.nio.reactor.AbstractIOReactor.processClosedSessions : $r6 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.util.Set sessions>
org.apache.http.impl.nio.reactor.AbstractIOReactor.processClosedSessions : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void sessionClosed(org.apache.http.nio.reactor.IOSession)>(r1)
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r34 = virtualinvoke r31.<org.apache.http.impl.nio.reactor.BaseIOReactor: org.apache.http.nio.reactor.IOReactorStatus getStatus()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : virtualinvoke r31.<org.apache.http.impl.nio.reactor.BaseIOReactor: void awaitShutdown(long)>(l3)
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : virtualinvoke r40.<java.lang.Thread: void join(long)>(l3)
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r17 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : if r4 == null goto (branch)
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : r4 = virtualinvoke r3.<java.nio.channels.SelectionKey: java.nio.channels.SelectableChannel channel()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: void cancelRequests()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : i6 = 0
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r15 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r9 = <org.apache.http.nio.reactor.IOReactorStatus: org.apache.http.nio.reactor.IOReactorStatus SHUTTING_DOWN>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : i1 = 0
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : exitmonitor r1
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : r20 = interfaceinvoke r19.<java.util.Set: java.util.Iterator iterator()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r29 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.impl.nio.reactor.IOReactorConfig config>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : goto [?= return]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : goto [?= i1 = 0]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : interfaceinvoke r4.<java.nio.channels.Channel: void close()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r30 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.impl.nio.reactor.BaseIOReactor[] dispatchers>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : goto [?= $r15 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.nio.channels.Selector selector>]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r7 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r32 = virtualinvoke r31.<org.apache.http.impl.nio.reactor.BaseIOReactor: org.apache.http.nio.reactor.IOReactorStatus getStatus()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r27 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.impl.nio.reactor.BaseIOReactor[] dispatchers>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : goto [?= $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : if r40 == null goto i6 = i6 + 1
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r24 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r18 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : virtualinvoke r28.<org.apache.http.impl.nio.reactor.BaseIOReactor: void gracefulShutdown()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r6 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.lang.Object statusLock>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r39 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: java.lang.Thread[] threads>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : $r21 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.doShutdown : i4 = 0
org.apache.http.nio.protocol.ThrottlingHttpServiceHandler$ServerConnState.close : r0.<org.apache.http.nio.protocol.ThrottlingHttpServiceHandler$ServerConnState: int outputState> = -1
org.apache.http.nio.protocol.ThrottlingHttpServiceHandler$ServerConnState.close : r0.<org.apache.http.nio.protocol.ThrottlingHttpServiceHandler$ServerConnState: int inputState> = -1
org.apache.http.nio.protocol.ThrottlingHttpServiceHandler$ServerConnState.close : $r1 = r0.<org.apache.http.nio.protocol.ThrottlingHttpServiceHandler$ServerConnState: org.apache.http.nio.util.SharedInputBuffer inbuffer>
org.apache.http.nio.protocol.ThrottlingHttpServiceHandler$ServerConnState.close : $r2 = r0.<org.apache.http.nio.protocol.ThrottlingHttpServiceHandler$ServerConnState: org.apache.http.nio.util.SharedOutputBuffer outbuffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : return i0
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : $r4 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : $r3 = r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: void setInputMode()>()
org.apache.http.impl.nio.reactor.SessionInputBufferImpl.fill : if r1 != null goto virtualinvoke r0.<org.apache.http.impl.nio.reactor.SessionInputBufferImpl: void setInputMode()>()
org.apache.http.impl.nio.NHttpConnectionBase.getContext : $r1 = r0.<org.apache.http.impl.nio.NHttpConnectionBase: org.apache.http.protocol.HttpContext context>
org.apache.http.impl.nio.reactor.AbstractIOReactor.hardShutdown : specialinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void processClosedSessions()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.hardShutdown : exitmonitor r1
org.apache.http.impl.nio.reactor.AbstractIOReactor.hardShutdown : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void closeNewChannels()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.hardShutdown : $r4 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractIOReactor.hardShutdown : $r3 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.lang.Object statusMutex>
org.apache.http.impl.nio.reactor.AbstractIOReactor.hardShutdown : virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: void closeActiveChannels()>()
org.apache.http.impl.nio.reactor.AbstractIOReactor.hardShutdown : $r6 = <org.apache.http.nio.reactor.IOReactorStatus: org.apache.http.nio.reactor.IOReactorStatus SHUT_DOWN>
org.apache.http.nio.protocol.RequestExecutionHandler.finalizeContext : if r2 == null goto return
org.apache.http.nio.protocol.RequestExecutionHandler.finalizeContext : $r3 = interfaceinvoke r1.<org.apache.http.protocol.HttpContext: java.lang.Object removeAttribute(java.lang.String)>("job")
org.apache.http.testserver.HttpClientNio$IOReactorThread.run : goto [?= return]
org.apache.http.impl.nio.DefaultServerIOEventDispatch.inputReady : $r3 = interfaceinvoke r1.<org.apache.http.nio.reactor.IOSession: java.lang.Object getAttribute(java.lang.String)>("http.connection")
org.apache.http.impl.nio.DefaultServerIOEventDispatch.inputReady : specialinvoke r0.<org.apache.http.impl.nio.DefaultServerIOEventDispatch: void ensureNotNull(org.apache.http.nio.NHttpServerIOTarget)>(r2)
org.apache.http.impl.nio.DefaultServerIOEventDispatch.inputReady : goto [?= return]
org.apache.http.impl.nio.DefaultServerIOEventDispatch.inputReady : $r4 = r0.<org.apache.http.impl.nio.DefaultServerIOEventDispatch: org.apache.http.nio.NHttpServiceHandler handler>
org.apache.http.nio.util.ExpandableBuffer.expandCapacity : virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer flip()>()
org.apache.http.nio.util.ExpandableBuffer.expandCapacity : $r2 = r0.<org.apache.http.nio.util.ExpandableBuffer: org.apache.http.nio.util.ByteBufferAllocator allocator>
org.apache.http.nio.util.ExpandableBuffer.expandCapacity : $r5 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.nio.util.ExpandableBuffer.expandCapacity : r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : goto [?= virtualinvoke r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: void doShutdown()>()]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r55 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : if r59 == null goto i12 = i12 + 1
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : goto [?= $r55 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : r59 = virtualinvoke r58.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker: java.lang.Exception getException()>()
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : goto [?= return]
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r61 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : $r57 = r0.<org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor: org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker[] workers>
org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute : i12 = 0
org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.cancelRequests : $r2 = r0.<org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor: java.util.Queue requestQueue>
org.apache.http.nio.util.SharedOutputBuffer.close : virtualinvoke r0.<org.apache.http.nio.util.SharedOutputBuffer: void shutdown()>()
org.apache.http.nio.protocol.ThrottlingHttpServiceHandler.closed : $r9 = r0.<org.apache.http.nio.protocol.ThrottlingHttpServiceHandler: org.apache.http.nio.protocol.EventListener eventListener>
org.apache.http.nio.protocol.ThrottlingHttpServiceHandler.closed : r4 = r3
org.apache.http.nio.protocol.ThrottlingHttpServiceHandler.closed : if r3 == null goto $r9 = r0.<org.apache.http.nio.protocol.ThrottlingHttpServiceHandler: org.apache.http.nio.protocol.EventListener eventListener>
org.apache.http.nio.protocol.ThrottlingHttpServiceHandler.closed : virtualinvoke r3.<org.apache.http.nio.protocol.ThrottlingHttpServiceHandler$ServerConnState: void close()>()
org.apache.http.nio.protocol.ThrottlingHttpServiceHandler.closed : $r6 = interfaceinvoke r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.nio.conn-state")
org.apache.http.nio.protocol.ThrottlingHttpServiceHandler.closed : exitmonitor r4
org.apache.http.nio.protocol.ThrottlingHttpServiceHandler.closed : r2 = interfaceinvoke r1.<org.apache.http.nio.NHttpServerConnection: org.apache.http.protocol.HttpContext getContext()>()
org.apache.http.nio.protocol.ThrottlingHttpServiceHandler.closed : virtualinvoke r3.<java.lang.Object: void notifyAll()>()
org.apache.http.nio.protocol.ThrottlingHttpServiceHandler.closed : $r10 = r0.<org.apache.http.nio.protocol.ThrottlingHttpServiceHandler: org.apache.http.nio.protocol.EventListener eventListener>
org.apache.http.impl.nio.SessionHttpContext.removeAttribute : $r2 = r0.<org.apache.http.impl.nio.SessionHttpContext: org.apache.http.nio.reactor.IOSession iosession>
org.apache.http.nio.util.SimpleOutputBuffer.write : $i0 = lengthof r1
org.apache.http.nio.util.SimpleOutputBuffer.write : $r3 = r0.<org.apache.http.nio.util.SimpleOutputBuffer: java.nio.ByteBuffer buffer>
org.apache.http.nio.util.SimpleOutputBuffer.write : $r2 = r0.<org.apache.http.nio.util.SimpleOutputBuffer: java.nio.ByteBuffer buffer>
org.apache.http.nio.util.SimpleOutputBuffer.write : if r1 != null goto $z0 = r0.<org.apache.http.nio.util.SimpleOutputBuffer: boolean endOfStream>
org.apache.http.nio.util.SimpleOutputBuffer.write : $z0 = r0.<org.apache.http.nio.util.SimpleOutputBuffer: boolean endOfStream>
org.apache.http.nio.util.SimpleOutputBuffer.write : virtualinvoke r0.<org.apache.http.nio.util.SimpleOutputBuffer: void setInputMode()>()
org.apache.http.nio.util.ExpandableBuffer.setOutputMode : $i0 = r0.<org.apache.http.nio.util.ExpandableBuffer: int mode>
org.apache.http.nio.util.ExpandableBuffer.setOutputMode : r0.<org.apache.http.nio.util.ExpandableBuffer: int mode> = 1
org.apache.http.nio.util.ExpandableBuffer.setOutputMode : $r1 = r0.<org.apache.http.nio.util.ExpandableBuffer: java.nio.ByteBuffer buffer>
org.apache.http.testserver.HttpClientNio.shutdown : virtualinvoke r0.<org.apache.http.testserver.HttpClientNio: void join(long)>(500L)
org.apache.http.testserver.HttpClientNio.shutdown : $r2 = r0.<org.apache.http.testserver.HttpClientNio: org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor ioReactor>
org.apache.http.testserver.HttpClientNio.shutdown : goto [?= return]
org.apache.http.impl.nio.reactor.AbstractIOReactor.gracefulShutdown : exitmonitor r1
org.apache.http.impl.nio.reactor.AbstractIOReactor.gracefulShutdown : $r8 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.nio.channels.Selector selector>
org.apache.http.impl.nio.reactor.AbstractIOReactor.gracefulShutdown : $r4 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: org.apache.http.nio.reactor.IOReactorStatus status>
org.apache.http.impl.nio.reactor.AbstractIOReactor.gracefulShutdown : $r3 = r0.<org.apache.http.impl.nio.reactor.AbstractIOReactor: java.lang.Object statusMutex>
org.apache.http.impl.nio.reactor.AbstractIOReactor.gracefulShutdown : $r6 = <org.apache.http.nio.reactor.IOReactorStatus: org.apache.http.nio.reactor.IOReactorStatus SHUTTING_DOWN>
org.apache.http.impl.nio.codecs.AbstractMessageParser.fillBuffer : return i0
org.apache.http.impl.nio.codecs.AbstractMessageParser.fillBuffer : r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: boolean endOfStream> = 1
org.apache.http.impl.nio.codecs.AbstractMessageParser.fillBuffer : $r2 = r0.<org.apache.http.impl.nio.codecs.AbstractMessageParser: org.apache.http.nio.reactor.SessionInputBuffer sessionBuffer>
org.apache.http.impl.nio.codecs.AbstractMessageParser.fillBuffer : if i0 != -1 goto return i0
org.apache.http.impl.nio.reactor.IOReactorConfig.getShutdownGracePeriod : $l0 = r0.<org.apache.http.impl.nio.reactor.IOReactorConfig: long shutdownGracePeriod>
org.apache.http.impl.nio.reactor.IOSessionImpl.channel : $r1 = r0.<org.apache.http.impl.nio.reactor.IOSessionImpl: java.nio.channels.ByteChannel channel>
