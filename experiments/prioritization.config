coverages=(statement function)
orders=(absolute relative)
impactJarCP=impact-tools/impact.jar
testListGenClass=edu.washington.cs.dt.impact.tools.TestListGenerator
crossReferenceClass=edu.washington.cs.dt.impact.tools.CrossReferencer

function clearTemp() {
  rm -rf sootOutput
  rm -rf sootTestOutput
  rm -rf tmpfile.txt
  rm -rf tmptestfiles.txt
}

function instrumentFiles() {
  # instrument class and test files
  java -cp $1 edu.washington.cs.dt.impact.Main.MainDriver -inputDir bin
}

function runRandom() {
  java -cp $impactJarCP $testListGenClass -technique prioritization -order random -outputFile $1-random.txt
  java -cp $3 edu.washington.cs.dt.main.ImpactMain $1-random.txt > $1-random-results.txt
  rm -rf $1-random.txt

  echo $1"-random-results.txt" >> $1-tp-summary.txt
  java -cp $impactJarCP $crossReferenceClass -origOrder $1-$2-order-results.txt -testOrder $1-random-results.txt >> $1-tp-summary.txt 
  echo "" >> $1-tp-summary.txt
}

function runCoveragesOrders() {
  for i in "${coverages[@]}"; do 
    for j in "${orders[@]}"; do  
      java -cp $impactJarCP $testListGenClass -technique prioritization -coverage $i -order $j -outputFile $1-tp-$i-$j.txt  
      clearEnv
      java -cp $3 edu.washington.cs.dt.main.ImpactMain $1-tp-$i-$j.txt > $1-tp-$i-$j-results.txt
      rm -rf $1-tp-$i-$j.txt

      echo $1"-tp-"$i"-"$j"-results.txt" >> $1-tp-summary.txt
      java -cp $impactJarCP $crossReferenceClass -origOrder $1-$2-order-results.txt -testOrder $1-tp-$i-$j-results.txt >> $1-tp-summary.txt 
      echo "" >> $1-tp-summary.txt
    done
  done
}

