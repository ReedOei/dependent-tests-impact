The following arguments were used to generate this output.
[-technique, prioritization, -coverage, function, -order, relative, -origOrder, synoptic-orig-order, -testInputDir, /home/winglam/dt-copy3/dependent-tests-impact/experiments/dynoptic/sootTestOutput-orig, -filesToDelete, synoptic-env-files, -getCoverage, -project, Synoptic, -testType, orig, -outputDir, /home/winglam/dt-copy3/dependent-tests-impact/experiments/prioritization-results, -timesToRun, 5]

Execution time of TLG and its time to find/nullify any DTs for 1 machine (does not include the time to run the tests in the new order): 0.452
Number of tests selected out of total in original order: 118 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
APFD value: 0.6925438553020782
Execution time for executing the following testing order: 0.343

Test order list:
[dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, mcscm.McScMTests.testEmptyScmInput, mcscm.McScMTests.testUnsafeScmInputLen2]

Time each test takes to run in the new order:
[80713161, 2578958, 16095919, 12118069, 2765186, 1152989, 2811813, 5465507, 2453385, 1942806, 2636490, 2149601, 2081399, 2001829, 2060784, 2151209, 1800802, 1733482, 5412875, 3072051, 1992745, 3449685, 1270370, 1204440, 2065536, 2434523, 2010124, 1867960, 2304380, 1837807, 1944889, 4992553, 1797322, 2579489, 1997776, 1903360, 3330088, 1251351, 1009574, 369504, 425407, 2642873, 3921298, 1526477, 2204723, 1352259, 1413775, 3427359, 1536817, 890020, 1756870, 1562769, 1405870, 973591, 1182638, 1857061, 3963142, 1361415, 1597910, 366674, 1964915, 1430865, 1408366, 1781946, 1886327, 1353312, 1393248, 2468644, 1542666, 1980038, 1360657, 1350735, 2216617, 2160575, 2145522, 2364358, 2011514, 2270411, 2212855, 2239495, 2234477, 2487352, 4440190, 2982488, 3871125, 3733466, 3695014, 3960764, 1417485, 1366588, 1182653, 2322066, 2422198, 3364905, 1529564, 2018708, 468709, 1395762, 1453188, 1499756, 1578250, 1523169, 2143306, 1261768, 1499440, 1533210, 1425139, 1766528, 1782013, 1441215, 1801242, 1468413, 3145121, 1694540, 1809286, 842181, 302148, 276941]

Coverage test list:
[3420, 1635, 669, 557, 446, 334, 297, 260, 260, 185, 111, 111, 111, 111, 111, 111, 111, 111, 74, 74, 74, 74, 74, 74, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--------------------------
Total time (of all machines and iterations plus initial TestListGenerator): 0.510