The following arguments were used to generate this output.
[-technique, prioritization, -coverage, statement, -order, relative, -origOrder, synoptic-orig-order, -testInputDir, sootTestOutput-orig, -filesToDelete, synoptic-env-files, -getCoverage, -project, Synoptic, -testType, orig, -outputDir, /home/winglam/dt-copy/dependent-tests-impact/experiments/prioritization-results, -timesToRun, 1, -resolveDependences]

Execution time of TLG and its time to find/nullify any DTs for 1 machine (does not include the time to run the tests in the new order): 0.471
Number of tests selected out of total in original order: 118 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
APFD value: 0.7106002056326617
Execution time for executing the following testing order: 0.358

Test order list:
[dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, mcscm.McScMTests.testSafeScmInput, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, mcscm.McScMTests.testEmptyScmInput, mcscm.McScMTests.testUnsafeScmInputLen2]

Time each test takes to run in the new order:
[64497213, 25066683, 14576225, 11727217, 2225222, 2587253, 5336454, 1134033, 2355758, 1628147, 2694525, 2471950, 1764420, 2432286, 2141793, 2226583, 2038084, 2212399, 1476503, 1885083, 2266063, 1972795, 3947076, 1458051, 1973555, 1905642, 2907230, 3465935, 1912726, 1772701, 2118530, 3564730, 1721325, 2208059, 3892596, 2122592, 2885228, 4405240, 1888464, 2373732, 1435836, 929465, 1483611, 1846901, 1428746, 2092408, 2743454, 1644154, 1002970, 2097436, 2576754, 5166706, 1524483, 1597779, 1555269, 1631764, 1507139, 884707, 3453658, 2477041, 1715180, 4064532, 1528282, 1946185, 1299656, 3679298, 929959, 3999491, 1833056, 1982942, 1623106, 1800111, 1815613, 1297952, 2199392, 1292196, 1236737, 1296662, 1628173, 2083093, 2064803, 2015111, 2015669, 2114289, 2434695, 2666365, 2482851, 2425222, 4691704, 2956715, 3810809, 3742790, 3534793, 1340973, 1172840, 2599443, 2556883, 1458648, 1857491, 2143409, 1312202, 1357061, 1335928, 1869867, 1159768, 1350968, 1117816, 1030841, 1267955, 1118778, 1287482, 1696932, 3153037, 1707837, 1712999, 841846, 1525934, 1894903]

Coverage test list:
[3000, 2011, 842, 703, 408, 269, 253, 188, 179, 147, 147, 122, 114, 114, 98, 98, 98, 81, 81, 73, 73, 65, 65, 65, 57, 57, 57, 57, 49, 49, 49, 49, 40, 32, 24, 16, 16, 16, 16, 16, 16, 16, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--------------------------
Total time (of all machines and iterations plus initial TestListGenerator): 0.483