The following arguments were used to generate this output.
[-technique, prioritization, -coverage, statement, -order, absolute, -origOrder, synoptic-orig-order, -testInputDir, sootTestOutput-orig, -filesToDelete, synoptic-env-files, -getCoverage, -project, Synoptic, -testType, orig, -outputDir, /homes/gws/winglam/winglam/ambari/dependent-tests-impact/experiments/prioritization-results, -timesToRun, 1]

Execution time of TLG and its time to find/nullify any DTs for 1 machine (does not include the time to run the tests in the new order): 2.825
Number of tests selected out of total in original order: 118 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
APFD value: 0.49998913620858054
Execution time for executing the following testing order: 0.369

Test order list:
[dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, mcscm.McScMTests.testSafeScmInput, mcscm.McScMTests.testUnsafeScmInputLen1, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.NeverFollowedByTests.create, mcscm.McScMTests.testEmptyScmInput, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds]

Time each test takes to run in the new order:
[98968614, 2094372, 2128842, 18838980, 2669442, 2352506, 5276244, 21034380, 1285452, 12246616, 28713166, 26489413, 1277230, 36022426, 3294883, 1558577, 3200793, 2393658, 1956493, 1844717, 701599, 2583863, 24101249, 1861302, 1435612, 1871921, 1383515, 1271214, 1509558, 521808, 666801, 1193985, 463443, 934191, 1227590, 463834, 413072, 398638, 404807, 422876, 1449280, 426048, 859280, 416893, 1444803, 458110, 379050, 663868, 1201730, 1683165, 730484, 681084, 356484, 1097869, 355603, 328464, 437265, 972748, 973513, 362078, 615738, 313858, 727037, 375003, 372247, 353071, 608817, 481434, 615025, 265074, 1813586, 1232442, 1167412, 331335, 306465, 1048885, 362207, 392100, 1175869, 777030, 555335, 357503, 406060, 365051, 314914, 549296, 659008, 1044075, 563339, 347588, 828284, 635225, 512525, 583628, 319855, 683465, 716139, 288989, 568477, 549455, 529978, 1028976, 386173, 396175, 341720, 385694, 600668, 596792, 621694, 609115, 561164, 422772, 776377, 2198795, 1022073, 782540, 292871, 236914]

Coverage test list:
[3000, 16, 16, 8, 0, 0, 2011, 637, 204, 842, 179, 0, 0, 0, 253, 73, 0, 16, 408, 8, 0, 0, 0, 0, 0, 0, 0, 73, 147, 0, 16, 89, 16, 0, 179, 8, 98, 8, 0, 0, 147, 65, 57, 0, 49, 0, 0, 0, 0, 49, 49, 188, 0, 8, 0, 0, 0, 0, 0, 0, 8, 0, 98, 8, 0, 0, 16, 0, 0, 0, 57, 0, 0, 8, 0, 0, 0, 57, 122, 24, 114, 0, 65, 57, 57, 98, 32, 0, 8, 40, 8, 81, 81, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8]
--------------------------
Total time (of all machines and iterations plus initial TestListGenerator): 0.434