The following arguments were used to generate this output.
[-technique, prioritization, -coverage, statement, -order, absolute, -origOrder, synoptic-orig-order, -testInputDir, sootTestOutput-orig, -filesToDelete, synoptic-env-files, -getCoverage, -project, Synoptic, -testType, orig, -outputDir, /home/user/dependent-tests-impact/experiments/prioritization-results, -timesToRun, 1]

Execution time of TLG and its time to find/nullify any DTs for 1 machine (does not include the time to run the tests in the new order): 0.600
Number of tests selected out of total in original order: 118 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
APFD value: 0.6766180060033605
Execution time for executing the following testing order: 0.502

Test order list:
[dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, mcscm.McScMTests.testSafeScmInput, mcscm.McScMTests.testUnsafeScmInputLen1, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.NeverFollowedByTests.create, mcscm.McScMTests.testEmptyScmInput, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds]

Time each test takes to run in the new order:
[76824306, 3125287, 3518064, 22215777, 6288912, 7750648, 11816037, 10894824, 2789756, 11685229, 6912452, 6049487, 2868367, 3099778, 3825508, 1845871, 10069800, 7627514, 2098591, 3563008, 1712351, 4243895, 3598840, 6070849, 3720530, 6922629, 3136185, 1411376, 1241227, 1489329, 2983415, 1886157, 842672, 2984010, 1639376, 1409826, 1185050, 1439946, 1380000, 1386817, 2038084, 1306201, 1016233, 1766135, 2025768, 1424498, 1200567, 1505006, 1933653, 4893828, 1628087, 765990, 704538, 3157891, 1202225, 6305242, 1301705, 1687615, 1840033, 1532343, 4621387, 1058152, 3517239, 1081260, 1125255, 1083389, 1068731, 1431900, 1220668, 897536, 1993728, 5437973, 1711608, 1071560, 1156905, 7411167, 1102435, 1692095, 1507286, 6180063, 4116280, 1040370, 1140241, 1113842, 12190586, 4431074, 1422453, 9297068, 5586662, 1113409, 1603670, 8873715, 733060, 792473, 1074580, 3884009, 9484157, 984258, 1346894, 8978837, 1555976, 1924489, 23853429, 2013106, 1677336, 5693864, 2065642, 4662500, 10124881, 5813541, 1180386, 1170714, 4171492, 10069338, 2065164, 2052858, 589742, 494027]

Coverage test list:
[3000, 16, 16, 8, 0, 0, 2011, 637, 204, 842, 179, 0, 0, 0, 253, 73, 0, 16, 408, 8, 0, 0, 0, 0, 0, 0, 0, 73, 147, 0, 16, 89, 16, 0, 179, 8, 98, 8, 0, 0, 147, 65, 57, 0, 49, 0, 0, 0, 0, 49, 49, 188, 0, 8, 0, 0, 0, 0, 0, 0, 8, 0, 98, 8, 0, 0, 16, 0, 0, 0, 57, 0, 0, 8, 0, 0, 0, 57, 122, 24, 114, 0, 65, 57, 57, 98, 32, 0, 8, 40, 8, 81, 81, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8]
--------------------------
Total time (of all machines and iterations plus initial TestListGenerator): 0.616