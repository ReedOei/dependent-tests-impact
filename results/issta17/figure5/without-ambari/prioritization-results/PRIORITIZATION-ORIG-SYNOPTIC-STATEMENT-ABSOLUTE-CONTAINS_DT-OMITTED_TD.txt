The following arguments were used to generate this output.
[-technique, prioritization, -coverage, statement, -order, absolute, -origOrder, synoptic-orig-order, -testInputDir, sootTestOutput-orig, -filesToDelete, synoptic-env-files, -getCoverage, -project, Synoptic, -testType, orig, -outputDir, /home/user/dependent-tests-impact/experiments/prioritization-results, -timesToRun, 1]

Execution time of TLG and its time to find/nullify any DTs for 1 machine (does not include the time to run the tests in the new order): 0.756
Number of tests selected out of total in original order: 118 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
APFD value: 0.6538857883118151
Execution time for executing the following testing order: 0.673

Test order list:
[dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, mcscm.McScMTests.testSafeScmInput, mcscm.McScMTests.testUnsafeScmInputLen1, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.NeverFollowedByTests.create, mcscm.McScMTests.testEmptyScmInput, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds]

Time each test takes to run in the new order:
[99721304, 3330504, 3830416, 28592122, 13778727, 14140570, 21613328, 18468162, 4611301, 16821534, 9846294, 12313957, 6150033, 5579162, 7284043, 3432399, 10946638, 18710544, 3665134, 4141050, 1859992, 5647307, 3998230, 7298024, 6696279, 11995549, 5710682, 2558547, 2113795, 2425609, 5411981, 3237470, 1421843, 4748455, 2998920, 2750879, 2294609, 2562966, 2588575, 2528378, 3859592, 2250814, 1731465, 2930053, 3556375, 2573783, 2097403, 1762147, 1938073, 5506444, 1724499, 885607, 770584, 1988106, 2123669, 7058195, 1483160, 3971282, 2354981, 1555870, 5389686, 1267992, 4076320, 1159904, 1240282, 4286532, 1383455, 1601230, 1398616, 923724, 11709126, 2513041, 2305397, 1352366, 1309814, 2017071, 6317596, 7501408, 1715008, 5607445, 1394286, 1385415, 5968398, 2224606, 1328436, 14566185, 1896895, 4268448, 2746023, 2871947, 10485741, 10853509, 1345762, 1352353, 9984709, 1679405, 6425286, 1657734, 13943512, 1536942, 8809168, 2062659, 6872653, 2036959, 1574035, 1512631, 10172314, 2616912, 8185482, 1817300, 1090745, 1234290, 4997054, 9656882, 4300629, 1957678, 906527, 543653]

Coverage test list:
[3000, 16, 16, 8, 0, 0, 2011, 637, 204, 842, 179, 0, 0, 0, 253, 73, 0, 16, 408, 8, 0, 0, 0, 0, 0, 0, 0, 73, 147, 0, 16, 89, 16, 0, 179, 8, 98, 8, 0, 0, 147, 65, 57, 0, 49, 0, 0, 0, 0, 49, 49, 188, 0, 8, 0, 0, 0, 0, 0, 0, 8, 0, 98, 8, 0, 0, 16, 0, 0, 0, 57, 0, 0, 8, 0, 0, 0, 57, 122, 24, 114, 0, 65, 57, 57, 98, 32, 0, 8, 40, 8, 81, 81, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8]
--------------------------
Total time (of all machines and iterations plus initial TestListGenerator): 0.874