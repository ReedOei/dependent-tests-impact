Mar 11, 2014 12:30:40 AM dynoptic.invariants.NeverFollowedByTests create
INFO: (0-0->1:0->1 ! e1) NFby (1-1->0:1->0 ! e2)
Mar 11, 2014 12:30:40 AM dynoptic.invariants.NeverFollowedByTests scmBadStatesString
INFO: (ch0Se1TR0 | ch0Se1TR1 | ch1Se2TR0 | ch1Se2TR1)^* . (ch0Se1TR0 . ch0Se1TR1) . (ch0Se1TR0 | ch0Se1TR1 | ch1Se2TR0 | ch1Se2TR1)^* . (ch1Se2TR0 . ch1Se2TR1) . (ch0Se1TR0 | ch0Se1TR1 | ch1Se2TR0 | ch1Se2TR1)^*
Mar 11, 2014 12:30:40 AM dynoptic.invariants.AlwaysPrecedesTests create
INFO: (0-0->1:0->1 ! e1) AP (1-1->0:1->0 ! e2)
Mar 11, 2014 12:30:40 AM dynoptic.invariants.AlwaysPrecedesTests scmBadStatesString
INFO: (ch1Se2TR0 . ch1Se2TR1)^+ . (ch0Se1TR0 | ch0Se1TR1 | ch1Se2TR0 | ch1Se2TR1)^*
Mar 11, 2014 12:30:40 AM dynoptic.invariants.EventuallyHappensTests create
INFO: (INITIALp-1L) Eventually (0-0->1:0->1 ! e1)
Mar 11, 2014 12:30:40 AM dynoptic.invariants.EventuallyHappensTests scmBadStatesString
INFO: _
Mar 11, 2014 12:30:40 AM dynoptic.invariants.AlwaysFollowedByTests create
INFO: (0-0->1:0->1 ! e1) AFby (1-1->0:1->0 ! e2)
Mar 11, 2014 12:30:40 AM dynoptic.invariants.AlwaysFollowedByTests scmBadStatesString
INFO: (ch0Se1TR0 | ch0Se1TR1 | ch1Se2TR0 | ch1Se2TR1)^* . (ch0Se1TR0 . ch0Se1TR1)^+
Mar 11, 2014 12:30:40 AM dynoptic.model.alphabet.DistEventTypeTests createRecv
INFO: 0-A:1->2 ? e
Mar 11, 2014 12:30:40 AM dynoptic.model.alphabet.DistEventTypeTests createSend
INFO: 0-A:1->2 ! e
Mar 11, 2014 12:30:40 AM dynoptic.model.alphabet.DistEventTypeTests createLocal
INFO: ep1L
Mar 11, 2014 12:30:40 AM dynoptic.model.alphabet.DistEventTypeTests createSynthSend
INFO: 0-A:1->2 ! ch0ReTR0
Mar 11, 2014 12:30:41 AM dynoptic.model.export.GraphExporter exportCFSM
INFO: Exporting CFSM to: ./test.dot
Mar 11, 2014 12:30:41 AM dynoptic.model.export.GraphExporter exportCFSM
INFO: Exporting CFSM to: ./test.dot
Mar 11, 2014 12:30:41 AM dynoptic.model.export.GraphExporter exportCFSM
INFO: Exporting CFSM to: ./test.dot
Mar 11, 2014 12:30:41 AM dynoptic.model.export.GraphExporter exportCFSM
INFO: Exporting CFSM to: ./test.dot
Mar 11, 2014 12:30:41 AM dynoptic.model.fifosys.cfsm.CFSMTests scmString
INFO: scm test:

nb_channels = 2 ;
/*
channel 0 : 0-0->1:0->1
channel 1 : 1-ch-locals:0->0
*/

parameters :
real m ;
real ep0L ;
real fp1L ;

automaton p0 :
initial : 0
state 0 :
to 1 : when true , 0 ! m ;


state 1 :
to 0 : when true , 1 ! ep0L ;



automaton p1 :
initial : 0
state 0 :
to 1 : when true , 0 ? m ;


state 1 :
to 0 : when true , 1 ! fp1L ;




Mar 11, 2014 12:30:41 AM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithAFby
INFO: (0-0->1:0->1 ! m) AFby (0-0->1:0->1 ? m)
Mar 11, 2014 12:30:41 AM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithAFby
INFO: (automaton p0: in 1: true
automaton p1: in 1: true
with _ . # . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^* . (ch0SmTR0 . ch0SmTR1)^+
)
Mar 11, 2014 12:30:41 AM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithAFby
INFO: scm augmentWithAFby-test:

nb_channels = 3 ;
/*
channel 0 : 0-0->1:0->1
channel 1 : 1-ch-[(0-0->1:0->1 ! m) AFby (0-0->1:0->1 ? m)]:0->0
channel 2 : 2-ch-locals:0->0
*/

parameters :
real m ;
real ep0L ;
real fp1L ;
real ch0SmTR0 ;
real ch0SmTR1 ;
real ch0RmTR0 ;
real ch0RmTR1 ;

automaton p0 :
initial : 0
state 0 :
to 2 : when true , 1 ! ch0SmTR0 ;


state 1 :
to 0 : when true , 2 ! ep0L ;


state 2 :
to 3 : when true , 0 ! m ;


state 3 :
to 1 : when true , 1 ! ch0SmTR1 ;



automaton p1 :
initial : 0
state 0 :
to 2 : when true , 1 ! ch0RmTR0 ;


state 1 :
to 0 : when true , 2 ! fp1L ;


state 2 :
to 3 : when true , 0 ? m ;


state 3 :
to 1 : when true , 1 ! ch0RmTR1 ;




bad_states:
(automaton p0: in 1: true
automaton p1: in 1: true
with _ . # . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^* . (ch0SmTR0 . ch0SmTR1)^+ . # . (ep0L | fp1L)^*
)

Mar 11, 2014 12:30:41 AM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithNFby
INFO: (0-0->1:0->1 ! m) NFby (0-0->1:0->1 ? m)
Mar 11, 2014 12:30:41 AM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithNFby
INFO: (automaton p0: in 1: true
automaton p1: in 1: true
with _ . # . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^* . (ch0SmTR0 . ch0SmTR1) . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^* . (ch0RmTR0 . ch0RmTR1) . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^*
)
Mar 11, 2014 12:30:41 AM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithNFby
INFO: scm augmentWithNFby-test:

nb_channels = 3 ;
/*
channel 0 : 0-0->1:0->1
channel 1 : 1-ch-[(0-0->1:0->1 ! m) NFby (0-0->1:0->1 ? m)]:0->0
channel 2 : 2-ch-locals:0->0
*/

parameters :
real m ;
real ep0L ;
real fp1L ;
real ch0SmTR0 ;
real ch0SmTR1 ;
real ch0RmTR0 ;
real ch0RmTR1 ;

automaton p0 :
initial : 0
state 0 :
to 2 : when true , 1 ! ch0SmTR0 ;


state 1 :
to 0 : when true , 2 ! ep0L ;


state 2 :
to 3 : when true , 0 ! m ;


state 3 :
to 1 : when true , 1 ! ch0SmTR1 ;



automaton p1 :
initial : 0
state 0 :
to 2 : when true , 1 ! ch0RmTR0 ;


state 1 :
to 0 : when true , 2 ! fp1L ;


state 2 :
to 3 : when true , 0 ? m ;


state 3 :
to 1 : when true , 1 ! ch0RmTR1 ;




bad_states:
(automaton p0: in 1: true
automaton p1: in 1: true
with _ . # . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^* . (ch0SmTR0 . ch0SmTR1) . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^* . (ch0RmTR0 . ch0RmTR1) . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^* . # . (ep0L | fp1L)^*
)

Mar 11, 2014 12:30:41 AM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithAP
INFO: (0-0->1:0->1 ! m) AP (0-0->1:0->1 ? m)
Mar 11, 2014 12:30:41 AM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithAP
INFO: (automaton p0: in 1: true
automaton p1: in 1: true
with _ . # . (ch0RmTR0 . ch0RmTR1)^+ . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^*
)
Mar 11, 2014 12:30:41 AM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithAP
INFO: scm augmentWithAP-test:

nb_channels = 3 ;
/*
channel 0 : 0-0->1:0->1
channel 1 : 1-ch-[(0-0->1:0->1 ! m) AP (0-0->1:0->1 ? m)]:0->0
channel 2 : 2-ch-locals:0->0
*/

parameters :
real m ;
real ep0L ;
real fp1L ;
real ch0SmTR0 ;
real ch0SmTR1 ;
real ch0RmTR0 ;
real ch0RmTR1 ;

automaton p0 :
initial : 0
state 0 :
to 2 : when true , 1 ! ch0SmTR0 ;


state 1 :
to 0 : when true , 2 ! ep0L ;


state 2 :
to 3 : when true , 0 ! m ;


state 3 :
to 1 : when true , 1 ! ch0SmTR1 ;



automaton p1 :
initial : 0
state 0 :
to 2 : when true , 1 ! ch0RmTR0 ;


state 1 :
to 0 : when true , 2 ! fp1L ;


state 2 :
to 3 : when true , 0 ? m ;


state 3 :
to 1 : when true , 1 ! ch0RmTR1 ;




bad_states:
(automaton p0: in 1: true
automaton p1: in 1: true
with _ . # . (ch0RmTR0 . ch0RmTR1)^+ . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^* . # . (ep0L | fp1L)^*
)

Mar 11, 2014 12:30:41 AM dynoptic.model.fifosys.cfsm.fsm.FSMTests scmString
INFO: initial : 0
state 0 :
to 1 : when true , 0 ! m ;


state 1 :
to 0 : when true , 1 ! ep1L ;



Mar 11, 2014 12:30:42 AM dynoptic.model.fifosys.cfsm.fsm.BadStateTests createAndScmString
INFO: (automaton p0: in 0: true
automaton p1: in 2: true
with .* . # . .*
)
Mar 11, 2014 12:30:42 AM dynoptic.model.fifosys.cfsm.fsm.BadStateTests createAndScmString
INFO: (automaton p0: in 0: true
automaton p1: in 2: true
with .* . # . .*
)
Mar 11, 2014 12:30:42 AM dynoptic.model.fifosys.cfsm.fsm.FSMStateTests scmString
INFO: state 0 :

Mar 11, 2014 12:30:42 AM dynoptic.model.fifosys.cfsm.fsm.FSMStateTests scmString
INFO: state 0 :
to 1 : when true , 0 ! m ;
to 1 : when true , 1 ! ep1L ;

Mar 11, 2014 12:30:42 AM dynoptic.model.fifosys.cfsm.fsm.FSMStateTests checkInitAcceptPid
INFO: 0
Mar 11, 2014 12:30:42 AM dynoptic.model.fifosys.cfsm.fsm.FSMStateTests checkInitAcceptPid
INFO: 1
Mar 11, 2014 12:30:42 AM dynoptic.model.fifosys.channel.channelid.ChannelIdTests invChannelId
INFO: 0-ch-[(ep0L) AFby (fp0L)]:0->0
Mar 11, 2014 12:30:42 AM dynoptic.model.fifosys.channel.channelid.ChannelIdTests createChannelId
INFO: 0-1->2:1->2
Mar 11, 2014 12:30:42 AM dynoptic.model.fifosys.channel.channelid.ChannelIdTests createChannelId
INFO: 0-ChName:1->2
Mar 11, 2014 12:30:42 AM dynoptic.model.fifosys.channel.channelid.ChannelIdTests localEventsChannelId
INFO: 42-ch-locals:0->0
Mar 11, 2014 12:30:42 AM synoptic.model.channelid.ChannelId parseChannelSpec
INFO: Parsed ChannelId : 0-M:0->1
Mar 11, 2014 12:30:42 AM synoptic.model.channelid.ChannelId parseChannelSpec
INFO: Parsed ChannelId : 1-A:1->0
Mar 11, 2014 12:30:42 AM synoptic.model.channelid.ChannelId parseChannelSpec
INFO: Parsed ChannelId : 0-M:0->1
Mar 11, 2014 12:30:42 AM synoptic.model.channelid.ChannelId parseChannelSpec
INFO: Parsed ChannelId : 1-A:1->0
Mar 11, 2014 12:30:42 AM synoptic.model.channelid.ChannelId parseChannelSpec
INFO: Parsed ChannelId : 0-M:22->100
Mar 11, 2014 12:30:42 AM synoptic.model.channelid.ChannelId parseChannelSpec
INFO: Parsed ChannelId : 0-M:0->1
Mar 11, 2014 12:30:42 AM synoptic.model.channelid.ChannelId parseChannelSpec
INFO: Parsed ChannelId : 0-M:0->1
Mar 11, 2014 12:30:42 AM dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests toStringCheck
INFO: ChStates[0-1->2:1->2: [], 1-2->1:2->1: []]
Mar 11, 2014 12:30:43 AM dynoptic.model.fifosys.gfsm.GFSMStateTests stateWithObs
INFO: [0]
Mar 11, 2014 12:30:43 AM dynoptic.model.fifosys.gfsm.GFSMStateTests createGFSMState
INFO: []
Mar 11, 2014 12:30:43 AM dynoptic.model.fifosys.gfsm.GFSM addToQueueContentsHashMap
INFO: Creating a new partition for ch-states like: ChState]
Mar 11, 2014 12:30:43 AM dynoptic.model.fifosys.gfsm.GFSM getCFSM
INFO: GFSM -> CFSM: GFSM[num-states=1] : 
	[3, 4]

Mar 11, 2014 12:30:43 AM dynoptic.model.fifosys.gfsm.GFSM getCFSM
INFO: Building FSM for pid 0
Mar 11, 2014 12:30:43 AM dynoptic.model.fifosys.gfsm.GFSM getCFSM
INFO: GFSMState->FSMState[pid=0] stateMap : {[3, 4]=0}
Mar 11, 2014 12:30:43 AM dynoptic.model.fifosys.gfsm.GFSM addToQueueContentsHashMap
INFO: Creating a new partition for ch-states like: ChState]
Mar 11, 2014 12:30:43 AM dynoptic.model.fifosys.gfsm.GFSM addToQueueContentsHashMap
INFO: Creating a new partition for ch-states like: ChState]
Mar 11, 2014 12:30:43 AM dynoptic.model.fifosys.gfsm.GFSM addToQueueContentsHashMap
INFO: Creating a new partition for ch-states like: ChState]
Mar 11, 2014 12:30:43 AM dynoptic.model.export.GraphExporter exportGFSM
INFO: Exporting GFSM to: ./test.dot
Mar 11, 2014 12:30:43 AM dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests create
INFO: FSMStates[p_t, q_t]
Mar 11, 2014 12:30:43 AM dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests createConsistentAnonInit
INFO: i_a0
Mar 11, 2014 12:30:43 AM dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests createNamed
INFO: a
Mar 11, 2014 12:30:43 AM dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests createConsistentAnonIntermediate
INFO: a0.ep0L
Mar 11, 2014 12:30:43 AM dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests checkCreate
INFO: 11
Mar 11, 2014 12:30:43 AM mcscm.McScMTests testEmptyScmInput
INFO: Verify threw an exception: java.io.IOException: Cannot run program "../bin/mcscm/verify.native.linux.static" (in directory "."): error=2, No such file or directory
Mar 11, 2014 12:30:43 AM mcscm.McScMTests testSafeScmInput
INFO: Verify threw an exception: java.io.IOException: Cannot run program "../bin/mcscm/verify.native.linux.static" (in directory "."): error=2, No such file or directory
Mar 11, 2014 12:30:43 AM mcscm.McScMTests testUnsafeScmInputLen1
INFO: Verify threw an exception: java.io.IOException: Cannot run program "../bin/mcscm/verify.native.linux.static" (in directory "."): error=2, No such file or directory
Mar 11, 2014 12:30:43 AM mcscm.McScMTests testUnsafeScmInputLen2
INFO: Verify threw an exception: java.io.IOException: Cannot run program "../bin/mcscm/verify.native.linux.static" (in directory "."): error=2, No such file or directory
Execution time: 4853945062
0-th run
Pass: 102, Fail: 0, Error: 16
{dynoptic.invariants.NeverFollowedByTests.create=645925862, dynoptic.invariants.NeverFollowedByTests.testSatisfies=10692185, dynoptic.invariants.NeverFollowedByTests.getFirstSecond=9609878, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString=28411963, dynoptic.invariants.NeverFollowedByTests.equality=14892325, dynoptic.invariants.AlwaysPrecedesTests.create=19578910, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies=23988632, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond=22138712, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString=14826802, dynoptic.invariants.AlwaysPrecedesTests.equality=10011814, dynoptic.invariants.EventuallyHappensTests.create=14506450, dynoptic.invariants.EventuallyHappensTests.testSatisfies=18343069, dynoptic.invariants.EventuallyHappensTests.getFirstSecond=6827087, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString=17680193, dynoptic.invariants.EventuallyHappensTests.equality=13068694, dynoptic.invariants.AlwaysFollowedByTests.create=13570449, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies=18276487, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond=5312518, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString=13642926, dynoptic.invariants.AlwaysFollowedByTests.equality=10642253, dynoptic.invariants.checkers.CheckersTests.checkEventually=15500045, dynoptic.invariants.checkers.CheckersTests.checkAFby=4761882, dynoptic.invariants.checkers.CheckersTests.checkNFby=24242564, dynoptic.invariants.checkers.CheckersTests.checkAP=20155993, dynoptic.model.alphabet.DistEventTypeTests.createRecv=39391318, dynoptic.model.alphabet.DistEventTypeTests.createSend=20116169, dynoptic.model.alphabet.DistEventTypeTests.createLocal=16007913, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend=35309659, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend=20962380, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv=37931220, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal=24893481, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1=26555800, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2=12496183, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM=107129965, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder=68246972, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM=17892091, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize=52757462, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM=19323486, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM=23509443, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM=28215703, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM=34093240, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage=26318064, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM=51397693, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid=31596851, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent=13837044, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent=4314163, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents=9493713, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents=7611110, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents=11433260, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest=68433916, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest=14184297, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest=43322445, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest=80903806, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState=29024525, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns=14666471, dynoptic.model.fifosys.cfsm.CFSMTests.scmString=71603318, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts=45130670, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM=24641763, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby=62883969, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby=28249393, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP=26379244, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby=41864410, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby=10437256, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP=9203759, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString=8508274, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM=19308472, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns=7738780, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1=6137573, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2=9424170, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString=9163655, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest=29157329, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition=20431673, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition=17623947, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition=26926584, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions=15029248, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState=37801953, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates=10453727, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString=38544447, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid=26012417, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition=28342637, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions=38609400, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid=21149990, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId=52907778, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId=48912046, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId=24865082, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId=95830836, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping=28460804, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals=27459508, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds=104703774, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames=57689033, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable=41670821, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals=46502932, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty=37063218, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState=13391906, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck=23451481, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq=10202211, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs=35776218, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState=30406548, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath=37628863, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM=43878288, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM=10326181, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace=29132917, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM=33758040, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance=8332845, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds=933354, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality=4477984, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create=4616929, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit=7376507, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon=1036874, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed=17799458, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate=9719488, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create=5511229, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate=7264133, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns=1189965, mcscm.McScMTests.testEmptyScmInput=37460511, mcscm.McScMTests.testSafeScmInput=17774823, mcscm.McScMTests.testUnsafeScmInputLen1=4317883, mcscm.McScMTests.testUnsafeScmInputLen2=11719984}

