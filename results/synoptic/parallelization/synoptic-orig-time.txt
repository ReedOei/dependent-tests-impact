Mar 03, 2014 11:33:03 PM dynoptic.invariants.NeverFollowedByTests create
INFO: (0-0->1:0->1 ! e1) NFby (1-1->0:1->0 ! e2)
Mar 03, 2014 11:33:03 PM dynoptic.invariants.NeverFollowedByTests scmBadStatesString
INFO: (ch0Se1TR0 | ch0Se1TR1 | ch1Se2TR0 | ch1Se2TR1)^* . (ch0Se1TR0 . ch0Se1TR1) . (ch0Se1TR0 | ch0Se1TR1 | ch1Se2TR0 | ch1Se2TR1)^* . (ch1Se2TR0 . ch1Se2TR1) . (ch0Se1TR0 | ch0Se1TR1 | ch1Se2TR0 | ch1Se2TR1)^*
Mar 03, 2014 11:33:03 PM dynoptic.invariants.AlwaysPrecedesTests create
INFO: (0-0->1:0->1 ! e1) AP (1-1->0:1->0 ! e2)
Mar 03, 2014 11:33:04 PM dynoptic.invariants.AlwaysPrecedesTests scmBadStatesString
INFO: (ch1Se2TR0 . ch1Se2TR1)^+ . (ch0Se1TR0 | ch0Se1TR1 | ch1Se2TR0 | ch1Se2TR1)^*
Mar 03, 2014 11:33:04 PM dynoptic.invariants.EventuallyHappensTests create
INFO: (INITIALp-1L) Eventually (0-0->1:0->1 ! e1)
Mar 03, 2014 11:33:04 PM dynoptic.invariants.EventuallyHappensTests scmBadStatesString
INFO: _
Mar 03, 2014 11:33:04 PM dynoptic.invariants.AlwaysFollowedByTests create
INFO: (0-0->1:0->1 ! e1) AFby (1-1->0:1->0 ! e2)
Mar 03, 2014 11:33:04 PM dynoptic.invariants.AlwaysFollowedByTests scmBadStatesString
INFO: (ch0Se1TR0 | ch0Se1TR1 | ch1Se2TR0 | ch1Se2TR1)^* . (ch0Se1TR0 . ch0Se1TR1)^+
Mar 03, 2014 11:33:04 PM dynoptic.model.alphabet.DistEventTypeTests createRecv
INFO: 0-A:1->2 ? e
Mar 03, 2014 11:33:04 PM dynoptic.model.alphabet.DistEventTypeTests createSend
INFO: 0-A:1->2 ! e
Mar 03, 2014 11:33:04 PM dynoptic.model.alphabet.DistEventTypeTests createLocal
INFO: ep1L
Mar 03, 2014 11:33:04 PM dynoptic.model.alphabet.DistEventTypeTests createSynthSend
INFO: 0-A:1->2 ! ch0ReTR0
Mar 03, 2014 11:33:04 PM dynoptic.model.export.GraphExporter exportCFSM
INFO: Exporting CFSM to: ./test.dot
Mar 03, 2014 11:33:04 PM dynoptic.model.export.GraphExporter exportCFSM
INFO: Exporting CFSM to: ./test.dot
Mar 03, 2014 11:33:04 PM dynoptic.model.export.GraphExporter exportCFSM
INFO: Exporting CFSM to: ./test.dot
Mar 03, 2014 11:33:04 PM dynoptic.model.export.GraphExporter exportCFSM
INFO: Exporting CFSM to: ./test.dot
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.CFSMTests scmString
INFO: scm test:

nb_channels = 2 ;
/*
channel 0 : 0-0->1:0->1
channel 1 : 1-ch-locals:0->0
*/

parameters :
real m ;
real ep0L ;
real fp1L ;

automaton p0 :
initial : 0
state 0 :
to 1 : when true , 0 ! m ;


state 1 :
to 0 : when true , 1 ! ep0L ;



automaton p1 :
initial : 0
state 0 :
to 1 : when true , 0 ? m ;


state 1 :
to 0 : when true , 1 ! fp1L ;




Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithAFby
INFO: (0-0->1:0->1 ! m) AFby (0-0->1:0->1 ? m)
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithAFby
INFO: (automaton p0: in 1: true
automaton p1: in 1: true
with _ . # . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^* . (ch0SmTR0 . ch0SmTR1)^+
)
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithAFby
INFO: scm augmentWithAFby-test:

nb_channels = 3 ;
/*
channel 0 : 0-0->1:0->1
channel 1 : 1-ch-[(0-0->1:0->1 ! m) AFby (0-0->1:0->1 ? m)]:0->0
channel 2 : 2-ch-locals:0->0
*/

parameters :
real m ;
real ep0L ;
real fp1L ;
real ch0SmTR0 ;
real ch0SmTR1 ;
real ch0RmTR0 ;
real ch0RmTR1 ;

automaton p0 :
initial : 0
state 0 :
to 2 : when true , 1 ! ch0SmTR0 ;


state 1 :
to 0 : when true , 2 ! ep0L ;


state 2 :
to 3 : when true , 0 ! m ;


state 3 :
to 1 : when true , 1 ! ch0SmTR1 ;



automaton p1 :
initial : 0
state 0 :
to 2 : when true , 1 ! ch0RmTR0 ;


state 1 :
to 0 : when true , 2 ! fp1L ;


state 2 :
to 3 : when true , 0 ? m ;


state 3 :
to 1 : when true , 1 ! ch0RmTR1 ;




bad_states:
(automaton p0: in 1: true
automaton p1: in 1: true
with _ . # . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^* . (ch0SmTR0 . ch0SmTR1)^+ . # . (ep0L | fp1L)^*
)

Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithNFby
INFO: (0-0->1:0->1 ! m) NFby (0-0->1:0->1 ? m)
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithNFby
INFO: (automaton p0: in 1: true
automaton p1: in 1: true
with _ . # . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^* . (ch0SmTR0 . ch0SmTR1) . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^* . (ch0RmTR0 . ch0RmTR1) . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^*
)
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithNFby
INFO: scm augmentWithNFby-test:

nb_channels = 3 ;
/*
channel 0 : 0-0->1:0->1
channel 1 : 1-ch-[(0-0->1:0->1 ! m) NFby (0-0->1:0->1 ? m)]:0->0
channel 2 : 2-ch-locals:0->0
*/

parameters :
real m ;
real ep0L ;
real fp1L ;
real ch0SmTR0 ;
real ch0SmTR1 ;
real ch0RmTR0 ;
real ch0RmTR1 ;

automaton p0 :
initial : 0
state 0 :
to 2 : when true , 1 ! ch0SmTR0 ;


state 1 :
to 0 : when true , 2 ! ep0L ;


state 2 :
to 3 : when true , 0 ! m ;


state 3 :
to 1 : when true , 1 ! ch0SmTR1 ;



automaton p1 :
initial : 0
state 0 :
to 2 : when true , 1 ! ch0RmTR0 ;


state 1 :
to 0 : when true , 2 ! fp1L ;


state 2 :
to 3 : when true , 0 ? m ;


state 3 :
to 1 : when true , 1 ! ch0RmTR1 ;




bad_states:
(automaton p0: in 1: true
automaton p1: in 1: true
with _ . # . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^* . (ch0SmTR0 . ch0SmTR1) . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^* . (ch0RmTR0 . ch0RmTR1) . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^* . # . (ep0L | fp1L)^*
)

Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithAP
INFO: (0-0->1:0->1 ! m) AP (0-0->1:0->1 ? m)
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithAP
INFO: (automaton p0: in 1: true
automaton p1: in 1: true
with _ . # . (ch0RmTR0 . ch0RmTR1)^+ . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^*
)
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.CFSMTests augmentWithAP
INFO: scm augmentWithAP-test:

nb_channels = 3 ;
/*
channel 0 : 0-0->1:0->1
channel 1 : 1-ch-[(0-0->1:0->1 ! m) AP (0-0->1:0->1 ? m)]:0->0
channel 2 : 2-ch-locals:0->0
*/

parameters :
real m ;
real ep0L ;
real fp1L ;
real ch0SmTR0 ;
real ch0SmTR1 ;
real ch0RmTR0 ;
real ch0RmTR1 ;

automaton p0 :
initial : 0
state 0 :
to 2 : when true , 1 ! ch0SmTR0 ;


state 1 :
to 0 : when true , 2 ! ep0L ;


state 2 :
to 3 : when true , 0 ! m ;


state 3 :
to 1 : when true , 1 ! ch0SmTR1 ;



automaton p1 :
initial : 0
state 0 :
to 2 : when true , 1 ! ch0RmTR0 ;


state 1 :
to 0 : when true , 2 ! fp1L ;


state 2 :
to 3 : when true , 0 ? m ;


state 3 :
to 1 : when true , 1 ! ch0RmTR1 ;




bad_states:
(automaton p0: in 1: true
automaton p1: in 1: true
with _ . # . (ch0RmTR0 . ch0RmTR1)^+ . (ch0SmTR0 | ch0SmTR1 | ch0RmTR0 | ch0RmTR1)^* . # . (ep0L | fp1L)^*
)

Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.fsm.FSMTests scmString
INFO: initial : 0
state 0 :
to 1 : when true , 0 ! m ;


state 1 :
to 0 : when true , 1 ! ep1L ;



Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.fsm.BadStateTests createAndScmString
INFO: (automaton p0: in 0: true
automaton p1: in 2: true
with .* . # . .*
)
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.fsm.BadStateTests createAndScmString
INFO: (automaton p0: in 0: true
automaton p1: in 2: true
with .* . # . .*
)
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.fsm.FSMStateTests scmString
INFO: state 0 :

Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.fsm.FSMStateTests scmString
INFO: state 0 :
to 1 : when true , 0 ! m ;
to 1 : when true , 1 ! ep1L ;

Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.fsm.FSMStateTests checkInitAcceptPid
INFO: 0
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.cfsm.fsm.FSMStateTests checkInitAcceptPid
INFO: 1
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.channel.channelid.ChannelIdTests invChannelId
INFO: 0-ch-[(ep0L) AFby (fp0L)]:0->0
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.channel.channelid.ChannelIdTests createChannelId
INFO: 0-1->2:1->2
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.channel.channelid.ChannelIdTests createChannelId
INFO: 0-ChName:1->2
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.channel.channelid.ChannelIdTests localEventsChannelId
INFO: 42-ch-locals:0->0
Mar 03, 2014 11:33:05 PM synoptic.model.channelid.ChannelId parseChannelSpec
INFO: Parsed ChannelId : 0-M:0->1
Mar 03, 2014 11:33:05 PM synoptic.model.channelid.ChannelId parseChannelSpec
INFO: Parsed ChannelId : 1-A:1->0
Mar 03, 2014 11:33:05 PM synoptic.model.channelid.ChannelId parseChannelSpec
INFO: Parsed ChannelId : 0-M:0->1
Mar 03, 2014 11:33:05 PM synoptic.model.channelid.ChannelId parseChannelSpec
INFO: Parsed ChannelId : 1-A:1->0
Mar 03, 2014 11:33:05 PM synoptic.model.channelid.ChannelId parseChannelSpec
INFO: Parsed ChannelId : 0-M:22->100
Mar 03, 2014 11:33:05 PM synoptic.model.channelid.ChannelId parseChannelSpec
INFO: Parsed ChannelId : 0-M:0->1
Mar 03, 2014 11:33:05 PM synoptic.model.channelid.ChannelId parseChannelSpec
INFO: Parsed ChannelId : 0-M:0->1
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests toStringCheck
INFO: ChStates[0-1->2:1->2: [], 1-2->1:2->1: []]
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.gfsm.GFSMStateTests stateWithObs
INFO: [0]
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.gfsm.GFSMStateTests createGFSMState
INFO: []
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.gfsm.GFSM addToQueueContentsHashMap
INFO: Creating a new partition for ch-states like: ChState]
Mar 03, 2014 11:33:05 PM dynoptic.model.fifosys.gfsm.GFSM getCFSM
INFO: GFSM -> CFSM: GFSM[num-states=1] : 
	[3, 4]

Mar 03, 2014 11:33:06 PM dynoptic.model.fifosys.gfsm.GFSM getCFSM
INFO: Building FSM for pid 0
Mar 03, 2014 11:33:06 PM dynoptic.model.fifosys.gfsm.GFSM getCFSM
INFO: GFSMState->FSMState[pid=0] stateMap : {[3, 4]=0}
Mar 03, 2014 11:33:06 PM dynoptic.model.fifosys.gfsm.GFSM addToQueueContentsHashMap
INFO: Creating a new partition for ch-states like: ChState]
Mar 03, 2014 11:33:06 PM dynoptic.model.fifosys.gfsm.GFSM addToQueueContentsHashMap
INFO: Creating a new partition for ch-states like: ChState]
Mar 03, 2014 11:33:06 PM dynoptic.model.fifosys.gfsm.GFSM addToQueueContentsHashMap
INFO: Creating a new partition for ch-states like: ChState]
Mar 03, 2014 11:33:06 PM dynoptic.model.export.GraphExporter exportGFSM
INFO: Exporting GFSM to: ./test.dot
Mar 03, 2014 11:33:06 PM dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests create
INFO: FSMStates[p_t, q_t]
Mar 03, 2014 11:33:06 PM dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests createConsistentAnonInit
INFO: i_a0
Mar 03, 2014 11:33:06 PM dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests createNamed
INFO: a
Mar 03, 2014 11:33:06 PM dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests createConsistentAnonIntermediate
INFO: a0.ep0L
Mar 03, 2014 11:33:06 PM dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests checkCreate
INFO: 11
Mar 03, 2014 11:33:06 PM mcscm.McScMTests testEmptyScmInput
INFO: Verify threw an exception: java.io.IOException: Cannot run program "../bin/mcscm/verify.native.linux.static" (in directory "."): error=2, No such file or directory
Mar 03, 2014 11:33:06 PM mcscm.McScMTests testSafeScmInput
INFO: Verify threw an exception: java.io.IOException: Cannot run program "../bin/mcscm/verify.native.linux.static" (in directory "."): error=2, No such file or directory
Mar 03, 2014 11:33:06 PM mcscm.McScMTests testUnsafeScmInputLen1
INFO: Verify threw an exception: java.io.IOException: Cannot run program "../bin/mcscm/verify.native.linux.static" (in directory "."): error=2, No such file or directory
Mar 03, 2014 11:33:06 PM mcscm.McScMTests testUnsafeScmInputLen2
INFO: Verify threw an exception: java.io.IOException: Cannot run program "../bin/mcscm/verify.native.linux.static" (in directory "."): error=2, No such file or directory
0-th run
Pass: 102, Fail: 0, Error: 16
{dynoptic.invariants.NeverFollowedByTests.create=474107828, dynoptic.invariants.NeverFollowedByTests.testSatisfies=9124044, dynoptic.invariants.NeverFollowedByTests.getFirstSecond=11186694, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString=24042265, dynoptic.invariants.NeverFollowedByTests.equality=10078194, dynoptic.invariants.AlwaysPrecedesTests.create=20146247, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies=16507364, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond=9244506, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString=16736583, dynoptic.invariants.AlwaysPrecedesTests.equality=6593336, dynoptic.invariants.EventuallyHappensTests.create=15551046, dynoptic.invariants.EventuallyHappensTests.testSatisfies=4456460, dynoptic.invariants.EventuallyHappensTests.getFirstSecond=13556991, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString=12908202, dynoptic.invariants.EventuallyHappensTests.equality=7769378, dynoptic.invariants.AlwaysFollowedByTests.create=16536195, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies=2750766, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond=10464256, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString=15691903, dynoptic.invariants.AlwaysFollowedByTests.equality=2491464, dynoptic.invariants.checkers.CheckersTests.checkEventually=9865063, dynoptic.invariants.checkers.CheckersTests.checkAFby=10566729, dynoptic.invariants.checkers.CheckersTests.checkNFby=10570364, dynoptic.invariants.checkers.CheckersTests.checkAP=32260111, dynoptic.model.alphabet.DistEventTypeTests.createRecv=28232897, dynoptic.model.alphabet.DistEventTypeTests.createSend=19716338, dynoptic.model.alphabet.DistEventTypeTests.createLocal=15424195, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend=13454560, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend=19387092, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv=22407722, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal=17828795, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1=14953414, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2=16921268, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM=61797411, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder=50404972, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM=17927749, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize=31993999, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM=15606430, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM=14581525, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM=21993871, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM=29382039, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage=19529275, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM=36245669, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid=26701859, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent=5525023, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent=6893267, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents=4058728, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents=9059439, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents=10376991, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest=43652900, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest=16992378, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest=23345886, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest=60097940, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState=30894133, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns=12378874, dynoptic.model.fifosys.cfsm.CFSMTests.scmString=66264048, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts=11567872, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM=5203365, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby=25944400, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby=24069776, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP=21996358, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby=31120136, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby=7716619, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP=10717362, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString=12199339, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM=5387820, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns=7250933, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1=6339206, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2=9159548, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString=8336744, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest=18477816, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition=18131577, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition=17585854, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition=14437015, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions=26168528, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState=13849268, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates=16463137, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString=28240462, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid=23862690, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition=23718690, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions=18056501, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid=28019523, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId=41757667, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId=40846165, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId=28002904, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId=28083210, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping=17728757, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals=30735070, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds=66427195, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames=37993964, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable=37900927, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals=41423089, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty=8753891, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState=15858811, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck=32304593, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq=18222023, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs=33217723, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState=12364924, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath=11871154, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM=46635636, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM=19918990, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace=22643286, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM=36875647, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance=2123682, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds=992591, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality=12173179, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create=29892135, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit=15464715, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon=1323488, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed=21140078, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate=16427975, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create=13502258, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate=11560294, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns=1142824, mcscm.McScMTests.testEmptyScmInput=30501336, mcscm.McScMTests.testSafeScmInput=22076524, mcscm.McScMTests.testUnsafeScmInputLen1=11760591, mcscm.McScMTests.testUnsafeScmInputLen2=18098149}

