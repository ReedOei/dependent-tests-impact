Execution time (of 1 machine and its iterations): 495906690
Number of tests selected out of total in original order: 40 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, mcscm.McScMTests.testSafeScmInput, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.invariants.AlwaysPrecedesTests.create, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM]
--------------------------
Execution time (of 1 machine and its iterations): 965751394
Number of tests selected out of total in original order: 38 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId]
--------------------------
Execution time (of 1 machine and its iterations): 1588390627
Number of tests selected out of total in original order: 109 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, mcscm.McScMTests.testSafeScmInput, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty]
--------------------------
Execution time (of 1 machine and its iterations): 2075427984
Number of tests selected out of total in original order: 51 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, mcscm.McScMTests.testUnsafeScmInputLen2, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, mcscm.McScMTests.testSafeScmInput, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby]
--------------------------
Execution time (of 1 machine and its iterations): 2521987966
Number of tests selected out of total in original order: 42 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1]
--------------------------
Execution time (of 1 machine and its iterations): 3066084080
Number of tests selected out of total in original order: 85 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, mcscm.McScMTests.testSafeScmInput, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds]
--------------------------
Execution time (of 1 machine and its iterations): 3552716140
Number of tests selected out of total in original order: 59 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, mcscm.McScMTests.testSafeScmInput, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.alphabet.DistEventTypeTests.createLocal]
--------------------------
Execution time (of 1 machine and its iterations): 4078958520
Number of tests selected out of total in original order: 81 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates]
--------------------------
Execution time (of 1 machine and its iterations): 4530488780
Number of tests selected out of total in original order: 51 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby]
--------------------------
Execution time (of 1 machine and its iterations): 4865283511
Number of tests selected out of total in original order: 19 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition]
--------------------------
Execution time (of 1 machine and its iterations): 5299289518
Number of tests selected out of total in original order: 43 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs]
--------------------------
Execution time (of 1 machine and its iterations): 5650320220
Number of tests selected out of total in original order: 16 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable]
--------------------------
Execution time (of 1 machine and its iterations): 6201758855
Number of tests selected out of total in original order: 94 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.alphabet.DistEventTypeTests.createSend, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, mcscm.McScMTests.testSafeScmInput, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, mcscm.McScMTests.testEmptyScmInput]
--------------------------
Execution time (of 1 machine and its iterations): 6562565320
Number of tests selected out of total in original order: 21 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2]
--------------------------
Execution time (of 1 machine and its iterations): 6857172038
Number of tests selected out of total in original order: 5 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond]
--------------------------
Execution time (of 1 machine and its iterations): 7261827360
Number of tests selected out of total in original order: 32 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.invariants.checkers.CheckersTests.checkEventually, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM]
--------------------------
Execution time (of 1 machine and its iterations): 7729474194
Number of tests selected out of total in original order: 54 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, mcscm.McScMTests.testSafeScmInput, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend]
--------------------------
Execution time (of 1 machine and its iterations): 8278609234
Number of tests selected out of total in original order: 89 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, mcscm.McScMTests.testSafeScmInput, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysFollowedByTests.create]
--------------------------
Execution time (of 1 machine and its iterations): 8839603397
Number of tests selected out of total in original order: 106 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString]
--------------------------
Execution time (of 1 machine and its iterations): 9444593902
Number of tests selected out of total in original order: 102 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.invariants.AlwaysFollowedByTests.equality, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns]
--------------------------
Execution time (of 1 machine and its iterations): 9954840424
Number of tests selected out of total in original order: 72 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP]
--------------------------
Execution time (of 1 machine and its iterations): 10544454864
Number of tests selected out of total in original order: 117 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.invariants.checkers.CheckersTests.checkAP]
--------------------------
Execution time (of 1 machine and its iterations): 10972100204
Number of tests selected out of total in original order: 50 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, mcscm.McScMTests.testSafeScmInput, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition]
--------------------------
Execution time (of 1 machine and its iterations): 11409464948
Number of tests selected out of total in original order: 35 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.invariants.NeverFollowedByTests.testSatisfies, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState]
--------------------------
Execution time (of 1 machine and its iterations): 11920462401
Number of tests selected out of total in original order: 80 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.createLocal]
--------------------------
Execution time (of 1 machine and its iterations): 12142423089
Number of tests selected out of total in original order: 1 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts]
--------------------------
Execution time (of 1 machine and its iterations): 12717940182
Number of tests selected out of total in original order: 114 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, mcscm.McScMTests.testSafeScmInput, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty]
--------------------------
Execution time (of 1 machine and its iterations): 13235685097
Number of tests selected out of total in original order: 73 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.invariants.checkers.CheckersTests.checkEventually, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString]
--------------------------
Execution time (of 1 machine and its iterations): 13768504123
Number of tests selected out of total in original order: 77 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, mcscm.McScMTests.testSafeScmInput, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, mcscm.McScMTests.testUnsafeScmInputLen1]
--------------------------
Execution time (of 1 machine and its iterations): 14346668168
Number of tests selected out of total in original order: 113 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, mcscm.McScMTests.testSafeScmInput, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.invariants.NeverFollowedByTests.testSatisfies]
--------------------------
Execution time (of 1 machine and its iterations): 14811340173
Number of tests selected out of total in original order: 45 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM]
--------------------------
Execution time (of 1 machine and its iterations): 15329341816
Number of tests selected out of total in original order: 84 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.AlwaysPrecedesTests.equality, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, mcscm.McScMTests.testSafeScmInput, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, mcscm.McScMTests.testEmptyScmInput, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit]
--------------------------
Execution time (of 1 machine and its iterations): 15858811247
Number of tests selected out of total in original order: 93 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.invariants.AlwaysPrecedesTests.create, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId]
--------------------------
Execution time (of 1 machine and its iterations): 16431597623
Number of tests selected out of total in original order: 113 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, mcscm.McScMTests.testSafeScmInput, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.alphabet.DistEventTypeTests.createLocal, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.EventuallyHappensTests.testSatisfies]
--------------------------
Execution time (of 1 machine and its iterations): 16843388952
Number of tests selected out of total in original order: 33 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck]
--------------------------
Execution time (of 1 machine and its iterations): 17407902568
Number of tests selected out of total in original order: 113 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, mcscm.McScMTests.testSafeScmInput, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, mcscm.McScMTests.testUnsafeScmInputLen1, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.alphabet.DistEventTypeTests.createRecv]
--------------------------
Execution time (of 1 machine and its iterations): 17937517921
Number of tests selected out of total in original order: 85 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, mcscm.McScMTests.testEmptyScmInput]
--------------------------
Execution time (of 1 machine and its iterations): 18293609878
Number of tests selected out of total in original order: 16 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.alphabet.DistEventTypeTests.createRecv]
--------------------------
Execution time (of 1 machine and its iterations): 18870949165
Number of tests selected out of total in original order: 102 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, mcscm.McScMTests.testSafeScmInput, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.alphabet.DistEventTypeTests.createSend, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.checkers.CheckersTests.checkEventually]
--------------------------
Execution time (of 1 machine and its iterations): 19451710449
Number of tests selected out of total in original order: 108 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, mcscm.McScMTests.testEmptyScmInput, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest]
--------------------------
Execution time (of 1 machine and its iterations): 19848550753
Number of tests selected out of total in original order: 30 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, mcscm.McScMTests.testEmptyScmInput, mcscm.McScMTests.testSafeScmInput, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates]
--------------------------
Execution time (of 1 machine and its iterations): 20418462396
Number of tests selected out of total in original order: 107 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, mcscm.McScMTests.testSafeScmInput, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.invariants.checkers.CheckersTests.checkEventually]
--------------------------
Execution time (of 1 machine and its iterations): 20838072316
Number of tests selected out of total in original order: 39 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.AlwaysFollowedByTests.create]
--------------------------
Execution time (of 1 machine and its iterations): 21415643285
Number of tests selected out of total in original order: 109 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString]
--------------------------
Execution time (of 1 machine and its iterations): 21984541444
Number of tests selected out of total in original order: 94 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.invariants.NeverFollowedByTests.testSatisfies, mcscm.McScMTests.testSafeScmInput, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.invariants.AlwaysFollowedByTests.equality, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid]
--------------------------
Execution time (of 1 machine and its iterations): 22383502381
Number of tests selected out of total in original order: 32 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.alphabet.DistEventTypeTests.createSend]
--------------------------
Execution time (of 1 machine and its iterations): 22847595851
Number of tests selected out of total in original order: 61 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest]
--------------------------
Execution time (of 1 machine and its iterations): 23220119859
Number of tests selected out of total in original order: 25 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, mcscm.McScMTests.testSafeScmInput, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns]
--------------------------
Execution time (of 1 machine and its iterations): 23789035953
Number of tests selected out of total in original order: 103 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, mcscm.McScMTests.testSafeScmInput, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest]
--------------------------
Execution time (of 1 machine and its iterations): 24316483639
Number of tests selected out of total in original order: 86 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, mcscm.McScMTests.testEmptyScmInput, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2]
--------------------------
Execution time (of 1 machine and its iterations): 24887857071
Number of tests selected out of total in original order: 107 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions]
--------------------------
Execution time (of 1 machine and its iterations): 25417674093
Number of tests selected out of total in original order: 90 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, mcscm.McScMTests.testEmptyScmInput, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.invariants.EventuallyHappensTests.equality, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create]
--------------------------
Execution time (of 1 machine and its iterations): 25834161394
Number of tests selected out of total in original order: 36 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId]
--------------------------
Execution time (of 1 machine and its iterations): 26116507197
Number of tests selected out of total in original order: 9 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create]
--------------------------
Execution time (of 1 machine and its iterations): 26654137769
Number of tests selected out of total in original order: 87 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid]
--------------------------
Execution time (of 1 machine and its iterations): 27253167759
Number of tests selected out of total in original order: 114 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.invariants.EventuallyHappensTests.create, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds]
--------------------------
Execution time (of 1 machine and its iterations): 27730510706
Number of tests selected out of total in original order: 66 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM]
--------------------------
Execution time (of 1 machine and its iterations): 28028848063
Number of tests selected out of total in original order: 9 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.NeverFollowedByTests.testSatisfies]
--------------------------
Execution time (of 1 machine and its iterations): 28537354775
Number of tests selected out of total in original order: 83 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage]
--------------------------
Execution time (of 1 machine and its iterations): 28952172282
Number of tests selected out of total in original order: 34 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.invariants.EventuallyHappensTests.equality]
--------------------------
Execution time (of 1 machine and its iterations): 29493668923
Number of tests selected out of total in original order: 90 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, mcscm.McScMTests.testSafeScmInput, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby]
--------------------------
Execution time (of 1 machine and its iterations): 30061181386
Number of tests selected out of total in original order: 105 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, mcscm.McScMTests.testEmptyScmInput]
--------------------------
Execution time (of 1 machine and its iterations): 30513097724
Number of tests selected out of total in original order: 49 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, mcscm.McScMTests.testEmptyScmInput, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid]
--------------------------
Execution time (of 1 machine and its iterations): 30990083213
Number of tests selected out of total in original order: 67 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, mcscm.McScMTests.testSafeScmInput, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates]
--------------------------
Execution time (of 1 machine and its iterations): 31422415424
Number of tests selected out of total in original order: 43 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString]
--------------------------
Execution time (of 1 machine and its iterations): 31964442348
Number of tests selected out of total in original order: 89 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM]
--------------------------
Execution time (of 1 machine and its iterations): 32380690564
Number of tests selected out of total in original order: 39 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, mcscm.McScMTests.testEmptyScmInput, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals]
--------------------------
Execution time (of 1 machine and its iterations): 32911428329
Number of tests selected out of total in original order: 92 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.invariants.checkers.CheckersTests.checkAFby, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.alphabet.DistEventTypeTests.createSend]
--------------------------
Execution time (of 1 machine and its iterations): 33205200297
Number of tests selected out of total in original order: 13 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition]
--------------------------
Execution time (of 1 machine and its iterations): 33770238183
Number of tests selected out of total in original order: 94 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, mcscm.McScMTests.testSafeScmInput, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, mcscm.McScMTests.testEmptyScmInput, mcscm.McScMTests.testUnsafeScmInputLen2]
--------------------------
Execution time (of 1 machine and its iterations): 34221699691
Number of tests selected out of total in original order: 41 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState]
--------------------------
Execution time (of 1 machine and its iterations): 34664023303
Number of tests selected out of total in original order: 49 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition]
--------------------------
Execution time (of 1 machine and its iterations): 35220717225
Number of tests selected out of total in original order: 106 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.invariants.checkers.CheckersTests.checkAFby, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM]
--------------------------
Execution time (of 1 machine and its iterations): 35778792498
Number of tests selected out of total in original order: 109 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, mcscm.McScMTests.testEmptyScmInput, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.alphabet.DistEventTypeTests.createRecv]
--------------------------
Execution time (of 1 machine and its iterations): 36032715860
Number of tests selected out of total in original order: 3 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM]
--------------------------
Execution time (of 1 machine and its iterations): 36492900263
Number of tests selected out of total in original order: 54 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.invariants.checkers.CheckersTests.checkNFby, mcscm.McScMTests.testSafeScmInput, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent]
--------------------------
Execution time (of 1 machine and its iterations): 37066105011
Number of tests selected out of total in original order: 104 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents]
--------------------------
Execution time (of 1 machine and its iterations): 37586902356
Number of tests selected out of total in original order: 78 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.alphabet.DistEventTypeTests.createSend]
--------------------------
Execution time (of 1 machine and its iterations): 38114764614
Number of tests selected out of total in original order: 97 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState]
--------------------------
Execution time (of 1 machine and its iterations): 38601422732
Number of tests selected out of total in original order: 66 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance]
--------------------------
Execution time (of 1 machine and its iterations): 39179173721
Number of tests selected out of total in original order: 116 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns]
--------------------------
Execution time (of 1 machine and its iterations): 39660260786
Number of tests selected out of total in original order: 55 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit]
--------------------------
Execution time (of 1 machine and its iterations): 40097862869
Number of tests selected out of total in original order: 43 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.invariants.AlwaysPrecedesTests.create, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby]
--------------------------
Execution time (of 1 machine and its iterations): 40559669931
Number of tests selected out of total in original order: 52 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, mcscm.McScMTests.testSafeScmInput, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.checkers.CheckersTests.checkAP]
--------------------------
Execution time (of 1 machine and its iterations): 41091176098
Number of tests selected out of total in original order: 103 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.invariants.EventuallyHappensTests.create, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition]
--------------------------
Execution time (of 1 machine and its iterations): 41648527618
Number of tests selected out of total in original order: 94 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.testSatisfies, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.invariants.AlwaysPrecedesTests.create, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath]
--------------------------
Execution time (of 1 machine and its iterations): 42115922615
Number of tests selected out of total in original order: 57 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, mcscm.McScMTests.testSafeScmInput, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty]
--------------------------
Execution time (of 1 machine and its iterations): 42610071634
Number of tests selected out of total in original order: 69 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, mcscm.McScMTests.testSafeScmInput, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby]
--------------------------
Execution time (of 1 machine and its iterations): 43094709490
Number of tests selected out of total in original order: 67 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.invariants.NeverFollowedByTests.testSatisfies, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, mcscm.McScMTests.testSafeScmInput, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState]
--------------------------
Execution time (of 1 machine and its iterations): 43591439186
Number of tests selected out of total in original order: 73 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, mcscm.McScMTests.testSafeScmInput, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates]
--------------------------
Execution time (of 1 machine and its iterations): 44142503636
Number of tests selected out of total in original order: 106 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions]
--------------------------
Execution time (of 1 machine and its iterations): 44722601272
Number of tests selected out of total in original order: 98 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.invariants.NeverFollowedByTests.equality, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent]
--------------------------
Execution time (of 1 machine and its iterations): 51169043880
Number of tests selected out of total in original order: 66 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 1
Test order list:
[dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM]

Dependent test list:
[Test: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM], The revealed different behavior: PASS, when executed after: [], Test: dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath], The revealed different behavior: PASS, when executed after: []]
--------------------------
Execution time (of 1 machine and its iterations): 51493546696
Number of tests selected out of total in original order: 7 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString]

Dependent test list:
[Test: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM], The revealed different behavior: PASS, when executed after: [], Test: dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath], The revealed different behavior: PASS, when executed after: []]
--------------------------
Execution time (of 1 machine and its iterations): 51943164747
Number of tests selected out of total in original order: 43 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.alphabet.DistEventTypeTests.createSend, mcscm.McScMTests.testSafeScmInput, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM]

Dependent test list:
[Test: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM], The revealed different behavior: PASS, when executed after: [], Test: dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath], The revealed different behavior: PASS, when executed after: []]
--------------------------
Execution time (of 1 machine and its iterations): 52320361120
Number of tests selected out of total in original order: 22 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2]

Dependent test list:
[Test: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM], The revealed different behavior: PASS, when executed after: [], Test: dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath], The revealed different behavior: PASS, when executed after: []]
--------------------------
Execution time (of 1 machine and its iterations): 52871718456
Number of tests selected out of total in original order: 88 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, mcscm.McScMTests.testSafeScmInput, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, mcscm.McScMTests.testUnsafeScmInputLen1]

Dependent test list:
[Test: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM], The revealed different behavior: PASS, when executed after: [], Test: dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath], The revealed different behavior: PASS, when executed after: []]
--------------------------
Execution time (of 1 machine and its iterations): 53217798895
Number of tests selected out of total in original order: 14 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage]

Dependent test list:
[Test: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM], The revealed different behavior: PASS, when executed after: [], Test: dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath], The revealed different behavior: PASS, when executed after: []]
--------------------------
Execution time (of 1 machine and its iterations): 53769422852
Number of tests selected out of total in original order: 100 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.model.alphabet.DistEventTypeTests.createSend, mcscm.McScMTests.testSafeScmInput, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString]

Dependent test list:
[Test: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM], The revealed different behavior: PASS, when executed after: [], Test: dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath], The revealed different behavior: PASS, when executed after: []]
--------------------------
Execution time (of 1 machine and its iterations): 54074954122
Number of tests selected out of total in original order: 6 / 118
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.invariants.AlwaysFollowedByTests.create]

Dependent test list:
[Test: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM], The revealed different behavior: PASS, when executed after: [], Test: dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath], The revealed different behavior: PASS, when executed after: []]
--------------------------
Total time (of all machines and iterations plus initial TestListGenerator): 2486455741683