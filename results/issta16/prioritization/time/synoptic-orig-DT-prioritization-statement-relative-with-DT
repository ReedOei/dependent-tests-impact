Execution time (of 1 machine and its iterations): 524185722
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, mcscm.McScMTests.testSafeScmInput, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, mcscm.McScMTests.testEmptyScmInput, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal]

Dependent test list:
[Test: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM], The revealed different behavior: PASS, when executed after: [], Test: dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath], The revealed different behavior: PASS, when executed after: []]
--------------------------
Total time (of all machines and iterations plus initial TestListGenerator): 700694254

Time each test takes to run in the new order:
{dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby=82137611, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath=6135944, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM=39256153, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate=2032371, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest=17524796, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest=18596478, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid=4660467, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace=2413655, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq=2596448, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState=1064910, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate=2949111, dynoptic.invariants.checkers.CheckersTests.checkAP=3437182, dynoptic.invariants.checkers.CheckersTests.checkNFby=2026189, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState=2482545, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents=2020300, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns=1943870, dynoptic.invariants.checkers.CheckersTests.checkAFby=2397192, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM=2280830, dynoptic.invariants.checkers.CheckersTests.checkEventually=2769937, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality=1148275, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs=1807484, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId=3108798, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies=1781837, dynoptic.invariants.NeverFollowedByTests.testSatisfies=1770158, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create=1624072, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid=2595194, mcscm.McScMTests.testSafeScmInput=4659501, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies=2329323, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals=5294891, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM=9562503, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId=3701063, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck=2005588, dynoptic.invariants.NeverFollowedByTests.create=1838231, dynoptic.invariants.EventuallyHappensTests.testSatisfies=1669945, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby=6347896, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP=3813211, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping=2628402, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState=1283724, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize=2433579, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage=4427620, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds=879424, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM=3728629, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState=1479662, dynoptic.invariants.AlwaysFollowedByTests.equality=1305759, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns=969359, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents=1461742, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit=1523622, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString=1540706, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString=1764628, dynoptic.invariants.EventuallyHappensTests.getFirstSecond=1380513, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby=2590534, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest=6262890, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM=4235686, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents=1284455, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed=1414729, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM=1305643, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby=3410753, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions=1471050, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns=741553, mcscm.McScMTests.testUnsafeScmInputLen2=2598972, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty=1202194, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString=6489925, dynoptic.invariants.AlwaysPrecedesTests.equality=1713545, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon=1182407, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP=2620937, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM=3608893, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates=1652115, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance=846862, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts=1527626, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM=3570200, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM=3553662, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder=3814508, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString=1680674, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create=1670739, dynoptic.invariants.EventuallyHappensTests.equality=1456643, dynoptic.invariants.NeverFollowedByTests.equality=1480492, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions=1593183, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition=1798846, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid=1810585, mcscm.McScMTests.testUnsafeScmInputLen1=3205462, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition=1679707, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition=1527463, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition=1377053, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString=1851894, dynoptic.model.fifosys.cfsm.CFSMTests.scmString=2322107, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM=1484282, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString=1790155, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2=1340277, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1=1293708, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent=1133443, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent=1029195, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM=3205855, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM=2754668, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest=6226496, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest=5444463, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString=1487989, mcscm.McScMTests.testEmptyScmInput=1901382, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond=1220873, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond=1623007, dynoptic.invariants.NeverFollowedByTests.getFirstSecond=1074831, dynoptic.invariants.EventuallyHappensTests.create=1497599, dynoptic.invariants.AlwaysPrecedesTests.create=1403448, dynoptic.invariants.AlwaysFollowedByTests.create=1392307, dynoptic.model.alphabet.DistEventTypeTests.createRecv=2123015, dynoptic.model.alphabet.DistEventTypeTests.createSend=1893480, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv=1734133, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend=1329057, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable=2140928, dynoptic.model.alphabet.DistEventTypeTests.createLocal=2102807, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId=4839691, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds=2824324, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames=1433577, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1=996216, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2=1165086, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId=1115540, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend=1493302, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals=1152605, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal=1152623}