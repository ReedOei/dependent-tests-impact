Execution time (of 1 machine and its iterations): 559900037
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.invariants.NeverFollowedByTests.create, mcscm.McScMTests.testSafeScmInput, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, mcscm.McScMTests.testUnsafeScmInputLen2, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, dynoptic.invariants.NeverFollowedByTests.testSatisfies, mcscm.McScMTests.testEmptyScmInput, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality]

Dependent test list:
[Test: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM], The revealed different behavior: PASS, when executed after: [], Test: dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath], The revealed different behavior: PASS, when executed after: []]
--------------------------
Total time (of all machines and iterations plus initial TestListGenerator): 722478482

Time each test takes to run in the new order:
{dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath=65340130, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM=42338863, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate=1998855, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM=18157956, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby=13246853, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby=5473574, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace=2798176, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP=3585451, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby=4295332, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP=4080009, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby=4597385, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM=2003038, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs=1545495, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM=15150412, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid=4343811, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest=7235815, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest=6613032, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest=10365647, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM=4309778, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder=5012647, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM=5278158, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage=4083428, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts=2349203, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM=4233322, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM=4263822, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest=3743085, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM=4060646, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest=8416973, dynoptic.model.fifosys.cfsm.CFSMTests.scmString=3046586, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize=2968311, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns=1092546, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM=2978813, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM=1423840, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq=1918503, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create=1173002, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns=1463692, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate=2192067, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString=1768813, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals=1323332, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState=779294, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM=1248915, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState=1565465, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState=1615462, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId=2461023, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions=1545086, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState=1610732, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition=1511206, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates=1345300, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck=1683722, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString=1746635, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition=1515767, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed=1397669, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit=1371968, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString=1620841, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon=916305, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString=1682371, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString=1428732, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty=1377104, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents=1435935, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents=1418775, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents=1272443, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent=1362384, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns=1095446, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2=1734267, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping=2183783, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString=2735635, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId=2917448, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition=1495989, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent=1390757, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString=2994529, dynoptic.invariants.AlwaysFollowedByTests.equality=1180973, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1=1241053, dynoptic.invariants.AlwaysPrecedesTests.equality=1077610, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions=1143437, dynoptic.invariants.EventuallyHappensTests.equality=1070982, dynoptic.invariants.EventuallyHappensTests.getFirstSecond=1121474, dynoptic.invariants.NeverFollowedByTests.equality=1101296, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition=1111818, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create=1153300, dynoptic.invariants.NeverFollowedByTests.create=1719094, mcscm.McScMTests.testSafeScmInput=3220693, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond=1195014, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond=1225634, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid=2102805, mcscm.McScMTests.testUnsafeScmInputLen2=2667890, mcscm.McScMTests.testUnsafeScmInputLen1=2438143, dynoptic.invariants.NeverFollowedByTests.getFirstSecond=1137363, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies=1166808, dynoptic.invariants.EventuallyHappensTests.create=1525142, dynoptic.invariants.EventuallyHappensTests.testSatisfies=1677209, dynoptic.invariants.AlwaysPrecedesTests.create=1565595, dynoptic.invariants.AlwaysFollowedByTests.create=1494680, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies=1166798, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid=1178712, dynoptic.invariants.NeverFollowedByTests.testSatisfies=1105824, mcscm.McScMTests.testEmptyScmInput=2240636, dynoptic.model.alphabet.DistEventTypeTests.createRecv=2153821, dynoptic.model.alphabet.DistEventTypeTests.createSend=2126307, dynoptic.invariants.checkers.CheckersTests.checkAFby=2316315, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv=1948392, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend=1687540, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable=2331561, dynoptic.model.alphabet.DistEventTypeTests.createLocal=2140560, dynoptic.invariants.checkers.CheckersTests.checkNFby=1536298, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId=2044419, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds=2790404, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames=4879799, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1=1120162, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2=1012239, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId=1122603, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend=1516771, dynoptic.invariants.checkers.CheckersTests.checkAP=1919437, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals=1247229, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal=1158544, dynoptic.invariants.checkers.CheckersTests.checkEventually=1161253, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds=579370, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance=455541, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality=460712}