Execution time (of 1 machine and its iterations): 556820055
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, mcscm.McScMTests.testUnsafeScmInputLen2, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.NeverFollowedByTests.testSatisfies, mcscm.McScMTests.testEmptyScmInput, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance]

Dependent test list:
[Test: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM], The revealed different behavior: PASS, when executed after: [], Test: dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath], The revealed different behavior: PASS, when executed after: []]
--------------------------
Total time (of all machines and iterations plus initial TestListGenerator): 663601141

Time each test takes to run in the new order:
{dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby=75441663, dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath=4841489, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM=37608306, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate=1990258, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby=3982436, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP=5294569, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby=4321020, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby=4677207, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP=4144718, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM=16072273, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace=2758555, dynoptic.model.fifosys.cfsm.CFSMTests.scmString=2754238, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest=6465499, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest=6385475, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest=15844678, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest=6274115, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid=4222891, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM=5053035, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM=5139454, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage=3962435, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM=4827974, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts=2226614, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest=7553362, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM=4264501, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM=4005581, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM=4239475, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs=2200166, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder=5251498, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM=3963754, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM=1567488, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize=2563896, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString=1813943, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns=919282, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM=3005277, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState=1667240, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals=2235399, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq=1390270, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns=1393587, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate=2370332, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions=1525099, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition=1509011, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState=1276516, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create=1065101, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString=2260666, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates=1685671, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition=1392099, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM=1238680, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2=1566527, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId=2336932, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString=1723605, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck=1647474, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions=1273855, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition=1255595, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns=834181, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit=1402165, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState=785570, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1=1441557, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString=1651572, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString=1657252, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString=1261793, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState=1050216, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents=1404801, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents=1407413, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent=1435397, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents=1336094, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition=1198538, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid=1212278, mcscm.McScMTests.testSafeScmInput=3041346, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty=1139698, mcscm.McScMTests.testUnsafeScmInputLen2=2229424, mcscm.McScMTests.testUnsafeScmInputLen1=2266677, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed=1295827, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon=902284, dynoptic.invariants.AlwaysFollowedByTests.equality=1129203, dynoptic.invariants.AlwaysPrecedesTests.equality=1088201, dynoptic.invariants.EventuallyHappensTests.equality=1698613, dynoptic.invariants.NeverFollowedByTests.equality=1157373, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping=1635096, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent=1024300, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId=1981305, dynoptic.invariants.checkers.CheckersTests.checkAP=2357455, dynoptic.invariants.checkers.CheckersTests.checkNFby=1766208, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies=1286684, dynoptic.invariants.NeverFollowedByTests.testSatisfies=1503207, mcscm.McScMTests.testEmptyScmInput=2027557, dynoptic.invariants.checkers.CheckersTests.checkAFby=1569829, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies=1200306, dynoptic.invariants.NeverFollowedByTests.create=1477558, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString=1319998, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid=1622095, dynoptic.invariants.checkers.CheckersTests.checkEventually=1435815, dynoptic.invariants.EventuallyHappensTests.testSatisfies=1118531, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality=761566, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create=1081057, dynoptic.invariants.EventuallyHappensTests.getFirstSecond=1181759, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond=1196921, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond=1529566, dynoptic.invariants.NeverFollowedByTests.getFirstSecond=997741, dynoptic.invariants.EventuallyHappensTests.create=1385617, dynoptic.invariants.AlwaysPrecedesTests.create=1415937, dynoptic.invariants.AlwaysFollowedByTests.create=1428775, dynoptic.model.alphabet.DistEventTypeTests.createRecv=2004672, dynoptic.model.alphabet.DistEventTypeTests.createSend=1805115, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv=1986561, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend=1510861, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable=2051243, dynoptic.model.alphabet.DistEventTypeTests.createLocal=1733688, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId=2312461, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds=11546056, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames=1843256, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1=1530217, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2=1452002, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId=1466580, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend=1427639, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals=961130, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal=954117, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds=418364, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance=412091}