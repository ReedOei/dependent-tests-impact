Execution time (of 1 machine and its iterations): 546570390
Number of DTs not fixed: 0
Number of DTs fixed: 0
Test order list:
[dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents, dynoptic.invariants.checkers.CheckersTests.checkAFby, dynoptic.invariants.checkers.CheckersTests.checkNFby, dynoptic.invariants.checkers.CheckersTests.checkAP, dynoptic.invariants.checkers.CheckersTests.checkEventually, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM, mcscm.McScMTests.testSafeScmInput, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString, dynoptic.invariants.EventuallyHappensTests.getFirstSecond, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies, dynoptic.invariants.EventuallyHappensTests.testSatisfies, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies, dynoptic.invariants.NeverFollowedByTests.testSatisfies, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString, mcscm.McScMTests.testUnsafeScmInputLen2, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid, mcscm.McScMTests.testUnsafeScmInputLen1, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString, dynoptic.model.fifosys.cfsm.CFSMTests.scmString, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString, mcscm.McScMTests.testEmptyScmInput, dynoptic.invariants.AlwaysFollowedByTests.equality, dynoptic.invariants.AlwaysPrecedesTests.equality, dynoptic.invariants.EventuallyHappensTests.equality, dynoptic.invariants.NeverFollowedByTests.equality, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.getFirstSecond, dynoptic.invariants.NeverFollowedByTests.create, dynoptic.invariants.EventuallyHappensTests.create, dynoptic.invariants.AlwaysPrecedesTests.create, dynoptic.invariants.AlwaysFollowedByTests.create, dynoptic.model.alphabet.DistEventTypeTests.createRecv, dynoptic.model.alphabet.DistEventTypeTests.createSend, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable, dynoptic.model.alphabet.DistEventTypeTests.createLocal, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal]

Dependent test list:
[Test: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM], The revealed different behavior: PASS, when executed after: [], Test: dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM, Intended behavior: FAILURE, when executed after: [dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath], The revealed different behavior: PASS, when executed after: []]
--------------------------
Total time (of all machines and iterations plus initial TestListGenerator): 750515322

Time each test takes to run in the new order:
{dynoptic.model.fifosys.gfsm.GFSMPathTests.createPath=61774236, dynoptic.model.fifosys.gfsm.GFSMTests.gfsmToCFSM=43563941, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkCreate=1873368, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyNFby=12109719, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSM=17269226, dynoptic.model.export.GraphExporterTests.oneFSMTwoStatesTest=15893407, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMState=1182559, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.enqueueDequeueSeq=2792626, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.minimizeTest=5857886, dynoptic.model.fifosys.gfsm.GFSMTests.checkGFSMFromOneTrace=2387148, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonIntermediate=2760629, dynoptic.model.fifosys.gfsm.GFSMStateTests.stateWithObs=2217513, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.cloneMCState=1599223, dynoptic.model.automaton.EventTypeEncodingsTests.encodeDifferentEvents=1832694, dynoptic.invariants.checkers.CheckersTests.checkAFby=5275369, dynoptic.invariants.checkers.CheckersTests.checkNFby=2553939, dynoptic.invariants.checkers.CheckersTests.checkAP=3119298, dynoptic.invariants.checkers.CheckersTests.checkEventually=2947866, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.checkInitAcceptPid=2747088, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAP=4042751, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSMWithTxns=1754181, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelIdMapping=2871758, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.traceIds=1100045, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.equality=1265946, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.localEventsChannelId=3114282, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithAFby=4069162, dynoptic.model.fifosys.gfsm.observed.ObsMultFSMStateTests.create=4516476, dynoptic.model.fifosys.gfsm.GFSMTests.exportGFSM=6974601, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.toStringCheck=1907273, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffInitLabelFSM=4097655, mcscm.McScMTests.testSafeScmInput=3324062, dynoptic.model.fifosys.cfsm.fsm.BadStateTests.createAndScmString=1488347, dynoptic.invariants.EventuallyHappensTests.scmBadStatesString=1887849, dynoptic.invariants.EventuallyHappensTests.getFirstSecond=1438800, dynoptic.model.fifosys.gfsm.GFSMTests.createEmptyGFSM=1831604, dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysStateTests.checkTxns=931556, dynoptic.invariants.AlwaysPrecedesTests.testSatisfies=1409974, dynoptic.invariants.EventuallyHappensTests.testSatisfies=1396520, dynoptic.invariants.AlwaysFollowedByTests.testSatisfies=1343231, dynoptic.invariants.NeverFollowedByTests.testSatisfies=1361500, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAFby=2727269, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffPid=3451390, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachCommEventsTest=6500746, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.equals=1476138, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createNamed=1383145, dynoptic.model.automaton.EventTypeEncodingsTests.encodeThreeEvents=1425382, dynoptic.model.fifosys.cfsm.CFSMTests.augmentWithNFby=3682587, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createAnon=1105823, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesTwoTransitions=1740604, dynoptic.model.fifosys.cfsm.CFSMStateTests.createCFSMStateWithTxns=844292, dynoptic.model.fifosys.cfsm.McScMCFSMTests.verifyAP=2981951, dynoptic.model.fifosys.gfsm.observed.ObsFSMStateTests.createConsistentAnonInit=2094510, dynoptic.model.fifosys.channel.channelstate.MutibleMultiChStateTests.isEmpty=1611530, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentFSMDiffEventOrder=4376341, dynoptic.model.fifosys.cfsm.fsm.FSMTests.scmString=1675703, mcscm.McScMTests.testUnsafeScmInputLen2=2574531, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.scmString=2071400, dynoptic.model.fifosys.gfsm.GFSMStateTests.createGFSMState=1087054, dynoptic.model.fifosys.gfsm.observed.ObsDistEventTypeTests.buildInstance=777927, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.twoTransitions=1273012, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.oneTransition=1172698, dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.wrongEventPid=1427645, mcscm.McScMTests.testUnsafeScmInputLen1=2429345, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createFSM=1273067, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM2=1454600, dynoptic.model.fifosys.cfsm.fsm.FSMTests.createBadFSM1=1449975, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentDiffAcceptLabelFSM=3424803, dynoptic.invariants.AlwaysPrecedesTests.scmBadStatesString=2241349, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicSingleInitState=1582924, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicTwoStatesOneTransition=1922191, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.nonDeterministicMultipleInitStates=1603308, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateWithTransition=1550448, dynoptic.model.fifosys.cfsm.fsm.FSMMinimizationTests.isDeterministicOneStateNoTransition=1263160, dynoptic.model.fifosys.gfsm.observed.dag.ObsDagNodeTests.create=1158052, dynoptic.invariants.NeverFollowedByTests.scmBadStatesString=1585293, dynoptic.model.fifosys.cfsm.CFSMTests.scmString=1785988, dynoptic.model.fifosys.cfsm.CFSMTests.initsAccepts=1430677, dynoptic.model.fifosys.cfsm.CFSMTests.createEmptyCFSM=1333822, dynoptic.model.automaton.EventTypeEncodingsTests.encodeTwoEvents=1382949, dynoptic.model.automaton.EventTypeEncodingsTests.encodeOneEvent=1126368, dynoptic.model.automaton.EventTypeEncodingsTests.encodeZeroEvent=993949, dynoptic.model.export.GraphExporterTests.twoFSMsTwoStatesEachLocalEventsTest=6361133, dynoptic.model.export.GraphExporterTests.oneFSMOneStateTest=6239678, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentSameLanguage=3587610, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoStateFSM=3186002, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoAcceptStateFSM=3332002, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentTwoInitStateFSM=3230615, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentOneStateFSM=2547074, dynoptic.model.automaton.EncodedAutomatonTests.isEquivalentCFSMFalseDiffSize=2292775, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.invChannelId=2171149, dynoptic.invariants.AlwaysFollowedByTests.scmBadStatesString=1466204, mcscm.McScMTests.testEmptyScmInput=2143029, dynoptic.invariants.AlwaysFollowedByTests.equality=1210570, dynoptic.invariants.AlwaysPrecedesTests.equality=1066315, dynoptic.invariants.EventuallyHappensTests.equality=1029415, dynoptic.invariants.NeverFollowedByTests.equality=1036833, dynoptic.invariants.AlwaysFollowedByTests.getFirstSecond=1029476, dynoptic.invariants.AlwaysPrecedesTests.getFirstSecond=984878, dynoptic.invariants.NeverFollowedByTests.getFirstSecond=1530863, dynoptic.invariants.NeverFollowedByTests.create=1432648, dynoptic.invariants.EventuallyHappensTests.create=1540535, dynoptic.invariants.AlwaysPrecedesTests.create=1531703, dynoptic.invariants.AlwaysFollowedByTests.create=1490957, dynoptic.model.alphabet.DistEventTypeTests.createRecv=2117916, dynoptic.model.alphabet.DistEventTypeTests.createSend=1898430, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingRecv=2049167, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingSend=1626386, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorUnparseable=2235902, dynoptic.model.alphabet.DistEventTypeTests.createLocal=1780710, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createChannelId=1934428, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIds=7862942, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.parseChannelIdsErrorDuplicateChNames=1736241, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr1=1401763, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingErr2=1560016, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.createBadChannelId=1290153, dynoptic.model.alphabet.DistEventTypeTests.createSynthSend=1503198, dynoptic.model.fifosys.channel.channelid.ChannelIdTests.channelIdEquals=1090363, dynoptic.model.alphabet.DistEventTypeTests.checkEventStrParsingLocal=1073217}